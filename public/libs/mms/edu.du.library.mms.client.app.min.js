var MMS=MMS||{};MMS.namespace=function(d){var c=d.split("."),b=MMS,a;if(c[0]==="MMS"){c=c.slice(1)}for(a=0;a<c.length;a+=1){if(typeof b[c[a]]==="undefined"){b[c[a]]={}}b=b[c[a]]}return b};MMS.namespace("MMS.utils");MMS.utils=(function(c){var b,d,f,a,e;a={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};b=function(g){g.timeout=5000;g.error=function(i,h){c("#error").html("<h4 class='alert_error'>An error has occurred ("+h+").  Please contact library-support@du.edu for assistance.</h4>")};g.statusCode={403:function(){alert("Session expired");MMS.view.createView(a);c("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};c(document).ajaxStart(function(){c.fancybox.showLoading()});c(document).ajaxStop(function(){c.fancybox.hideLoading()});c.ajax(g)};f=function(){var g={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(h){if(typeof h===null||h.isFedoraUp!==200||h.isSolrUp!=="OK"){c("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");c("#authenticate").attr("disabled","disabled")}}};b(g)};e=function(g){return g.replace(/</g,"").replace(/>/g,"")};d=function(g){if(g!=="#metadata-forms"){c(".optional_fields").hide();c("#optional_fields").hide()}c("article:not("+g+", .breadcrumbs)").hide()};return{doAjax:function(g){b(g)},focusForm:function(g){d(g)},sanitizeInput:function(g){return e(g)},pingServices:function(){f()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(g){var b,x,o,w,s,e,p,t,m,q,f,h,k,i,r,d,n,a,j,y,v,c,l,u;u={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};h=function(){var z="";z+='<article id="controlled-vocabulary-section" class="module width_quarter">';z+="<header><h3>Controlled Vocabularies</h3></header>";z+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';z+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';z+="<p>";z+='<select id="vocab-options" name="vocab-options">';z+='<option value="ulan" selected>ULAN</option>';z+='<option value="aat">AAT</option>';z+='<option value="locnames">LC-Names</option>';z+='<option value="locsubjects">LC-Subjects</option>';z+='<option value="aloracreators">Alora-Creators</option>';z+='<option value="alorasubjects">Alora-Subjects</option>';z+="</select>&nbsp;";z+='<input id="getVocabularies" type="submit" value="Go" />';z+="</p>";z+="</div>";z+='<div id="vocabulary-results"></div>';z+="</article>";return z};c=function(){g("#search-results").empty();MMS.view.createView(u);k();v();g(".current").html("Creator");g("#controlled-vocabulary-form").show()};l=function(){g("#search-results").empty();MMS.view.createView(u);y();v();g(".current").html("Subject");g("#controlled-vocabulary-form").show()};v=function(){g("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){a()}})};a=function(){t={type:"POST",url:MMS.configObj.creatorapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(t)};j=function(){t={type:"POST",url:MMS.configObj.subjectapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(t)};y=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Subject";z+="</label>";z+="<input id='subject' name='subject[]' type='text' class='required' />";z+="</fieldset>";z+="<label>";g("#controlledvocabulary").append(z)};k=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Creator";z+="</label>";z+="<input id='creator' name='creator[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Creator Alternative";z+="</label>";z+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Nationality";z+="</label>";z+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Role";z+="</label>";z+="<input id='description-role' name='description.role[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Biography";z+="</label>";z+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Sex";z+="</label>";z+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Source";z+="</label>";z+="<input id='source' name='source' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Earliest Date";z+="</label>";z+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Latest Date";z+="</label>";z+="<input id='latestdates' name='latestdates' type='text' class='required' />";z+="</fieldset>";g("#controlledvocabulary").append(z)};m=function(){return sessionStorage.getItem("roleID")};b=function(){var A,z=g("input#vocabTerm").val(),B=g("select#vocab-options");z=MMS.utils.sanitizeInput(z);if(B.length>0){A=B.val()}t={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+z+"&option="+A,dataType:"json",cache:true,success:function(C){w(A,C)}};MMS.utils.doAjax(t)};q=function(C,z,B){var A="id="+C+"&vocabType="+z;if(B===undefined){var B=function(D){f(C,D)}}t={type:"GET",url:MMS.configObj.vocabUrl,data:A,dataType:"json",cache:true,success:B};MMS.utils.doAjax(t)};f=function(C,z){var A="",B=g("span#"+C+"-toggle").text();if(B==="( + )"){g("span#"+C+"-toggle").text("( - )");g("div#"+C+"-vocab-data").show()}else{if(B==="( - )"){g("div#"+C+"-vocab-data").hide();g("span#"+C+"-toggle").text("( + )")}}g.each(z,function(D,E){if(E.subject_id!==undefined){A+="<p><strong>Subject id:</strong> "+E.subject_id+"</p>"}if(E.nationalities!==""){A+="<p><strong>Nationality:</strong> "+E.nationalities+"</p>"}if(E.role_id!==""){A+="<p><strong>Role:</strong> "+E.role_id+"</p>"}if(E.preferred_terms_source_id!==""){A+="<p><strong>Source:</strong> "+E.preferred_terms_source_id+"</p>"}if(E.non_preferred_terms_term_text!==""){A+="<p><strong>Alternative name:</strong> "+E.non_preferred_terms_term_text+"</p>"}if(E.preferred_biographies_biography_text!==""){A+="<p><strong>Bio:</strong> "+E.preferred_biographies_biography_text+"</p>"}if(E.preferred_biographies_birth_date!==""){A+="<p><strong>Birth date:</strong> "+E.preferred_biographies_birth_date+"</p>"}if(E.preferred_biographies_death_date!==""){A+="<p><strong>Death date:</strong> "+E.preferred_biographies_death_date+"</p>"}if(E.preferred_biographies_sex!==""){A+="<p><strong>Sex:</strong> "+E.preferred_biographies_sex+"</p>"}});g("div#"+C+"-vocab-data").empty().append(A)};p=function(C,A,z){var B;while(A<50){B=g("#"+z+"-"+A).val();if(B===""){g("#"+z+"-"+A).val(C);break}A++}return B};e=function(A,C){var B,F,G,z,D,E=1,I=function(J){n(J)},H=g("select#vocab-options");if(m()=="2"){g("#"+A).removeAttr("disabled");g("#"+A).attr("readonly","readonly")}if(H.length>0){D=H.val()}if(D==="ulan"||D==="locnames"||D==="aloracreators"){if(D!=="locnames"){q(A,D,I)}B=g("#creator-0").val();if(B===""){p(C,0,"creator")}else{F=g("#coverage-spatial-repository-0").val(C);if(F===""){p(C,0,"coverage-spatial-repository")}else{p(C,E,"coverage-spatial-repository")}}}else{if(D==="aat"||D==="locsubjects"||D==="alorasubjects"){z=g("#coverage-temporal-styleperiod-0").val();if(z===""){p(C,0,"coverage-temporal-styleperiod")}else{z=p(C,E,"coverage-temporal-styleperiod")}if(z===undefined){G=g("#subject-0").val();if(G===""){p(C,0,"subject")}else{p(C,E,"subject")}}}}};n=function(z){var A="";g.each(z,function(B,C){A+='<input name="creator.alternative[]" type="hidden" value="'+C.non_preferred_terms_term_text+'" />';A+='<input name="description.creatorbio[]" type="hidden" value="'+C.preferred_biographies_biography_text+'" />';A+='<input name="description.nationality[]" type="hidden" value="'+C.nationalities+'" />';A+='<input name="description.role[]" type="hidden" value="'+C.role_id+'" />';A+='<input name="description.lifedates[]" type="hidden" value="'+C.preferred_biographies_birth_date+"-"+C.preferred_biographies_death_date+'" />';A+='<input name="source[]" type="hidden" value="'+C.preferred_terms_source_id+'" />'});g("div#metadata").append(A)};w=function(B,C){var z,A="";if(B==="ulan"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+x+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"ulan\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="aat"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+x+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="locnames"||B==="locsubjects"){z=C.loc;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+x+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+x+", $(this).text());return false;'>"+C.loc[D].title+"</a><br /><a href='#'>"+E.id+"</a></li></ul></p>"})}else{if(B==="aloracreators"||B==="alorasubjects"){z=C.local;if(z.message!==undefined){A+="<p><ul><li>No results found.</li></ul></p>";g("div#vocabulary-results").empty().append(A);return}g.each(z,function(D,E){if(B==="aloracreators"){A+="<p><ul><li><a href='#' id='"+x+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"local\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{A+="<p><ul><li><a href='#' id='"+x+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}g("div#vocabulary-results").empty().append(A)};s=function(){g("#controlled-vocabulary-section").show();var z=h();g("#content").append(z);g("input#vocabTerm").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("select#vocab-options").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("input#getVocabularies").on("click",function(){b()})};r=function(){g("select#type-arttypes").val("");g("select#type-timeperiods").val("");g("select#type-instructors").val("")};i=function(C){var z=["arttypes","timeperiods","instructors"],B={},A;if(C===undefined){C=function(D){d(D)}}for(A=0;A<z.length;A++){B.type="GET";B.url=MMS.configObj.vocabUrl;B.data="vocabType="+z[A];B.dataType="json";B.cache=true;B.success=C;MMS.utils.doAjax(B)}};d=function(B){var B=g.parseJSON(B);var C;var E;var D=sessionStorage.getItem("arttypes");var A=sessionStorage.getItem("timeperiods");var z=sessionStorage.getItem("instructors");C="<option value=''>---Select an term---</option>";g.each(B,function(F,G){if(G.type){E=G.type}if(G.term===D||G.term===A||G.term===z){C+="<option value='"+G.term+"' selected>"+G.term+"</option>"}else{C+="<option value='"+G.term+"'>"+G.term+"</option>"}});g("select#type-"+E).html(C)};o=function(){g("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){b()},displayControlledVocabulariesBox:function(z,A){s(z,A)},selectVocabularyTerm:function(A,z){e(A,z)},getTermData:function(A,z){q(A,z)},getLists:function(){i()},resetLists:function(){r()},loadCreatorForm:function(){c()},loadSubjectForm:function(){l()},init:function(){o()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(w){var A,E,l,q,B,o,x="#metadata",j="#metadata-form",r="#metadata-forms",k,h,n,a,f,y,d,C,z,i,s,e,g,m,b,v,c,t,D,p,u;A={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};E=function(G){var F=n(v,"displayOrder");w.each(F,function(H,I){a=k(I);a.appendTo(x)});w(x).append("<input name='objectType' type='hidden' value='"+G+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};t=function(G){var H;var F;if(G==="queue"){F="Back to Review Queue"}else{if(G==="search"){w("#search-results").hide();F="Back to Search Results"}}H="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+G+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+F+"</a>";return H};D=function(F){if(F==="queue"){MMS.queue.getItems()}else{if(F==="search"){w("#search-results").show();w("#content").empty()}}w("#clone-record").empty();w("#controlled-vocabulary-section").hide();return};l=function(H,I,M){var F=100,K="",L,G;w(".current").html("Edit Metadata");w(x).empty();K+="<div id='edit-mode'></div>";K+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";K+="<fieldset id='isPid'>";K+="<label>pid</label>";K+="<input type='text' value='"+I+"'  disabled />";K+="</fieldset>";if(M==="queue"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}else{if(M==="search"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}}v=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var J=n(v,"displayOrder");w.each(J,function(O,P){w.each(H,function(Q,R){if(P.element===Q){L=Q.replace(".","-");if(typeof R==="string"){K+="<fieldset class='"+L+"-0'>";if(P.repeat==="true"){K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+Q+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+Q+"'><span>Add</span></a></span></label>"}else{K+="<label>"+P.label+"</label>"}if(P.type==="select"){if(P.required==="true"){var S="class='required"}if(P.element==="type.arttype"){sessionStorage.setItem("arttypes",R)}else{if(P.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",R)}else{if(P.element==="instructor"){sessionStorage.setItem("instructors",R)}}}K+="<select name='"+P.element+"[]' id='"+P.id+"' "+S+"'></select>"}if(P.type==="text"){K+="<input id='"+Q+"-"+F+"' name='"+Q+"[]' type='text' value='"+R+"' "+S+" />"}if(P.type==="textarea"){K+="<textarea id='"+Q+"-"+F+"' name='"+Q+"[]' rows='7' cols='55' "+S+">"+R+"</textarea> "}K+="</fieldset>"}if(typeof R==="object"){w.each(R,function(U,T){F++;if(F>101){K+="<fieldset class='"+L+"-"+F+"'>"}else{K+="<fieldset class='"+L+"-0'>"}if(P.repeat==="true"){if(F>101){K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+Q+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+Q+"'><span>Del</span></a></span></label>"}else{K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+Q+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+Q+"'><span>Add</span></a></span></label>"}}else{K+="<label>"+P.label+"</label>"}if(P.type==="text"){K+="<input id='"+Q+"-"+F+"' name='"+Q+"[]' type='text' value='"+T+"' "+S+" />"}if(P.type==="textarea"){K+="<textarea id='"+Q+"-"+F+"' name='"+Q+"[]' rows='7' cols='55' "+S+">"+T+"</textarea> "}K+="</fieldset>"})}}})});w.each(H,function(O,P){if(O==="collection"){K+="<input id='"+O+"-0' name='collection' type='hidden' value='"+P+"' />"}else{if(O==="identifier.system"){K+="<input id='"+O+"' class='pid' name='pid' type='hidden' value='"+P+"' />"}else{if(O==="identifier.legacy"){K+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+P+"' />"}else{if(O==="identifier.master"){K+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+P+"' />"}else{if(O==="objectType"){G=P;K+="<input name='"+O+"' type='hidden' value='"+P+"' />"}else{if(O==="date.created"){K+="<fieldset>";K+="<label class='datecreated'>"+O+"</label>";K+="<input class='datecreated' type='text' value='"+P+"' disabled />";K+="<input class='datecreated' name='"+O+"[]' type='hidden' value='"+P+"'/>";K+="</fieldset>"}else{if(O==="date.modified"){K+="<fieldset>";K+="<label class='datemodified'>"+O+"</label>";K+="<input class='datemodified' type='text' value='"+P+"' disabled />";K+="</fieldset>"}}}}}}}});w.each(J,function(O,P){if(P.required==="false"){K+="<fieldset class='"+P.id+"-0' style='display:none;'>";K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+P.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+P.element+"'><span>Del</span></a></span></label>";if(P.type==="text"){K+="<input id='"+P.id+"-0' name='"+P.element+"[]' type='"+P.type+"' value='' />"}else{if(P.type==="textarea"){K+="<textarea id='"+P.id+"-0' name='"+P.element+"[]' rows='7' cols='55'></textarea> "}}K+="</fieldset>"}});A.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(A);var N=t(M);w("#pid").append(N);w(x).append(K);z();w(".optional_fields").show();w("#optional_fields").show();w(r).show();q()};o=function(F,G){var J,N=G.split("-"),M=N[N.length-2],K,I,H,L=[];if(N[N.length-1]==="clone"){N.pop();N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");I=I.replace(".","-");J=function(){w.each(v,function(O,P){H=P.element.replace(".","-");H=H.replace(".","-");if(I===H){B(F,P)}})};y(J)}else{if(N[N.length-1]==="remove"){N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");if(M==="0"){J=function(){w("#"+I).val("");w("."+I).hide()}}else{J=function(){w("."+G).remove()}}d(J)}}};C=function(F,G){F.preventDefault();F.stopPropagation();G=G.replace("-remove","");w("."+G).remove()};d=function(F){F()};y=function(F){F()};p=function(F){F=F.replace("-clear","");w("#"+F).val("")};k=function(J){var H=JSON.parse(sessionStorage.getItem("mms_profile"));var F="";var I="";if(J.type==="select"){if(J.required==="true"){var G="class='required"}F+="<fieldset class='"+J.id+"-"+MMS.counterObj.count+"'>";F+="<label for='"+J.id+"'>"+J.label+"</label>";F+="<select name='"+J.element+"[]' id='"+J.id+"' "+G+"'></select>";F+="</fieldset>"}else{if(J.vocabulary==="true"&&H.roleID=="2"){I="&nbsp;&nbsp;<a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}F+="<fieldset class='"+J.id+"-"+MMS.counterObj.count+"'>";F+="<label>";F+=J.label;if(J.repeat==="true"){F+="<span class='clone'><a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+J.element+"'><span>Add</span></a></span>"}else{if(J.repeat==="false"){F+="<a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(J.required==="false"){F+="<span class='remove'><a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+J.element+"'><span>Del</span></a></span>"}F+="</label>"+I;if(J.type==="text"){F+="<input "}else{if(J.type==="textarea"){F+="<textarea "}}F+="id='"+J.id+"-"+MMS.counterObj.count+"'";F+="name='"+J.element+"[]' ";F+="type='"+J.type+"' ";if(J.vocabulary==="true"&&H.roleID=="2"){F+="disabled='disbled'"}F+="class='";if(J.required==="true"){F+="required"}F+="'";if(J.type==="text"){F+="/>"}else{if(J.type==="textarea"){F+="rows='14' cols='45'></textarea>"}}F+="</fieldset>"}if(J.required==="true"){f=w(F)}else{if(J.required==="false"){f=w(F).hide()}}return f};q=function(){w("#optional_fields").empty();w.each(v,function(F,G){if(G.required==="false"){var H="<li class='icn_categories'><a href='#'>"+G.label+"</a></li>";h=w(H).on("click","a",function(I){I.preventDefault();MMS.metadata.appendOptionalField(G)});h.appendTo("#optional_fields")}})};u=function(F){w("."+F.id+"-0").show();location.hash="#"+F.id+"-0"};B=function(J,I){J.preventDefault();J.stopPropagation();var H=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var G="";var F="";F+="<fieldset class='"+I.id+"-"+MMS.counterObj.count+"'>";F+="<label>";F+=I.label;F+="&nbsp;<span class='remove'><a href='#' id='"+I.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+I.element+"'><span>Del</span></a></span>";if(I.vocabulary==="true"){}F+="</label>";if(I.type==="text"){F+="<input "}else{if(I.type==="textarea"){F+="<textarea "}}F+="id='"+I.id+"-"+MMS.counterObj.count+"'";F+="name='"+I.element+"[]' ";F+="type='"+I.type+"' ";if(I.vocabulary==="true"&&H.roleID=="2"){F+="disabled='disabled'"}F+="class='none ";F+="'";if(I.type==="text"){F+="/>"}else{if(I.type==="textarea"){F+="rows='10' cols='45'></textarea>"}}F+="</fieldset>";G=w(F).insertAfter("."+I.id+"-0");return G};i=function(){var F=JSON.parse(sessionStorage.getItem("mms_profile"));if(F.roleID==="2"){g={type:"PUT",url:MMS.configObj.queue,data:w(j).serialize(),dataType:"json",cache:true,success:function(I){w("#metadata-form").find("input[type=text], textarea").val("");w("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){w("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(g);return}var G=w(".pid").val();var H=w("#type").val();g={type:"PUT",url:MMS.configObj.repository,data:w(j).serialize(),dataType:"json",cache:false,success:function(I){if(I.updated==="true"){g={type:"GET",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:true,success:function(J,K){w("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){w("div#actionFeedback").empty()},5000);location.hash="#header";return false;l(J,G,K)}};MMS.utils.doAjax(g)}else{if(I.created==="true"){w("#metadata-form").find("input[type=text], textarea").val("");w("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){w("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(g)};m=function(H,F,G){H.preventDefault();g={type:"GET",url:MMS.configObj.repository,data:"pid="+F,dataType:"json",cache:false,success:function(I){l(I,F,G)}};MMS.utils.doAjax(g)};c=function(){var F=w(".pid").val();w(".pid").remove();w("#isPid").remove();w(".datecreated").remove();w(".datemodified").remove();w("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+F+".</h4>");setTimeout(function(){w("div#actionFeedback").remove()},10000)};z=function(){w(j).validate({errorClass:"invalid",submitHandler:function(){i()}})};b=function(H,G){H.preventDefault();var F=confirm("Are you sure you want to delete this record?");if(F){g={type:"POST",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:true,success:function(I){if(I.deleted==="true"){w("#search-forms").hide();w("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){w("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(g)}return false};n=function(H,G){var I=[];for(var F in H){I.push(H[F])}return I.sort(function(J,M){var L=J[G];var K=M[G];return((L<K)?-1:((L>K)?1:0))})};s=function(G){MMS.counterObj.count=0;w("#search-results").empty();MMS.view.createView(A);if(G==="image"){var F=[];v=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));E(G);q()}z();w(".current").html(G+" metadata");w("#clone-record").remove();w(r).show();w(".optional_fields").show();w("#optional_fields").show();w("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};e=function(){w(r).hide();w(".optional_fields").hide();w(".formType").on("click",function(F){s(w(this).attr("id"))})};return{getMetadata:function(H,F,G){m(H,F,G)},deleteMetadata:function(G,F){b(G,F)},removeClonedField:function(F,G){C(F,G)},constructFieldEvent:function(F,G){o(F,G)},cloneRecord:function(F){c(F)},back:function(F){D(F)},createMetadataEditForm:function(G,F,H){l(G,F,H)},appendOptionalField:function(F){u(F)},clearField:function(F){p(F)},loadForm:function(F){s(F)},init:function(){e()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(d){var l="#user",u="#user-form",a="#user-forms",p,k,q,t,h,b,i,c,r,m,g,e,o,s,f,n,j;j={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};h=function(){d(u).validate({errorClass:"invalid",submitHandler:function(){c()}})};k=function(){j.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(j);var x="";var B="";var z="";var v="";var w="";var A="";var C="";B+="<fieldset>";B+="<label>";B+="* First Name";B+="</label>";B+="<input id='firstName' name='firstName' type='text' class='required' />";B+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' class='required' />";z+="</fieldset>";v+="<fieldset>";v+="<label>";v+="* DU ID";v+="</label>";v+="<input id='duID' name='duID' type='text' class='required' />";v+="</fieldset>";o={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(D){A+="<fieldset>";A+="<label for='roleID'>* Roles</label>";A+="<select name='roleID' id='roleID' class='required'>";A+="<option value=''>---Assign a role--</option>";d.each(D,function(E,F){if(E!="3"){A+="<option value='"+E+"'>"+F+"</option>"}});A+="</select>";A+="</fieldset>";d(l).append(A)}};var y=JSON.parse(sessionStorage.getItem("mms_profile"));if(y.roleID=="3"){s={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(D){C+="<strong>* Assign a Collection</strong>";d.each(D,function(E,F){C+="<p><input id='"+F.collectionID+"' name='collections[]' type='radio' value='"+F.collectionID+"' /><label for='"+F.collectionID+"'>"+F.title+"</label></p>"});d(l).append(C)}};MMS.utils.doAjax(s)}else{C+="<input id='"+y.collectionID+"' name='collections[]' type='hidden' value='"+y.collectionID+"' />";x+=C}MMS.utils.doAjax(o);x+=B;x+=z;x+=v;d(l).append(x);h()};t=function(){j.footer="null";MMS.view.createView(j);m={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(v){var w="";w+="<div class='tab_container'>";w+="<div id='tab1' class='tab_content'>";w+="<table class='tablesorter' cellspacing='0'>";w+="<thead>";w+="<tr>";w+="<th>First Name</th>";w+="<th>Last Name</th>";w+="<th>Role</th>";w+="<th>Active</th>";w+="<th>Actions</th>";w+="</tr>";w+="</thead>";w+="<tbody>";d.each(v,function(x,y){w+="<tr>";w+="<td>"+y.firstName+"</td>";w+="<td>"+y.lastName+"</td>";w+="<td>"+y.roleName+"</td>";if(y.isActive==="1"){w+="<td>Yes</td>"}else{w+="<td>No</td>"}w+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+y.id+");'></td>";w+="</tr>"});w+="</tbody>";w+="</table>";w+="</div>";w+="</div>";d(l).append(w)}};MMS.utils.doAjax(m)};q=function(z){var x="";var w="";var y="";var v="";j.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(j);d(".current").html("Edit User");f={type:"GET",url:MMS.configObj.users,data:"id="+z,dataType:"json",cache:false,async:false,success:function(B){x+="<input name='userID' type='hidden' value='"+z+"' />";x+="<fieldset>";x+="<label>";x+="* First Name";x+="</label>";x+="<input id='firstName' name='firstName' type='text' value='"+B[0].firstName+"' class='required' />";x+="</fieldset>";x+="<fieldset>";x+="<label>";x+="* Last Name";x+="</label>";x+="<input id='lastName' name='lastName' type='text' value='"+B[0].lastName+"' class='required' />";x+="</fieldset>";d(l).append(x);o={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(C){w+="<fieldset>";w+="<label for='roleID'>* Roles</label>";w+="<select name='roleID' id='roleID' class='required'>";w+="<option value=''>---Assign a role--</option>";d.each(C,function(D,E){if(B[0].roleID===D){w+="<option value='"+D+"' selected>"+E+"</option>"}else{if(D!="3"){w+="<option value='"+D+"'>"+E+"</option>"}}});w+="</select>";w+="</fieldset>";d(l).append(w)}};var A=JSON.parse(sessionStorage.getItem("mms_profile"));if(A.roleID=="3"){s={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(C){y+="<strong>* Assigned Collection</strong>";d.each(C,function(D,E){if(B[1].collectionID===E.collectionID){y+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' checked /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}else{y+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}})}};MMS.utils.doAjax(s)}else{y+="<input name='collectionID' type='hidden' value='"+A.collectionID+"' />"}d(l).append(y);MMS.utils.doAjax(o);v+="<label>";v+="isActive";v+="</label>";if(B[0].isActive=="1"){v+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' checked />"}else{v+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' />"}d(l).append(v)}};MMS.utils.doAjax(f);h()};c=function(){g={type:"PUT",url:MMS.configObj.users,data:d(u).serialize(),dataType:"json",cache:false,success:function(v){if(v.updated==="true"){t()}else{if(v.updated==="false"){alert("Error: Update failed.")}else{d("#user-form")[0].reset()}}}};MMS.utils.doAjax(g)};r=function(w){var v=confirm("Are you sure you want to delete this user?");if(v){e={type:"POST",url:MMS.configObj.users,data:"userID="+w,dataType:"json",cache:false,success:function(x){if(x.deleted==="true"){t()}else{if(x.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(e)}};p=function(){n={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(x){sessionStorage.setItem("mms_profile",JSON.stringify(x));var v=JSON.parse(sessionStorage.getItem("mms_profile"));var w=v.firstName+" "+v.lastName+" ("+v.roleName+")";d("#user-role").append(w)}};MMS.utils.doAjax(n)};b=function(v){if(v==="addUser"){k();d("#search-results").empty();d(".current").html("Add User")}else{if(v==="viewUsers"){t();d("#search-results").empty();d(".current").html("Users")}}};i=function(){d(a).hide();d("#addUser").on("click",function(v){b(d(this).attr("id"))});d("#viewUsers").on("click",function(v){b(d(this).attr("id"))})};return{init:function(){return i()},constructUserEditForm:function(v){return q(v)},deleteUserData:function(v){return r(v)},getSessionInfo:function(){return p()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(g){var i="#collection",f="#collection-form",c="#collection-forms",e,b,j,d,l,h,a,k;k={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};e=function(){MMS.view.createView(k);var m="";var r="";var q="";var n="";var p="";r+="<fieldset>";r+="<label>";r+="* Title";r+="</label>";r+="<input id='title' name='title' type='text' class='required' />";r+="</fieldset>";q+="<fieldset>";q+="<label>";q+="* Description";q+="</label>";q+="<input id='description' name='description' type='text' class='required' />";q+="</fieldset>";p+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";m+=r;m+=q;m+=p;g(i).append(m);var o={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(s){n+="<fieldset>";n+="<label>";n+="* Object Type";n+="</label>";n+="<br />";g.each(s,function(t,u){n+="<p><input id='"+u.objectType+"' name='objectType[]' type='checkbox' value='"+u.objectTypeID+"' /> "+u.objectType+"</p>"});n+="</fieldset>";g(i).append(n)}};MMS.utils.doAjax(o)};b=function(){MMS.view.createView(k);a={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(m){var n="";n+="<div class='tab_container'>";n+="<div id='tab1' class='tab_content'>";n+="<table class='tablesorter' cellspacing='0'>";n+="<thead>";n+="<tr>";n+="<th>Collection Name</th>";n+="<th>Description</th>";n+="<th>Active</th>";n+="<th>Actions</th>";n+="</tr>";n+="</thead>";n+="<tbody>";g.each(m,function(o,p){n+="<tr>";n+="<td>"+p.title+"</td>";n+="<td>"+p.description+"</td>";if(p.isActive==="1"){n+="<td>Yes</td>"}else{n+="<td>No</td>"}n+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+p.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+p.collectionID+"\"); return false;'></td>";n+="</tr>"});n+="</tbody>";n+="</table>";n+="</div>";n+="</div>";g(i).append(n)}};MMS.utils.doAjax(a)};h=function(){a={type:"PUT",url:MMS.configObj.collections,data:g(f).serialize(),dataType:"json",cache:false,success:function(m){g(f)[0].reset()}};MMS.utils.doAjax(a)};d=function(m){if(m==="addCollection"){e();g(".current").html("Add Collection")}else{if(m==="editCollection"){}else{if(m==="deleteCollection"){}else{if(m==="viewCollections"){b();g(".current").html("Collections")}}}}};l=function(){g(c).hide();g("#addCollection").on("click",function(m){d(g(this).attr("id"))});g("#viewCollections").on("click",function(m){d(g(this).attr("id"))});j()};j=function(){g(f).validate({errorClass:"invalid",submitHandler:function(){h()}})};return{init:function(){return l()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(d){var c,f,e,a,b=".module width_full",g="#login-form",h,i;c=function(){a={type:"POST",url:MMS.configObj.authenticate,data:d(g).serialize(),dataType:"json",cache:true,success:function(j){d(b).hide();f(j)}};d("h3#message").ajaxStart(function(){d("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(a)};f=function(j){if(j.isAuthenticated==="false"){d("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");d("#authenticate").removeAttr("disabled")}else{if(j.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};e=function(){d("#login-form").validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){d("#logout").click(function(){a={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(j){if(j.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(a)});return false};h=function(){e();i()};return{init:function(){h()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(f){var b,c,d,l,e,i,g,a,k,j,h="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";j={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};b=function(m){f("#content").empty();m.preventDefault();d=f("input#quickSearch").val();d=MMS.utils.sanitizeInput(d);if(d===""){return f("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}l=f("#search_box").serialize();f("#search").empty();f("#actionFeedback").empty();a={type:"GET",url:MMS.configObj.search,data:f("#search_box").serialize(),dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");MMS.view.createView(j);g(n)}}};MMS.utils.doAjax(a);return false};g=function(o){var q="";var p=[];var m="";var n=JSON.parse(sessionStorage.getItem("mms_profile"));f("#search_box")[0].reset();f("#search-message").text("You searched for: "+d);f(".current").html("Search Results");if(o.response.numFound===0){f("#search-forms").remove();f("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}q+="<div>";q+="<div>";q+="<table class='tablesorter' cellspacing='0'>";q+="<thead>";q+="<tr>";q+="<th>Records Found: "+o.response.numFound+"</th>";q+="<th>Actions</th>";q+="</tr>";q+="</thead>";q+="<tbody id='pages'>";f.each(o.response.docs,function(r,s){m+="<tr>";m+="<td width='85%'>";m+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";m+="<tr align='top'>";if(s.identifier_t[0]!==undefined){m+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+s.identifier_t[0]+"' alt='"+s.title_t[0]+"' border='1'></p></td>"}m+="<td width='40%' align='left'>";if(s.title_t!==undefined){m+="<p><strong>Title:</strong> "+s.title_t[0]+"</p>"}if(s.creator_t!==undefined){m+="<p><strong>Creator:</strong> "+s.creator_t[0]+"</p>"}m+="</td>";m+="</tr>";m+="</table>";m+="</td>";m+="<td width='28%'>";m+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+s.id+'", "search");\'>';if(n.roleID==="1"){m+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+s.id+"\"); return false;'>"}m+="</td>";m+="</tr>";p.push(m);m=""});q+="</tbody>";q+="</table>";q+="</div>";q+="</div>";f("#search").append(q);f("#search-results").show();MMS.pagination.init(p)};c=function(m){var n;f.each(m.spellcheck.suggestions,function(o,p){if(p!=="true"){if(p.suggestion!==undefined){f.each(p.suggestion,function(q,r){if(q===0){i=r.word.trim();n="<a href='#' id='didYouMeanSearch'>"+r.word.trim()+"</a>"}})}}});if(n!==undefined){f("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+n+"</h4>");f("#didYouMeanSearch").on("click",function(o){e()})}};e=function(){f("#search").empty();f("#searchActionFeedback").empty();var m=l.replace(d,i);d=i;a={type:"GET",url:MMS.configObj.search,data:m,dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");g(n)}}};MMS.utils.doAjax(a)};k=function(){f("#search-forms").hide();f("form.quick_search").submit(function(m){b(m)})};return{init:function(){return k()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(g){var c,j=1,d,e=4,b,a,f,k,h,i,l;d=function(){return Math.ceil(f/e)};b=function(){g("div.pagination").empty();var n="";n+="<ul id='pagination-flickr'>";n+="<li><a href='#' onclick='MMS.pagination.previous("+j+")'>Previous</a></li>";for(var m=1;m<=d();m++){if(m!==j){if(d()<=20){n+="<li><a href='#' onclick='MMS.pagination.renderPage("+m+"); return false;'>"+m+"</a></li>"}}else{n+="<li class='active'>"+m+"</li>";j=m}}n+="<li><a href='#' onclick='MMS.pagination.next("+j+")'>Next</a></li>";n+="</ul>";g("div.pagination").append(n)};h=function(n){if(n<d()){var m=n+1;a(m)}};i=function(n){if(n>1){var m=n-1;a(m)}};a=function(n){j=n;var n=(n-1);b();g("#pages").empty();for(var m=(n)*e;m<((n)*e)+e;m++){g("#pages").append(c[m])}};l=function(m){c=m;f=m.length;a(1)};return{init:function(m){return l(m)},renderPage:function(m){return a(m)},next:function(m){return h(m)},previous:function(m){return i(m)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(f){var g,b,e,c,d,a;d={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};g=function(){MMS.utils.focusForm("#batch-ingest-forms");c={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(h){MMS.view.createView(d);b(h)}};MMS.utils.doAjax(c);return false};b=function(h){f(".current").html("Batch");if(h.length===0){f("#batch-ingest-forms").remove();f("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var i="";i+="<div>";i+="<div>";i+="<table class='tablesorter' cellspacing='0'>";i+="<thead>";i+="<tr>";i+="<th>Batch Records</th>";i+="<th>Status</th>";i+="</tr>";i+="</thead>";i+="<tbody>";f.each(h,function(j,k){if(k.object!=""){i+="<input name='pids[]' type='hidden' value='"+k.pid+"' />"}i+="<tr>";i+="<td width='85%'>";i+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";i+="<tr align='top'>";if(k.object!=""){i+="<td width='30%' align='center'><p><img src='"+k.object+"' alt='"+k.title+"' border='1'></p></td>"}else{i+="<td width='30%' align='center'><p>No Object.</p></td>"}i+="<td width='40%' align='left'>";i+="<p><strong>Pid:</strong> "+k.pid+"</p>";i+="<p><strong>Title:</strong> "+k.title+"</p>";i+="<p><strong>Creator:</strong> "+k.creator+"</p>";i+="<p><strong>Identifier:</strong> "+k.identifier+"</p>";i+="</td>";i+="</tr>";i+="</table>";i+="</td>";if(k.object!=""){i+="<td width='28%'>complete.</td>"}else{i+="<td width='28%'>incomplete.</td>"}i+="</tr>"});i+="</tbody>";i+="</table>";i+="</div>";i+="</div>";f("#batch-ingest").empty().append(i);f("#batch-ingest-forms").show()};e=function(){c={type:"POST",url:MMS.configObj.batch,data:f("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(h){if(h.success===false){f("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){f("div#actionFeedback").empty()},4000)}else{f("#batch-ingest").empty();f("#batch-ingest-forms").remove();f("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){f("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(c);return false};a=function(){f("#batch-ingest-forms").hide();f("#batch").on("click",function(h){g(f(this).attr("id"))})};return{init:function(){return a()},ingest:function(){return e()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(f){var a,e,b,d,c,g,h;c={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};a=function(){b={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(i){MMS.view.createView(c);e(i)}};MMS.utils.doAjax(b)};e=function(i){f(".current").html("Xml");var j="";j+="<div class='tab_container'>";j+="<div id='tab1' class='tab_content'>";j+="<table class='tablesorter' cellspacing='0'>";j+="<thead>";j+="<tr>";j+="<th>XML File</th>";j+="<th>Actions</th>";j+="</tr>";j+="</thead>";j+="<tbody>";f.each(i,function(k,l){j+="<input name='xmlFiles[]' type='hidden' value='"+l.fileName+"' />";j+="<tr>";j+="<td>"+l.fileName+"</td>";j+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+l.fileName+"\"); return false;'></td>";j+="</tr>"});j+="</tbody>";j+="</table>";j+="</div>";j+="</div>";f("#xml").append(j);f("#xml-forms").show()};d=function(k){var i=[];for(var j in k){i.push(k[j].name)}b={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:i},dataType:"json",cache:false,success:function(l){f("#xml-forms").remove();if(l.created==="true"){f("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){f("div#actionFeedback").empty()},5000)}else{f("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){f("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(b)};g=function(){MMS.view.createView(c);b={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(i){f("#xml").append(i)}};MMS.utils.doAjax(b)};h=function(){f("#view_xml").on("click",function(){a()})};return{init:function(){return h()},saveXml:function(i){return d(i)},createUploadArea:function(){return g()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(a){var d,b,c,e;d={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};b=function(){c={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(f){e(f)}};MMS.utils.doAjax(c);return false};e=function(f){a(".current").html("Review Queue");a("#search-results").empty();MMS.view.createView(d);if(f.length===0){a("#queue-forms").remove();a("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var g="";g+="<div class='tab_container'>";g+="<div id='tab1' class='tab_content'>";g+="<table class='tablesorter' cellspacing='0'>";g+="<thead>";g+="<tr>";g+="<th>Pid</th>";g+="<th>Title</th>";g+="<th>Created By</th>";g+="<th>Date Created</th>";g+="<th>Actions</th>";g+="</tr>";g+="</thead>";g+="<tbody>";a.each(f,function(h,i){g+="<tr>";g+="<td>"+i.pid+"</td>";g+="<td>"+i.title+"</td>";g+="<td>"+i.name+"</td>";g+="<td>"+i.timestamp+"</td>";g+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+i.pid+'", "queue");\'</td>';g+="</tr>"});g+="</tbody>";g+="</table>";g+="</div>";g+="</div>";a("#search-results").empty();a("#queue").append(g)};return{getItems:function(){b()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(b){var a;a=function(c){var d="";d+='<div id="actionFeedback"></div>';d+='<div id="error"></div>';d+='<article id="'+c.articleID+'" class="'+c.articleClass+'">';d+="<header>";if(c.h3ID!=="null"){d+='<h3 id="'+c.h3ID+'">'+c.h3Value+"</h3>"}if(c.header!=="null"){d+=c.header}d+="</header>";d+='<form id="'+c.formID+'">';d+='<div id="'+c.divID+'" class="'+c.divClass+'"></div>';d+="<footer>";if(c.footer!=="null"){d+=c.footer}d+="</footer>";d+="</form>";d+="</article>";b("#"+c.content).empty().append(d)};return{createView:function(c){a(c)}}}(jQuery));$(function(){var a={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(a))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(e){var f=e.split("."),g=MMS,h;if(f[0]==="MMS"){f=f.slice(1)}for(h=0;h<f.length;h+=1){if(typeof g[f[h]]==="undefined"){g[f[h]]={}}g=g[f[h]]}return g};MMS.namespace("MMS.utils");MMS.utils=(function(j){var k,i,g,l,h;l={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};k=function(a){a.timeout=5000;a.error=function(c,b){j("#error").html("<h4 class='alert_error'>An error has occurred ("+b+").  Please contact library-support@du.edu for assistance.</h4>")};a.statusCode={403:function(){alert("Session expired");MMS.view.createView(l);j("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};j(document).ajaxStart(function(){j.fancybox.showLoading()});j(document).ajaxStop(function(){j.fancybox.hideLoading()});j.ajax(a)};g=function(){var a={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(b){if(typeof b===null||b.isFedoraUp!==200||b.isSolrUp!=="OK"){j("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");j("#authenticate").attr("disabled","disabled")}}};k(a)};h=function(a){return a.replace(/</g,"").replace(/>/g,"")};i=function(a){if(a!=="#metadata-forms"){j(".optional_fields").hide();j("#optional_fields").hide()}j("article:not("+a+", .breadcrumbs)").hide()};return{doAjax:function(a){k(a)},focusForm:function(a){i(a)},sanitizeInput:function(a){return h(a)},pingServices:function(){g()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(R){var W,B,z,C,G,T,J,F,L,I,S,Q,N,P,H,U,K,X,O,A,D,V,M,E;E={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};Q=function(){var a="";a+='<article id="controlled-vocabulary-section" class="module width_quarter">';a+="<header><h3>Controlled Vocabularies</h3></header>";a+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';a+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';a+="<p>";a+='<select id="vocab-options" name="vocab-options">';a+='<option value="ulan" selected>ULAN</option>';a+='<option value="aat">AAT</option>';a+='<option value="locnames">LC-Names</option>';a+='<option value="locsubjects">LC-Subjects</option>';a+='<option value="aloracreators">Alora-Creators</option>';a+='<option value="alorasubjects">Alora-Subjects</option>';a+="</select>&nbsp;";a+='<input id="getVocabularies" type="submit" value="Go" />';a+="</p>";a+="</div>";a+='<div id="vocabulary-results"></div>';a+="</article>";return a};V=function(){R("#search-results").empty();MMS.view.createView(E);N();D();R(".current").html("Creator");R("#controlled-vocabulary-form").show()};M=function(){R("#search-results").empty();MMS.view.createView(E);A();D();R(".current").html("Subject");R("#controlled-vocabulary-form").show()};D=function(){R("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){X()}})};X=function(){F={type:"POST",url:MMS.configObj.creatorapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(F)};O=function(){F={type:"POST",url:MMS.configObj.subjectapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(F)};A=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Subject";a+="</label>";a+="<input id='subject' name='subject[]' type='text' class='required' />";a+="</fieldset>";a+="<label>";R("#controlledvocabulary").append(a)};N=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Creator";a+="</label>";a+="<input id='creator' name='creator[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Creator Alternative";a+="</label>";a+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Nationality";a+="</label>";a+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Role";a+="</label>";a+="<input id='description-role' name='description.role[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Biography";a+="</label>";a+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Sex";a+="</label>";a+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Source";a+="</label>";a+="<input id='source' name='source' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Earliest Date";a+="</label>";a+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Latest Date";a+="</label>";a+="<input id='latestdates' name='latestdates' type='text' class='required' />";a+="</fieldset>";R("#controlledvocabulary").append(a)};L=function(){return sessionStorage.getItem("roleID")};W=function(){var a,b=R("input#vocabTerm").val(),c=R("select#vocab-options");b=MMS.utils.sanitizeInput(b);if(c.length>0){a=c.val()}F={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+b+"&option="+a,dataType:"json",cache:true,success:function(d){C(a,d)}};MMS.utils.doAjax(F)};I=function(c,b,d){var a="id="+c+"&vocabType="+b;if(d===undefined){var d=function(e){S(c,e)}}F={type:"GET",url:MMS.configObj.vocabUrl,data:a,dataType:"json",cache:true,success:d};MMS.utils.doAjax(F)};S=function(c,b){var a="",d=R("span#"+c+"-toggle").text();if(d==="( + )"){R("span#"+c+"-toggle").text("( - )");R("div#"+c+"-vocab-data").show()}else{if(d==="( - )"){R("div#"+c+"-vocab-data").hide();R("span#"+c+"-toggle").text("( + )")}}R.each(b,function(f,e){if(e.subject_id!==undefined){a+="<p><strong>Subject id:</strong> "+e.subject_id+"</p>"}if(e.nationalities!==""){a+="<p><strong>Nationality:</strong> "+e.nationalities+"</p>"}if(e.role_id!==""){a+="<p><strong>Role:</strong> "+e.role_id+"</p>"}if(e.preferred_terms_source_id!==""){a+="<p><strong>Source:</strong> "+e.preferred_terms_source_id+"</p>"}if(e.non_preferred_terms_term_text!==""){a+="<p><strong>Alternative name:</strong> "+e.non_preferred_terms_term_text+"</p>"}if(e.preferred_biographies_biography_text!==""){a+="<p><strong>Bio:</strong> "+e.preferred_biographies_biography_text+"</p>"}if(e.preferred_biographies_birth_date!==""){a+="<p><strong>Birth date:</strong> "+e.preferred_biographies_birth_date+"</p>"}if(e.preferred_biographies_death_date!==""){a+="<p><strong>Death date:</strong> "+e.preferred_biographies_death_date+"</p>"}if(e.preferred_biographies_sex!==""){a+="<p><strong>Sex:</strong> "+e.preferred_biographies_sex+"</p>"}});R("div#"+c+"-vocab-data").empty().append(a)};J=function(c,a,b){var d;while(a<50){d=R("#"+b+"-"+a).val();if(d===""){R("#"+b+"-"+a).val(c);break}a++}return d};T=function(i,g){var h,d,c,j,f,e=1,a=function(k){K(k)},b=R("select#vocab-options");if(L()=="2"){R("#"+i).removeAttr("disabled");R("#"+i).attr("readonly","readonly")}if(b.length>0){f=b.val()}if(f==="ulan"||f==="locnames"||f==="aloracreators"){if(f!=="locnames"){I(i,f,a)}h=R("#creator-0").val();if(h===""){J(g,0,"creator")}else{d=R("#coverage-spatial-repository-0").val(g);if(d===""){J(g,0,"coverage-spatial-repository")}else{J(g,e,"coverage-spatial-repository")}}}else{if(f==="aat"||f==="locsubjects"||f==="alorasubjects"){j=R("#coverage-temporal-styleperiod-0").val();if(j===""){J(g,0,"coverage-temporal-styleperiod")}else{j=J(g,e,"coverage-temporal-styleperiod")}if(j===undefined){c=R("#subject-0").val();if(c===""){J(g,0,"subject")}else{J(g,e,"subject")}}}}};K=function(b){var a="";R.each(b,function(d,c){a+='<input name="creator.alternative[]" type="hidden" value="'+c.non_preferred_terms_term_text+'" />';a+='<input name="description.creatorbio[]" type="hidden" value="'+c.preferred_biographies_biography_text+'" />';a+='<input name="description.nationality[]" type="hidden" value="'+c.nationalities+'" />';a+='<input name="description.role[]" type="hidden" value="'+c.role_id+'" />';a+='<input name="description.lifedates[]" type="hidden" value="'+c.preferred_biographies_birth_date+"-"+c.preferred_biographies_death_date+'" />';a+='<input name="source[]" type="hidden" value="'+c.preferred_terms_source_id+'" />'});R("div#metadata").append(a)};C=function(d,c){var b,a="";if(d==="ulan"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+B+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"ulan\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="aat"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+B+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="locnames"||d==="locsubjects"){b=c.loc;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+B+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+B+", $(this).text());return false;'>"+c.loc[f].title+"</a><br /><a href='#'>"+e.id+"</a></li></ul></p>"})}else{if(d==="aloracreators"||d==="alorasubjects"){b=c.local;if(b.message!==undefined){a+="<p><ul><li>No results found.</li></ul></p>";R("div#vocabulary-results").empty().append(a);return}R.each(b,function(f,e){if(d==="aloracreators"){a+="<p><ul><li><a href='#' id='"+B+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"local\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{a+="<p><ul><li><a href='#' id='"+B+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}R("div#vocabulary-results").empty().append(a)};G=function(){R("#controlled-vocabulary-section").show();var a=Q();R("#content").append(a);R("input#vocabTerm").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("select#vocab-options").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("input#getVocabularies").on("click",function(){W()})};H=function(){R("select#type-arttypes").val("");R("select#type-timeperiods").val("");R("select#type-instructors").val("")};P=function(c){var b=["arttypes","timeperiods","instructors"],d={},a;if(c===undefined){c=function(e){U(e)}}for(a=0;a<b.length;a++){d.type="GET";d.url=MMS.configObj.vocabUrl;d.data="vocabType="+b[a];d.dataType="json";d.cache=true;d.success=c;MMS.utils.doAjax(d)}};U=function(f){var f=R.parseJSON(f);var e;var c;var d=sessionStorage.getItem("arttypes");var a=sessionStorage.getItem("timeperiods");var b=sessionStorage.getItem("instructors");e="<option value=''>---Select an term---</option>";R.each(f,function(h,g){if(g.type){c=g.type}if(g.term===d||g.term===a||g.term===b){e+="<option value='"+g.term+"' selected>"+g.term+"</option>"}else{e+="<option value='"+g.term+"'>"+g.term+"</option>"}});R("select#type-"+c).html(e)};z=function(){R("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){W()},displayControlledVocabulariesBox:function(b,a){G(b,a)},selectVocabularyTerm:function(a,b){T(a,b)},getTermData:function(a,b){I(a,b)},getLists:function(){P()},resetLists:function(){H()},loadCreatorForm:function(){V()},loadSubjectForm:function(){M()},init:function(){z()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(ai){var ae,aa,O,J,ad,L,ah="#metadata",Q="#metadata-form",I="#metadata-forms",P,S,M,Z,U,ag,W,ac,af,R,H,V,T,N,Y,aj,X,G,ab,K,F;ae={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};aa=function(a){var b=M(aj,"displayOrder");ai.each(b,function(d,c){Z=P(c);Z.appendTo(ah)});ai(ah).append("<input name='objectType' type='hidden' value='"+a+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};G=function(a){var c;var b;if(a==="queue"){b="Back to Review Queue"}else{if(a==="search"){ai("#search-results").hide();b="Back to Search Results"}}c="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+a+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+b+"</a>";return c};ab=function(a){if(a==="queue"){MMS.queue.getItems()}else{if(a==="search"){ai("#search-results").show();ai("#content").empty()}}ai("#clone-record").empty();ai("#controlled-vocabulary-section").hide();return};O=function(g,f,b){var i=100,d="",c,h;ai(".current").html("Edit Metadata");ai(ah).empty();d+="<div id='edit-mode'></div>";d+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";d+="<fieldset id='isPid'>";d+="<label>pid</label>";d+="<input type='text' value='"+f+"'  disabled />";d+="</fieldset>";if(b==="queue"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}else{if(b==="search"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}}aj=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var e=M(aj,"displayOrder");ai.each(e,function(k,j){ai.each(g,function(m,l){if(j.element===m){c=m.replace(".","-");if(typeof l==="string"){d+="<fieldset class='"+c+"-0'>";if(j.repeat==="true"){d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+m+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+m+"'><span>Add</span></a></span></label>"}else{d+="<label>"+j.label+"</label>"}if(j.type==="select"){if(j.required==="true"){var n="class='required"}if(j.element==="type.arttype"){sessionStorage.setItem("arttypes",l)}else{if(j.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",l)}else{if(j.element==="instructor"){sessionStorage.setItem("instructors",l)}}}d+="<select name='"+j.element+"[]' id='"+j.id+"' "+n+"'></select>"}if(j.type==="text"){d+="<input id='"+m+"-"+i+"' name='"+m+"[]' type='text' value='"+l+"' "+n+" />"}if(j.type==="textarea"){d+="<textarea id='"+m+"-"+i+"' name='"+m+"[]' rows='7' cols='55' "+n+">"+l+"</textarea> "}d+="</fieldset>"}if(typeof l==="object"){ai.each(l,function(o,p){i++;if(i>101){d+="<fieldset class='"+c+"-"+i+"'>"}else{d+="<fieldset class='"+c+"-0'>"}if(j.repeat==="true"){if(i>101){d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+m+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+m+"'><span>Del</span></a></span></label>"}else{d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+m+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+m+"'><span>Add</span></a></span></label>"}}else{d+="<label>"+j.label+"</label>"}if(j.type==="text"){d+="<input id='"+m+"-"+i+"' name='"+m+"[]' type='text' value='"+p+"' "+n+" />"}if(j.type==="textarea"){d+="<textarea id='"+m+"-"+i+"' name='"+m+"[]' rows='7' cols='55' "+n+">"+p+"</textarea> "}d+="</fieldset>"})}}})});ai.each(g,function(k,j){if(k==="collection"){d+="<input id='"+k+"-0' name='collection' type='hidden' value='"+j+"' />"}else{if(k==="identifier.system"){d+="<input id='"+k+"' class='pid' name='pid' type='hidden' value='"+j+"' />"}else{if(k==="identifier.legacy"){d+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+j+"' />"}else{if(k==="identifier.master"){d+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+j+"' />"}else{if(k==="objectType"){h=j;d+="<input name='"+k+"' type='hidden' value='"+j+"' />"}else{if(k==="date.created"){d+="<fieldset>";d+="<label class='datecreated'>"+k+"</label>";d+="<input class='datecreated' type='text' value='"+j+"' disabled />";d+="<input class='datecreated' name='"+k+"[]' type='hidden' value='"+j+"'/>";d+="</fieldset>"}else{if(k==="date.modified"){d+="<fieldset>";d+="<label class='datemodified'>"+k+"</label>";d+="<input class='datemodified' type='text' value='"+j+"' disabled />";d+="</fieldset>"}}}}}}}});ai.each(e,function(k,j){if(j.required==="false"){d+="<fieldset class='"+j.id+"-0' style='display:none;'>";d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+j.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+j.element+"'><span>Del</span></a></span></label>";if(j.type==="text"){d+="<input id='"+j.id+"-0' name='"+j.element+"[]' type='"+j.type+"' value='' />"}else{if(j.type==="textarea"){d+="<textarea id='"+j.id+"-0' name='"+j.element+"[]' rows='7' cols='55'></textarea> "}}d+="</fieldset>"}});ae.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(ae);var a=G(b);ai("#pid").append(a);ai(ah).append(d);af();ai(".optional_fields").show();ai("#optional_fields").show();ai(I).show();J()};L=function(i,h){var e,a=h.split("-"),b=a[a.length-2],d,f,g,c=[];if(a[a.length-1]==="clone"){a.pop();a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");f=f.replace(".","-");e=function(){ai.each(aj,function(k,j){g=j.element.replace(".","-");g=g.replace(".","-");if(f===g){ad(i,j)}})};ag(e)}else{if(a[a.length-1]==="remove"){a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");if(b==="0"){e=function(){ai("#"+f).val("");ai("."+f).hide()}}else{e=function(){ai("."+h).remove()}}W(e)}}};ac=function(b,a){b.preventDefault();b.stopPropagation();a=a.replace("-remove","");ai("."+a).remove()};W=function(a){a()};ag=function(a){a()};K=function(a){a=a.replace("-clear","");ai("#"+a).val("")};P=function(c){var e=JSON.parse(sessionStorage.getItem("mms_profile"));var b="";var d="";if(c.type==="select"){if(c.required==="true"){var a="class='required"}b+="<fieldset class='"+c.id+"-"+MMS.counterObj.count+"'>";b+="<label for='"+c.id+"'>"+c.label+"</label>";b+="<select name='"+c.element+"[]' id='"+c.id+"' "+a+"'></select>";b+="</fieldset>"}else{if(c.vocabulary==="true"&&e.roleID=="2"){d="&nbsp;&nbsp;<a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}b+="<fieldset class='"+c.id+"-"+MMS.counterObj.count+"'>";b+="<label>";b+=c.label;if(c.repeat==="true"){b+="<span class='clone'><a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+c.element+"'><span>Add</span></a></span>"}else{if(c.repeat==="false"){b+="<a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(c.required==="false"){b+="<span class='remove'><a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+c.element+"'><span>Del</span></a></span>"}b+="</label>"+d;if(c.type==="text"){b+="<input "}else{if(c.type==="textarea"){b+="<textarea "}}b+="id='"+c.id+"-"+MMS.counterObj.count+"'";b+="name='"+c.element+"[]' ";b+="type='"+c.type+"' ";if(c.vocabulary==="true"&&e.roleID=="2"){b+="disabled='disbled'"}b+="class='";if(c.required==="true"){b+="required"}b+="'";if(c.type==="text"){b+="/>"}else{if(c.type==="textarea"){b+="rows='14' cols='45'></textarea>"}}b+="</fieldset>"}if(c.required==="true"){U=ai(b)}else{if(c.required==="false"){U=ai(b).hide()}}return U};J=function(){ai("#optional_fields").empty();ai.each(aj,function(b,a){if(a.required==="false"){var c="<li class='icn_categories'><a href='#'>"+a.label+"</a></li>";S=ai(c).on("click","a",function(d){d.preventDefault();MMS.metadata.appendOptionalField(a)});S.appendTo("#optional_fields")}})};F=function(a){ai("."+a.id+"-0").show();location.hash="#"+a.id+"-0"};ad=function(c,d){c.preventDefault();c.stopPropagation();var e=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var a="";var b="";b+="<fieldset class='"+d.id+"-"+MMS.counterObj.count+"'>";b+="<label>";b+=d.label;b+="&nbsp;<span class='remove'><a href='#' id='"+d.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+d.element+"'><span>Del</span></a></span>";if(d.vocabulary==="true"){}b+="</label>";if(d.type==="text"){b+="<input "}else{if(d.type==="textarea"){b+="<textarea "}}b+="id='"+d.id+"-"+MMS.counterObj.count+"'";b+="name='"+d.element+"[]' ";b+="type='"+d.type+"' ";if(d.vocabulary==="true"&&e.roleID=="2"){b+="disabled='disabled'"}b+="class='none ";b+="'";if(d.type==="text"){b+="/>"}else{if(d.type==="textarea"){b+="rows='10' cols='45'></textarea>"}}b+="</fieldset>";a=ai(b).insertAfter("."+d.id+"-0");return a};R=function(){var b=JSON.parse(sessionStorage.getItem("mms_profile"));if(b.roleID==="2"){T={type:"PUT",url:MMS.configObj.queue,data:ai(Q).serialize(),dataType:"json",cache:true,success:function(d){ai("#metadata-form").find("input[type=text], textarea").val("");ai("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){ai("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(T);return}var a=ai(".pid").val();var c=ai("#type").val();T={type:"PUT",url:MMS.configObj.repository,data:ai(Q).serialize(),dataType:"json",cache:false,success:function(d){if(d.updated==="true"){T={type:"GET",url:MMS.configObj.repository,data:"pid="+a,dataType:"json",cache:true,success:function(f,e){ai("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){ai("div#actionFeedback").empty()},5000);location.hash="#header";return false;O(f,a,e)}};MMS.utils.doAjax(T)}else{if(d.created==="true"){ai("#metadata-form").find("input[type=text], textarea").val("");ai("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){ai("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(T)};N=function(c,b,a){c.preventDefault();T={type:"GET",url:MMS.configObj.repository,data:"pid="+b,dataType:"json",cache:false,success:function(d){O(d,b,a)}};MMS.utils.doAjax(T)};X=function(){var a=ai(".pid").val();ai(".pid").remove();ai("#isPid").remove();ai(".datecreated").remove();ai(".datemodified").remove();ai("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+a+".</h4>");setTimeout(function(){ai("div#actionFeedback").remove()},10000)};af=function(){ai(Q).validate({errorClass:"invalid",submitHandler:function(){R()}})};Y=function(c,a){c.preventDefault();var b=confirm("Are you sure you want to delete this record?");if(b){T={type:"POST",url:MMS.configObj.repository,data:"pid="+a,dataType:"json",cache:true,success:function(d){if(d.deleted==="true"){ai("#search-forms").hide();ai("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){ai("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(T)}return false};M=function(d,a){var c=[];for(var b in d){c.push(d[b])}return c.sort(function(h,e){var f=h[a];var g=e[a];return((f<g)?-1:((f>g)?1:0))})};H=function(a){MMS.counterObj.count=0;ai("#search-results").empty();MMS.view.createView(ae);if(a==="image"){var b=[];aj=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));aa(a);J()}af();ai(".current").html(a+" metadata");ai("#clone-record").remove();ai(I).show();ai(".optional_fields").show();ai("#optional_fields").show();ai("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};V=function(){ai(I).hide();ai(".optional_fields").hide();ai(".formType").on("click",function(a){H(ai(this).attr("id"))})};return{getMetadata:function(c,b,a){N(c,b,a)},deleteMetadata:function(a,b){Y(a,b)},removeClonedField:function(b,a){ac(b,a)},constructFieldEvent:function(b,a){L(b,a)},cloneRecord:function(a){X(a)},back:function(a){ab(a)},createMetadataEditForm:function(a,b,c){O(a,b,c)},appendOptionalField:function(a){F(a)},clearField:function(a){K(a)},loadForm:function(a){H(a)},init:function(){V()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(M){var H="#user",A="#user-form",P="#user-forms",F,I,E,B,J,O,y,N,D,w,z,L,v,C,K,G,x;x={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};J=function(){M(A).validate({errorClass:"invalid",submitHandler:function(){N()}})};I=function(){x.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(x);var h="";var d="";var f="";var b="";var a="";var e="";var c="";d+="<fieldset>";d+="<label>";d+="* First Name";d+="</label>";d+="<input id='firstName' name='firstName' type='text' class='required' />";d+="</fieldset>";f+="<fieldset>";f+="<label>";f+="* Last Name";f+="</label>";f+="<input id='lastName' name='lastName' type='text' class='required' />";f+="</fieldset>";b+="<fieldset>";b+="<label>";b+="* DU ID";b+="</label>";b+="<input id='duID' name='duID' type='text' class='required' />";b+="</fieldset>";v={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(i){e+="<fieldset>";e+="<label for='roleID'>* Roles</label>";e+="<select name='roleID' id='roleID' class='required'>";e+="<option value=''>---Assign a role--</option>";M.each(i,function(k,j){if(k!="3"){e+="<option value='"+k+"'>"+j+"</option>"}});e+="</select>";e+="</fieldset>";M(H).append(e)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){C={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(i){c+="<strong>* Assign a Collection</strong>";M.each(i,function(k,j){c+="<p><input id='"+j.collectionID+"' name='collections[]' type='radio' value='"+j.collectionID+"' /><label for='"+j.collectionID+"'>"+j.title+"</label></p>"});M(H).append(c)}};MMS.utils.doAjax(C)}else{c+="<input id='"+g.collectionID+"' name='collections[]' type='hidden' value='"+g.collectionID+"' />";h+=c}MMS.utils.doAjax(v);h+=d;h+=f;h+=b;M(H).append(h);J()};B=function(){x.footer="null";MMS.view.createView(x);w={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>First Name</th>";a+="<th>Last Name</th>";a+="<th>Role</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";M.each(b,function(d,c){a+="<tr>";a+="<td>"+c.firstName+"</td>";a+="<td>"+c.lastName+"</td>";a+="<td>"+c.roleName+"</td>";if(c.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+c.id+");'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";M(H).append(a)}};MMS.utils.doAjax(w)};E=function(c){var e="";var a="";var d="";var b="";x.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(x);M(".current").html("Edit User");K={type:"GET",url:MMS.configObj.users,data:"id="+c,dataType:"json",cache:false,async:false,success:function(f){e+="<input name='userID' type='hidden' value='"+c+"' />";e+="<fieldset>";e+="<label>";e+="* First Name";e+="</label>";e+="<input id='firstName' name='firstName' type='text' value='"+f[0].firstName+"' class='required' />";e+="</fieldset>";e+="<fieldset>";e+="<label>";e+="* Last Name";e+="</label>";e+="<input id='lastName' name='lastName' type='text' value='"+f[0].lastName+"' class='required' />";e+="</fieldset>";M(H).append(e);v={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(h){a+="<fieldset>";a+="<label for='roleID'>* Roles</label>";a+="<select name='roleID' id='roleID' class='required'>";a+="<option value=''>---Assign a role--</option>";M.each(h,function(j,i){if(f[0].roleID===j){a+="<option value='"+j+"' selected>"+i+"</option>"}else{if(j!="3"){a+="<option value='"+j+"'>"+i+"</option>"}}});a+="</select>";a+="</fieldset>";M(H).append(a)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){C={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(h){d+="<strong>* Assigned Collection</strong>";M.each(h,function(j,i){if(f[1].collectionID===i.collectionID){d+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' checked /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}else{d+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}})}};MMS.utils.doAjax(C)}else{d+="<input name='collectionID' type='hidden' value='"+g.collectionID+"' />"}M(H).append(d);MMS.utils.doAjax(v);b+="<label>";b+="isActive";b+="</label>";if(f[0].isActive=="1"){b+="<input id='isActive' name='isActive' type='checkbox' value='"+f[0].isActive+"' checked />"}else{b+="<input id='isActive' name='isActive' type='checkbox' value='"+f[0].isActive+"' />"}M(H).append(b)}};MMS.utils.doAjax(K);J()};N=function(){z={type:"PUT",url:MMS.configObj.users,data:M(A).serialize(),dataType:"json",cache:false,success:function(a){if(a.updated==="true"){B()}else{if(a.updated==="false"){alert("Error: Update failed.")}else{M("#user-form")[0].reset()}}}};MMS.utils.doAjax(z)};D=function(a){var b=confirm("Are you sure you want to delete this user?");if(b){L={type:"POST",url:MMS.configObj.users,data:"userID="+a,dataType:"json",cache:false,success:function(c){if(c.deleted==="true"){B()}else{if(c.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(L)}};F=function(){G={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(c){sessionStorage.setItem("mms_profile",JSON.stringify(c));var b=JSON.parse(sessionStorage.getItem("mms_profile"));var a=b.firstName+" "+b.lastName+" ("+b.roleName+")";M("#user-role").append(a)}};MMS.utils.doAjax(G)};O=function(a){if(a==="addUser"){I();M("#search-results").empty();M(".current").html("Add User")}else{if(a==="viewUsers"){B();M("#search-results").empty();M(".current").html("Users")}}};y=function(){M(P).hide();M("#addUser").on("click",function(a){O(M(this).attr("id"))});M("#viewUsers").on("click",function(a){O(M(this).attr("id"))})};return{init:function(){return y()},constructUserEditForm:function(a){return E(a)},deleteUserData:function(a){return D(a)},getSessionInfo:function(){return F()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(x){var v="#collection",m="#collection-form",p="#collection-forms",n,q,u,o,s,w,r,t;t={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};n=function(){MMS.view.createView(t);var b="";var c="";var d="";var a="";var e="";c+="<fieldset>";c+="<label>";c+="* Title";c+="</label>";c+="<input id='title' name='title' type='text' class='required' />";c+="</fieldset>";d+="<fieldset>";d+="<label>";d+="* Description";d+="</label>";d+="<input id='description' name='description' type='text' class='required' />";d+="</fieldset>";e+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";b+=c;b+=d;b+=e;x(v).append(b);var f={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(g){a+="<fieldset>";a+="<label>";a+="* Object Type";a+="</label>";a+="<br />";x.each(g,function(i,h){a+="<p><input id='"+h.objectType+"' name='objectType[]' type='checkbox' value='"+h.objectTypeID+"' /> "+h.objectType+"</p>"});a+="</fieldset>";x(v).append(a)}};MMS.utils.doAjax(f)};q=function(){MMS.view.createView(t);r={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Collection Name</th>";a+="<th>Description</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";x.each(b,function(d,c){a+="<tr>";a+="<td>"+c.title+"</td>";a+="<td>"+c.description+"</td>";if(c.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+c.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+c.collectionID+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";x(v).append(a)}};MMS.utils.doAjax(r)};w=function(){r={type:"PUT",url:MMS.configObj.collections,data:x(m).serialize(),dataType:"json",cache:false,success:function(a){x(m)[0].reset()}};MMS.utils.doAjax(r)};o=function(a){if(a==="addCollection"){n();x(".current").html("Add Collection")}else{if(a==="editCollection"){}else{if(a==="deleteCollection"){}else{if(a==="viewCollections"){q();x(".current").html("Collections")}}}}};s=function(){x(p).hide();x("#addCollection").on("click",function(a){o(x(this).attr("id"))});x("#viewCollections").on("click",function(a){o(x(this).attr("id"))});u()};u=function(){x(m).validate({errorClass:"invalid",submitHandler:function(){w()}})};return{init:function(){return s()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(o){var p,m,n,r,q=".module width_full",l="#login-form",k,j;p=function(){r={type:"POST",url:MMS.configObj.authenticate,data:o(l).serialize(),dataType:"json",cache:true,success:function(a){o(q).hide();m(a)}};o("h3#message").ajaxStart(function(){o("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(r)};m=function(a){if(a.isAuthenticated==="false"){o("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");o("#authenticate").removeAttr("disabled")}else{if(a.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};n=function(){o("#login-form").validate({errorClass:"invalid",submitHandler:function(){p()}})};j=function(){o("#logout").click(function(){r={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(a){if(a.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(r)});return false};k=function(){n();j()};return{init:function(){k()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(m){var q,p,o,s,n,v,x,r,t,u,w="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";u={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};q=function(a){m("#content").empty();a.preventDefault();o=m("input#quickSearch").val();o=MMS.utils.sanitizeInput(o);if(o===""){return m("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}s=m("#search_box").serialize();m("#search").empty();m("#actionFeedback").empty();r={type:"GET",url:MMS.configObj.search,data:m("#search_box").serialize(),dataType:"json",cache:true,success:function(b){if(b.error==500){m("#error").html(w)}else{m("#error").html("");MMS.view.createView(u);x(b)}}};MMS.utils.doAjax(r);return false};x=function(e){var c="";var d=[];var b="";var a=JSON.parse(sessionStorage.getItem("mms_profile"));m("#search_box")[0].reset();m("#search-message").text("You searched for: "+o);m(".current").html("Search Results");if(e.response.numFound===0){m("#search-forms").remove();m("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}c+="<div>";c+="<div>";c+="<table class='tablesorter' cellspacing='0'>";c+="<thead>";c+="<tr>";c+="<th>Records Found: "+e.response.numFound+"</th>";c+="<th>Actions</th>";c+="</tr>";c+="</thead>";c+="<tbody id='pages'>";m.each(e.response.docs,function(g,f){b+="<tr>";b+="<td width='85%'>";b+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";b+="<tr align='top'>";if(f.identifier_t[0]!==undefined){b+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+f.identifier_t[0]+"' alt='"+f.title_t[0]+"' border='1'></p></td>"}b+="<td width='40%' align='left'>";if(f.title_t!==undefined){b+="<p><strong>Title:</strong> "+f.title_t[0]+"</p>"}if(f.creator_t!==undefined){b+="<p><strong>Creator:</strong> "+f.creator_t[0]+"</p>"}b+="</td>";b+="</tr>";b+="</table>";b+="</td>";b+="<td width='28%'>";b+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+f.id+'", "search");\'>';if(a.roleID==="1"){b+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+f.id+"\"); return false;'>"}b+="</td>";b+="</tr>";d.push(b);b=""});c+="</tbody>";c+="</table>";c+="</div>";c+="</div>";m("#search").append(c);m("#search-results").show();MMS.pagination.init(d)};p=function(b){var a;m.each(b.spellcheck.suggestions,function(d,c){if(c!=="true"){if(c.suggestion!==undefined){m.each(c.suggestion,function(f,e){if(f===0){v=e.word.trim();a="<a href='#' id='didYouMeanSearch'>"+e.word.trim()+"</a>"}})}}});if(a!==undefined){m("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+a+"</h4>");m("#didYouMeanSearch").on("click",function(c){n()})}};n=function(){m("#search").empty();m("#searchActionFeedback").empty();var a=s.replace(o,v);o=v;r={type:"GET",url:MMS.configObj.search,data:a,dataType:"json",cache:true,success:function(b){if(b.error==500){m("#error").html(w)}else{m("#error").html("");x(b)}}};MMS.utils.doAjax(r)};t=function(){m("#search-forms").hide();m("form.quick_search").submit(function(a){q(a)})};return{init:function(){return t()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(x){var p,u=1,o,n=4,q,r,m,t,w,v,s;o=function(){return Math.ceil(m/n)};q=function(){x("div.pagination").empty();var a="";a+="<ul id='pagination-flickr'>";a+="<li><a href='#' onclick='MMS.pagination.previous("+u+")'>Previous</a></li>";for(var b=1;b<=o();b++){if(b!==u){if(o()<=20){a+="<li><a href='#' onclick='MMS.pagination.renderPage("+b+"); return false;'>"+b+"</a></li>"}}else{a+="<li class='active'>"+b+"</li>";u=b}}a+="<li><a href='#' onclick='MMS.pagination.next("+u+")'>Next</a></li>";a+="</ul>";x("div.pagination").append(a)};w=function(a){if(a<o()){var b=a+1;r(b)}};v=function(a){if(a>1){var b=a-1;r(b)}};r=function(a){u=a;var a=(a-1);q();x("#pages").empty();for(var b=(a)*n;b<((a)*n)+n;b++){x("#pages").append(p[b])}};s=function(a){p=a;m=a.length;r(1)};return{init:function(a){return s(a)},renderPage:function(a){return r(a)},next:function(a){return w(a)},previous:function(a){return v(a)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(h){var n,l,i,k,j,m;j={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};n=function(){MMS.utils.focusForm("#batch-ingest-forms");k={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(a){MMS.view.createView(j);l(a)}};MMS.utils.doAjax(k);return false};l=function(b){h(".current").html("Batch");if(b.length===0){h("#batch-ingest-forms").remove();h("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var a="";a+="<div>";a+="<div>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Batch Records</th>";a+="<th>Status</th>";a+="</tr>";a+="</thead>";a+="<tbody>";h.each(b,function(d,c){if(c.object!=""){a+="<input name='pids[]' type='hidden' value='"+c.pid+"' />"}a+="<tr>";a+="<td width='85%'>";a+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";a+="<tr align='top'>";if(c.object!=""){a+="<td width='30%' align='center'><p><img src='"+c.object+"' alt='"+c.title+"' border='1'></p></td>"}else{a+="<td width='30%' align='center'><p>No Object.</p></td>"}a+="<td width='40%' align='left'>";a+="<p><strong>Pid:</strong> "+c.pid+"</p>";a+="<p><strong>Title:</strong> "+c.title+"</p>";a+="<p><strong>Creator:</strong> "+c.creator+"</p>";a+="<p><strong>Identifier:</strong> "+c.identifier+"</p>";a+="</td>";a+="</tr>";a+="</table>";a+="</td>";if(c.object!=""){a+="<td width='28%'>complete.</td>"}else{a+="<td width='28%'>incomplete.</td>"}a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";h("#batch-ingest").empty().append(a);h("#batch-ingest-forms").show()};i=function(){k={type:"POST",url:MMS.configObj.batch,data:h("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(a){if(a.success===false){h("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){h("div#actionFeedback").empty()},4000)}else{h("#batch-ingest").empty();h("#batch-ingest-forms").remove();h("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){h("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(k);return false};m=function(){h("#batch-ingest-forms").hide();h("#batch").on("click",function(a){n(h(this).attr("id"))})};return{init:function(){return m()},ingest:function(){return i()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(p){var m,i,l,j,k,o,n;k={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};m=function(){l={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(a){MMS.view.createView(k);i(a)}};MMS.utils.doAjax(l)};i=function(b){p(".current").html("Xml");var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>XML File</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";p.each(b,function(d,c){a+="<input name='xmlFiles[]' type='hidden' value='"+c.fileName+"' />";a+="<tr>";a+="<td>"+c.fileName+"</td>";a+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+c.fileName+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";p("#xml").append(a);p("#xml-forms").show()};j=function(c){var b=[];for(var a in c){b.push(c[a].name)}l={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:b},dataType:"json",cache:false,success:function(d){p("#xml-forms").remove();if(d.created==="true"){p("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){p("div#actionFeedback").empty()},5000)}else{p("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){p("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(l)};o=function(){MMS.view.createView(k);l={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(a){p("#xml").append(a)}};MMS.utils.doAjax(l)};n=function(){p("#view_xml").on("click",function(){m()})};return{init:function(){return n()},saveXml:function(a){return j(a)},createUploadArea:function(){return o()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(j){var g,i,h,f;g={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};i=function(){h={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(a){f(a)}};MMS.utils.doAjax(h);return false};f=function(b){j(".current").html("Review Queue");j("#search-results").empty();MMS.view.createView(g);if(b.length===0){j("#queue-forms").remove();j("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Pid</th>";a+="<th>Title</th>";a+="<th>Created By</th>";a+="<th>Date Created</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";j.each(b,function(d,c){a+="<tr>";a+="<td>"+c.pid+"</td>";a+="<td>"+c.title+"</td>";a+="<td>"+c.name+"</td>";a+="<td>"+c.timestamp+"</td>";a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+c.pid+'", "queue");\'</td>';a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";j("#search-results").empty();j("#queue").append(a)};return{getItems:function(){i()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(c){var d;d=function(b){var a="";a+='<div id="actionFeedback"></div>';a+='<div id="error"></div>';a+='<article id="'+b.articleID+'" class="'+b.articleClass+'">';a+="<header>";if(b.h3ID!=="null"){a+='<h3 id="'+b.h3ID+'">'+b.h3Value+"</h3>"}if(b.header!=="null"){a+=b.header}a+="</header>";a+='<form id="'+b.formID+'">';a+='<div id="'+b.divID+'" class="'+b.divClass+'"></div>';a+="<footer>";if(b.footer!=="null"){a+=b.footer}a+="</footer>";a+="</form>";a+="</article>";c("#"+b.content).empty().append(a)};return{createView:function(a){d(a)}}}(jQuery));$(function(){var b={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(b))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(b){var a=b.split("."),d=MMS,c;if(a[0]==="MMS"){a=a.slice(1)}for(c=0;c<a.length;c+=1){if(typeof d[a[c]]==="undefined"){d[a[c]]={}}d=d[a[c]]}return d};MMS.namespace("MMS.utils");MMS.utils=(function(e){var d,f,b,c,a;c={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};d=function(g){g.timeout=5000;g.error=function(h,i){e("#error").html("<h4 class='alert_error'>An error has occurred ("+i+").  Please contact library-support@du.edu for assistance.</h4>")};g.statusCode={403:function(){alert("Session expired");MMS.view.createView(c);e("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};e(document).ajaxStart(function(){e.fancybox.showLoading()});e(document).ajaxStop(function(){e.fancybox.hideLoading()});e.ajax(g)};b=function(){var g={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(h){if(typeof h===null||h.isFedoraUp!==200||h.isSolrUp!=="OK"){e("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");e("#authenticate").attr("disabled","disabled")}}};d(g)};a=function(g){return g.replace(/</g,"").replace(/>/g,"")};f=function(g){if(g!=="#metadata-forms"){e(".optional_fields").hide();e("#optional_fields").hide()}e("article:not("+g+", .breadcrumbs)").hide()};return{doAjax:function(g){d(g)},focusForm:function(g){f(g)},sanitizeInput:function(g){return a(g)},pingServices:function(){b()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(g){var b,w,y,v,r,e,o,s,m,p,f,h,k,i,q,d,n,a,j,x,u,c,l,t;t={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};h=function(){var z="";z+='<article id="controlled-vocabulary-section" class="module width_quarter">';z+="<header><h3>Controlled Vocabularies</h3></header>";z+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';z+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';z+="<p>";z+='<select id="vocab-options" name="vocab-options">';z+='<option value="ulan" selected>ULAN</option>';z+='<option value="aat">AAT</option>';z+='<option value="locnames">LC-Names</option>';z+='<option value="locsubjects">LC-Subjects</option>';z+='<option value="aloracreators">Alora-Creators</option>';z+='<option value="alorasubjects">Alora-Subjects</option>';z+="</select>&nbsp;";z+='<input id="getVocabularies" type="submit" value="Go" />';z+="</p>";z+="</div>";z+='<div id="vocabulary-results"></div>';z+="</article>";return z};c=function(){g("#search-results").empty();MMS.view.createView(t);k();u();g(".current").html("Creator");g("#controlled-vocabulary-form").show()};l=function(){g("#search-results").empty();MMS.view.createView(t);x();u();g(".current").html("Subject");g("#controlled-vocabulary-form").show()};u=function(){g("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){a()}})};a=function(){s={type:"POST",url:MMS.configObj.creatorapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(s)};j=function(){s={type:"POST",url:MMS.configObj.subjectapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(s)};x=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Subject";z+="</label>";z+="<input id='subject' name='subject[]' type='text' class='required' />";z+="</fieldset>";z+="<label>";g("#controlledvocabulary").append(z)};k=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Creator";z+="</label>";z+="<input id='creator' name='creator[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Creator Alternative";z+="</label>";z+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Nationality";z+="</label>";z+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Role";z+="</label>";z+="<input id='description-role' name='description.role[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Biography";z+="</label>";z+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Sex";z+="</label>";z+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Source";z+="</label>";z+="<input id='source' name='source' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Earliest Date";z+="</label>";z+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Latest Date";z+="</label>";z+="<input id='latestdates' name='latestdates' type='text' class='required' />";z+="</fieldset>";g("#controlledvocabulary").append(z)};m=function(){return sessionStorage.getItem("roleID")};b=function(){var A,z=g("input#vocabTerm").val(),B=g("select#vocab-options");z=MMS.utils.sanitizeInput(z);if(B.length>0){A=B.val()}s={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+z+"&option="+A,dataType:"json",cache:true,success:function(C){v(A,C)}};MMS.utils.doAjax(s)};p=function(C,z,B){var A="id="+C+"&vocabType="+z;if(B===undefined){var B=function(D){f(C,D)}}s={type:"GET",url:MMS.configObj.vocabUrl,data:A,dataType:"json",cache:true,success:B};MMS.utils.doAjax(s)};f=function(C,z){var A="",B=g("span#"+C+"-toggle").text();if(B==="( + )"){g("span#"+C+"-toggle").text("( - )");g("div#"+C+"-vocab-data").show()}else{if(B==="( - )"){g("div#"+C+"-vocab-data").hide();g("span#"+C+"-toggle").text("( + )")}}g.each(z,function(D,E){if(E.subject_id!==undefined){A+="<p><strong>Subject id:</strong> "+E.subject_id+"</p>"}if(E.nationalities!==""){A+="<p><strong>Nationality:</strong> "+E.nationalities+"</p>"}if(E.role_id!==""){A+="<p><strong>Role:</strong> "+E.role_id+"</p>"}if(E.preferred_terms_source_id!==""){A+="<p><strong>Source:</strong> "+E.preferred_terms_source_id+"</p>"}if(E.non_preferred_terms_term_text!==""){A+="<p><strong>Alternative name:</strong> "+E.non_preferred_terms_term_text+"</p>"}if(E.preferred_biographies_biography_text!==""){A+="<p><strong>Bio:</strong> "+E.preferred_biographies_biography_text+"</p>"}if(E.preferred_biographies_birth_date!==""){A+="<p><strong>Birth date:</strong> "+E.preferred_biographies_birth_date+"</p>"}if(E.preferred_biographies_death_date!==""){A+="<p><strong>Death date:</strong> "+E.preferred_biographies_death_date+"</p>"}if(E.preferred_biographies_sex!==""){A+="<p><strong>Sex:</strong> "+E.preferred_biographies_sex+"</p>"}});g("div#"+C+"-vocab-data").empty().append(A)};o=function(C,A,z){var B;while(A<50){B=g("#"+z+"-"+A).val();if(B===""){g("#"+z+"-"+A).val(C);break}A++}return B};e=function(F,H){var G,A,B,E,I,z=1,D=function(J){n(J)},C=g("select#vocab-options");if(m()=="2"){g("#"+F).removeAttr("disabled");g("#"+F).attr("readonly","readonly")}if(C.length>0){I=C.val()}if(I==="ulan"||I==="locnames"||I==="aloracreators"){if(I!=="locnames"){p(F,I,D)}G=g("#creator-0").val();if(G===""){o(H,0,"creator")}else{A=g("#coverage-spatial-repository-0").val(H);if(A===""){o(H,0,"coverage-spatial-repository")}else{o(H,z,"coverage-spatial-repository")}}}else{if(I==="aat"||I==="locsubjects"||I==="alorasubjects"){E=g("#coverage-temporal-styleperiod-0").val();if(E===""){o(H,0,"coverage-temporal-styleperiod")}else{E=o(H,z,"coverage-temporal-styleperiod")}if(E===undefined){B=g("#subject-0").val();if(B===""){o(H,0,"subject")}else{o(H,z,"subject")}}}}};n=function(z){var A="";g.each(z,function(B,C){A+='<input name="creator.alternative[]" type="hidden" value="'+C.non_preferred_terms_term_text+'" />';A+='<input name="description.creatorbio[]" type="hidden" value="'+C.preferred_biographies_biography_text+'" />';A+='<input name="description.nationality[]" type="hidden" value="'+C.nationalities+'" />';A+='<input name="description.role[]" type="hidden" value="'+C.role_id+'" />';A+='<input name="description.lifedates[]" type="hidden" value="'+C.preferred_biographies_birth_date+"-"+C.preferred_biographies_death_date+'" />';A+='<input name="source[]" type="hidden" value="'+C.preferred_terms_source_id+'" />'});g("div#metadata").append(A)};v=function(B,C){var z,A="";if(B==="ulan"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+w+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"ulan\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="aat"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+w+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="locnames"||B==="locsubjects"){z=C.loc;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+w+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+w+", $(this).text());return false;'>"+C.loc[D].title+"</a><br /><a href='#'>"+E.id+"</a></li></ul></p>"})}else{if(B==="aloracreators"||B==="alorasubjects"){z=C.local;if(z.message!==undefined){A+="<p><ul><li>No results found.</li></ul></p>";g("div#vocabulary-results").empty().append(A);return}g.each(z,function(D,E){if(B==="aloracreators"){A+="<p><ul><li><a href='#' id='"+w+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"local\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{A+="<p><ul><li><a href='#' id='"+w+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}g("div#vocabulary-results").empty().append(A)};r=function(){g("#controlled-vocabulary-section").show();var z=h();g("#content").append(z);g("input#vocabTerm").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("select#vocab-options").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("input#getVocabularies").on("click",function(){b()})};q=function(){g("select#type-arttypes").val("");g("select#type-timeperiods").val("");g("select#type-instructors").val("")};i=function(C){var z=["arttypes","timeperiods","instructors"],B={},A;if(C===undefined){C=function(D){d(D)}}for(A=0;A<z.length;A++){B.type="GET";B.url=MMS.configObj.vocabUrl;B.data="vocabType="+z[A];B.dataType="json";B.cache=true;B.success=C;MMS.utils.doAjax(B)}};d=function(B){var B=g.parseJSON(B);var C;var D;var z=sessionStorage.getItem("arttypes");var A=sessionStorage.getItem("timeperiods");var E=sessionStorage.getItem("instructors");C="<option value=''>---Select an term---</option>";g.each(B,function(F,G){if(G.type){D=G.type}if(G.term===z||G.term===A||G.term===E){C+="<option value='"+G.term+"' selected>"+G.term+"</option>"}else{C+="<option value='"+G.term+"'>"+G.term+"</option>"}});g("select#type-"+D).html(C)};y=function(){g("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){b()},displayControlledVocabulariesBox:function(z,A){r(z,A)},selectVocabularyTerm:function(A,z){e(A,z)},getTermData:function(A,z){p(A,z)},getLists:function(){i()},resetLists:function(){q()},loadCreatorForm:function(){c()},loadSubjectForm:function(){l()},init:function(){y()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(b){var f,j,s,v,g,E,c="#metadata",r="#metadata-form",w="#metadata-forms",C,B,t,k,A,d,n,h,e,q,x,o,p,D,l,a,m,y,i,u,z;f={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};j=function(G){var F=t(a,"displayOrder");b.each(F,function(H,I){k=C(I);k.appendTo(c)});b(c).append("<input name='objectType' type='hidden' value='"+G+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};y=function(H){var F;var G;if(H==="queue"){G="Back to Review Queue"}else{if(H==="search"){b("#search-results").hide();G="Back to Search Results"}}F="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+H+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+G+"</a>";return F};i=function(F){if(F==="queue"){MMS.queue.getItems()}else{if(F==="search"){b("#search-results").show();b("#content").empty()}}b("#clone-record").empty();b("#controlled-vocabulary-section").hide();return};s=function(H,I,M){var F=100,K="",L,G;b(".current").html("Edit Metadata");b(c).empty();K+="<div id='edit-mode'></div>";K+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";K+="<fieldset id='isPid'>";K+="<label>pid</label>";K+="<input type='text' value='"+I+"'  disabled />";K+="</fieldset>";if(M==="queue"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}else{if(M==="search"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}}a=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var J=t(a,"displayOrder");b.each(J,function(O,P){b.each(H,function(R,S){if(P.element===R){L=R.replace(".","-");if(typeof S==="string"){K+="<fieldset class='"+L+"-0'>";if(P.repeat==="true"){K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+R+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+R+"'><span>Add</span></a></span></label>"}else{K+="<label>"+P.label+"</label>"}if(P.type==="select"){if(P.required==="true"){var Q="class='required"}if(P.element==="type.arttype"){sessionStorage.setItem("arttypes",S)}else{if(P.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",S)}else{if(P.element==="instructor"){sessionStorage.setItem("instructors",S)}}}K+="<select name='"+P.element+"[]' id='"+P.id+"' "+Q+"'></select>"}if(P.type==="text"){K+="<input id='"+R+"-"+F+"' name='"+R+"[]' type='text' value='"+S+"' "+Q+" />"}if(P.type==="textarea"){K+="<textarea id='"+R+"-"+F+"' name='"+R+"[]' rows='7' cols='55' "+Q+">"+S+"</textarea> "}K+="</fieldset>"}if(typeof S==="object"){b.each(S,function(U,T){F++;if(F>101){K+="<fieldset class='"+L+"-"+F+"'>"}else{K+="<fieldset class='"+L+"-0'>"}if(P.repeat==="true"){if(F>101){K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+R+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+R+"'><span>Del</span></a></span></label>"}else{K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+R+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+R+"'><span>Add</span></a></span></label>"}}else{K+="<label>"+P.label+"</label>"}if(P.type==="text"){K+="<input id='"+R+"-"+F+"' name='"+R+"[]' type='text' value='"+T+"' "+Q+" />"}if(P.type==="textarea"){K+="<textarea id='"+R+"-"+F+"' name='"+R+"[]' rows='7' cols='55' "+Q+">"+T+"</textarea> "}K+="</fieldset>"})}}})});b.each(H,function(O,P){if(O==="collection"){K+="<input id='"+O+"-0' name='collection' type='hidden' value='"+P+"' />"}else{if(O==="identifier.system"){K+="<input id='"+O+"' class='pid' name='pid' type='hidden' value='"+P+"' />"}else{if(O==="identifier.legacy"){K+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+P+"' />"}else{if(O==="identifier.master"){K+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+P+"' />"}else{if(O==="objectType"){G=P;K+="<input name='"+O+"' type='hidden' value='"+P+"' />"}else{if(O==="date.created"){K+="<fieldset>";K+="<label class='datecreated'>"+O+"</label>";K+="<input class='datecreated' type='text' value='"+P+"' disabled />";K+="<input class='datecreated' name='"+O+"[]' type='hidden' value='"+P+"'/>";K+="</fieldset>"}else{if(O==="date.modified"){K+="<fieldset>";K+="<label class='datemodified'>"+O+"</label>";K+="<input class='datemodified' type='text' value='"+P+"' disabled />";K+="</fieldset>"}}}}}}}});b.each(J,function(O,P){if(P.required==="false"){K+="<fieldset class='"+P.id+"-0' style='display:none;'>";K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+P.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+P.element+"'><span>Del</span></a></span></label>";if(P.type==="text"){K+="<input id='"+P.id+"-0' name='"+P.element+"[]' type='"+P.type+"' value='' />"}else{if(P.type==="textarea"){K+="<textarea id='"+P.id+"-0' name='"+P.element+"[]' rows='7' cols='55'></textarea> "}}K+="</fieldset>"}});f.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(f);var N=y(M);b("#pid").append(N);b(c).append(K);e();b(".optional_fields").show();b("#optional_fields").show();b(w).show();v()};E=function(F,G){var J,N=G.split("-"),M=N[N.length-2],K,I,H,L=[];if(N[N.length-1]==="clone"){N.pop();N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");I=I.replace(".","-");J=function(){b.each(a,function(O,P){H=P.element.replace(".","-");H=H.replace(".","-");if(I===H){g(F,P)}})};d(J)}else{if(N[N.length-1]==="remove"){N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");if(M==="0"){J=function(){b("#"+I).val("");b("."+I).hide()}}else{J=function(){b("."+G).remove()}}n(J)}}};h=function(F,G){F.preventDefault();F.stopPropagation();G=G.replace("-remove","");b("."+G).remove()};n=function(F){F()};d=function(F){F()};u=function(F){F=F.replace("-clear","");b("#"+F).val("")};C=function(H){var F=JSON.parse(sessionStorage.getItem("mms_profile"));var I="";var G="";if(H.type==="select"){if(H.required==="true"){var J="class='required"}I+="<fieldset class='"+H.id+"-"+MMS.counterObj.count+"'>";I+="<label for='"+H.id+"'>"+H.label+"</label>";I+="<select name='"+H.element+"[]' id='"+H.id+"' "+J+"'></select>";I+="</fieldset>"}else{if(H.vocabulary==="true"&&F.roleID=="2"){G="&nbsp;&nbsp;<a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}I+="<fieldset class='"+H.id+"-"+MMS.counterObj.count+"'>";I+="<label>";I+=H.label;if(H.repeat==="true"){I+="<span class='clone'><a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+H.element+"'><span>Add</span></a></span>"}else{if(H.repeat==="false"){I+="<a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(H.required==="false"){I+="<span class='remove'><a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+H.element+"'><span>Del</span></a></span>"}I+="</label>"+G;if(H.type==="text"){I+="<input "}else{if(H.type==="textarea"){I+="<textarea "}}I+="id='"+H.id+"-"+MMS.counterObj.count+"'";I+="name='"+H.element+"[]' ";I+="type='"+H.type+"' ";if(H.vocabulary==="true"&&F.roleID=="2"){I+="disabled='disbled'"}I+="class='";if(H.required==="true"){I+="required"}I+="'";if(H.type==="text"){I+="/>"}else{if(H.type==="textarea"){I+="rows='14' cols='45'></textarea>"}}I+="</fieldset>"}if(H.required==="true"){A=b(I)}else{if(H.required==="false"){A=b(I).hide()}}return A};v=function(){b("#optional_fields").empty();b.each(a,function(G,H){if(H.required==="false"){var F="<li class='icn_categories'><a href='#'>"+H.label+"</a></li>";B=b(F).on("click","a",function(I){I.preventDefault();MMS.metadata.appendOptionalField(H)});B.appendTo("#optional_fields")}})};z=function(F){b("."+F.id+"-0").show();location.hash="#"+F.id+"-0"};g=function(H,G){H.preventDefault();H.stopPropagation();var F=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var J="";var I="";I+="<fieldset class='"+G.id+"-"+MMS.counterObj.count+"'>";I+="<label>";I+=G.label;I+="&nbsp;<span class='remove'><a href='#' id='"+G.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+G.element+"'><span>Del</span></a></span>";if(G.vocabulary==="true"){}I+="</label>";if(G.type==="text"){I+="<input "}else{if(G.type==="textarea"){I+="<textarea "}}I+="id='"+G.id+"-"+MMS.counterObj.count+"'";I+="name='"+G.element+"[]' ";I+="type='"+G.type+"' ";if(G.vocabulary==="true"&&F.roleID=="2"){I+="disabled='disabled'"}I+="class='none ";I+="'";if(G.type==="text"){I+="/>"}else{if(G.type==="textarea"){I+="rows='10' cols='45'></textarea>"}}I+="</fieldset>";J=b(I).insertAfter("."+G.id+"-0");return J};q=function(){var G=JSON.parse(sessionStorage.getItem("mms_profile"));if(G.roleID==="2"){p={type:"PUT",url:MMS.configObj.queue,data:b(r).serialize(),dataType:"json",cache:true,success:function(I){b("#metadata-form").find("input[type=text], textarea").val("");b("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(p);return}var H=b(".pid").val();var F=b("#type").val();p={type:"PUT",url:MMS.configObj.repository,data:b(r).serialize(),dataType:"json",cache:false,success:function(I){if(I.updated==="true"){p={type:"GET",url:MMS.configObj.repository,data:"pid="+H,dataType:"json",cache:true,success:function(J,K){b("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},5000);location.hash="#header";return false;s(J,H,K)}};MMS.utils.doAjax(p)}else{if(I.created==="true"){b("#metadata-form").find("input[type=text], textarea").val("");b("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(p)};D=function(F,G,H){F.preventDefault();p={type:"GET",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:false,success:function(I){s(I,G,H)}};MMS.utils.doAjax(p)};m=function(){var F=b(".pid").val();b(".pid").remove();b("#isPid").remove();b(".datecreated").remove();b(".datemodified").remove();b("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+F+".</h4>");setTimeout(function(){b("div#actionFeedback").remove()},10000)};e=function(){b(r).validate({errorClass:"invalid",submitHandler:function(){q()}})};l=function(F,H){F.preventDefault();var G=confirm("Are you sure you want to delete this record?");if(G){p={type:"POST",url:MMS.configObj.repository,data:"pid="+H,dataType:"json",cache:true,success:function(I){if(I.deleted==="true"){b("#search-forms").hide();b("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(p)}return false};t=function(F,I){var G=[];for(var H in F){G.push(F[H])}return G.sort(function(M,L){var K=M[I];var J=L[I];return((K<J)?-1:((K>J)?1:0))})};x=function(G){MMS.counterObj.count=0;b("#search-results").empty();MMS.view.createView(f);if(G==="image"){var F=[];a=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));j(G);v()}e();b(".current").html(G+" metadata");b("#clone-record").remove();b(w).show();b(".optional_fields").show();b("#optional_fields").show();b("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};o=function(){b(w).hide();b(".optional_fields").hide();b(".formType").on("click",function(F){x(b(this).attr("id"))})};return{getMetadata:function(F,G,H){D(F,G,H)},deleteMetadata:function(G,F){l(G,F)},removeClonedField:function(F,G){h(F,G)},constructFieldEvent:function(F,G){E(F,G)},cloneRecord:function(F){m(F)},back:function(F){i(F)},createMetadataEditForm:function(H,G,F){s(H,G,F)},appendOptionalField:function(F){z(F)},clearField:function(F){u(F)},loadForm:function(F){x(F)},init:function(){o()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(d){var i="#user",p="#user-form",a="#user-forms",k,h,l,o,g,b,r,c,m,t,q,e,u,n,f,j,s;s={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};g=function(){d(p).validate({errorClass:"invalid",submitHandler:function(){c()}})};h=function(){s.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(s);var B="";var v="";var z="";var x="";var A="";var C="";var w="";v+="<fieldset>";v+="<label>";v+="* First Name";v+="</label>";v+="<input id='firstName' name='firstName' type='text' class='required' />";v+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' class='required' />";z+="</fieldset>";x+="<fieldset>";x+="<label>";x+="* DU ID";x+="</label>";x+="<input id='duID' name='duID' type='text' class='required' />";x+="</fieldset>";u={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(D){C+="<fieldset>";C+="<label for='roleID'>* Roles</label>";C+="<select name='roleID' id='roleID' class='required'>";C+="<option value=''>---Assign a role--</option>";d.each(D,function(E,F){if(E!="3"){C+="<option value='"+E+"'>"+F+"</option>"}});C+="</select>";C+="</fieldset>";d(i).append(C)}};var y=JSON.parse(sessionStorage.getItem("mms_profile"));if(y.roleID=="3"){n={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(D){w+="<strong>* Assign a Collection</strong>";d.each(D,function(E,F){w+="<p><input id='"+F.collectionID+"' name='collections[]' type='radio' value='"+F.collectionID+"' /><label for='"+F.collectionID+"'>"+F.title+"</label></p>"});d(i).append(w)}};MMS.utils.doAjax(n)}else{w+="<input id='"+y.collectionID+"' name='collections[]' type='hidden' value='"+y.collectionID+"' />";B+=w}MMS.utils.doAjax(u);B+=v;B+=z;B+=x;d(i).append(B);g()};o=function(){s.footer="null";MMS.view.createView(s);t={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(v){var w="";w+="<div class='tab_container'>";w+="<div id='tab1' class='tab_content'>";w+="<table class='tablesorter' cellspacing='0'>";w+="<thead>";w+="<tr>";w+="<th>First Name</th>";w+="<th>Last Name</th>";w+="<th>Role</th>";w+="<th>Active</th>";w+="<th>Actions</th>";w+="</tr>";w+="</thead>";w+="<tbody>";d.each(v,function(y,x){w+="<tr>";w+="<td>"+x.firstName+"</td>";w+="<td>"+x.lastName+"</td>";w+="<td>"+x.roleName+"</td>";if(x.isActive==="1"){w+="<td>Yes</td>"}else{w+="<td>No</td>"}w+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+x.id+");'></td>";w+="</tr>"});w+="</tbody>";w+="</table>";w+="</div>";w+="</div>";d(i).append(w)}};MMS.utils.doAjax(t)};l=function(v){var y="";var x="";var z="";var w="";s.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(s);d(".current").html("Edit User");f={type:"GET",url:MMS.configObj.users,data:"id="+v,dataType:"json",cache:false,async:false,success:function(A){y+="<input name='userID' type='hidden' value='"+v+"' />";y+="<fieldset>";y+="<label>";y+="* First Name";y+="</label>";y+="<input id='firstName' name='firstName' type='text' value='"+A[0].firstName+"' class='required' />";y+="</fieldset>";y+="<fieldset>";y+="<label>";y+="* Last Name";y+="</label>";y+="<input id='lastName' name='lastName' type='text' value='"+A[0].lastName+"' class='required' />";y+="</fieldset>";d(i).append(y);u={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(C){x+="<fieldset>";x+="<label for='roleID'>* Roles</label>";x+="<select name='roleID' id='roleID' class='required'>";x+="<option value=''>---Assign a role--</option>";d.each(C,function(D,E){if(A[0].roleID===D){x+="<option value='"+D+"' selected>"+E+"</option>"}else{if(D!="3"){x+="<option value='"+D+"'>"+E+"</option>"}}});x+="</select>";x+="</fieldset>";d(i).append(x)}};var B=JSON.parse(sessionStorage.getItem("mms_profile"));if(B.roleID=="3"){n={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(C){z+="<strong>* Assigned Collection</strong>";d.each(C,function(D,E){if(A[1].collectionID===E.collectionID){z+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' checked /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}else{z+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}})}};MMS.utils.doAjax(n)}else{z+="<input name='collectionID' type='hidden' value='"+B.collectionID+"' />"}d(i).append(z);MMS.utils.doAjax(u);w+="<label>";w+="isActive";w+="</label>";if(A[0].isActive=="1"){w+="<input id='isActive' name='isActive' type='checkbox' value='"+A[0].isActive+"' checked />"}else{w+="<input id='isActive' name='isActive' type='checkbox' value='"+A[0].isActive+"' />"}d(i).append(w)}};MMS.utils.doAjax(f);g()};c=function(){q={type:"PUT",url:MMS.configObj.users,data:d(p).serialize(),dataType:"json",cache:false,success:function(v){if(v.updated==="true"){o()}else{if(v.updated==="false"){alert("Error: Update failed.")}else{d("#user-form")[0].reset()}}}};MMS.utils.doAjax(q)};m=function(w){var v=confirm("Are you sure you want to delete this user?");if(v){e={type:"POST",url:MMS.configObj.users,data:"userID="+w,dataType:"json",cache:false,success:function(x){if(x.deleted==="true"){o()}else{if(x.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(e)}};k=function(){j={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(v){sessionStorage.setItem("mms_profile",JSON.stringify(v));var w=JSON.parse(sessionStorage.getItem("mms_profile"));var x=w.firstName+" "+w.lastName+" ("+w.roleName+")";d("#user-role").append(x)}};MMS.utils.doAjax(j)};b=function(v){if(v==="addUser"){h();d("#search-results").empty();d(".current").html("Add User")}else{if(v==="viewUsers"){o();d("#search-results").empty();d(".current").html("Users")}}};r=function(){d(a).hide();d("#addUser").on("click",function(v){b(d(this).attr("id"))});d("#viewUsers").on("click",function(v){b(d(this).attr("id"))})};return{init:function(){return r()},constructUserEditForm:function(v){return l(v)},deleteUserData:function(v){return m(v)},getSessionInfo:function(){return k()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(a){var c="#collection",l="#collection-form",i="#collection-forms",k,h,d,j,f,b,g,e;e={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};k=function(){MMS.view.createView(e);var r="";var q="";var p="";var m="";var o="";q+="<fieldset>";q+="<label>";q+="* Title";q+="</label>";q+="<input id='title' name='title' type='text' class='required' />";q+="</fieldset>";p+="<fieldset>";p+="<label>";p+="* Description";p+="</label>";p+="<input id='description' name='description' type='text' class='required' />";p+="</fieldset>";o+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";r+=q;r+=p;r+=o;a(c).append(r);var n={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(s){m+="<fieldset>";m+="<label>";m+="* Object Type";m+="</label>";m+="<br />";a.each(s,function(t,u){m+="<p><input id='"+u.objectType+"' name='objectType[]' type='checkbox' value='"+u.objectTypeID+"' /> "+u.objectType+"</p>"});m+="</fieldset>";a(c).append(m)}};MMS.utils.doAjax(n)};h=function(){MMS.view.createView(e);g={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(n){var m="";m+="<div class='tab_container'>";m+="<div id='tab1' class='tab_content'>";m+="<table class='tablesorter' cellspacing='0'>";m+="<thead>";m+="<tr>";m+="<th>Collection Name</th>";m+="<th>Description</th>";m+="<th>Active</th>";m+="<th>Actions</th>";m+="</tr>";m+="</thead>";m+="<tbody>";a.each(n,function(o,p){m+="<tr>";m+="<td>"+p.title+"</td>";m+="<td>"+p.description+"</td>";if(p.isActive==="1"){m+="<td>Yes</td>"}else{m+="<td>No</td>"}m+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+p.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+p.collectionID+"\"); return false;'></td>";m+="</tr>"});m+="</tbody>";m+="</table>";m+="</div>";m+="</div>";a(c).append(m)}};MMS.utils.doAjax(g)};b=function(){g={type:"PUT",url:MMS.configObj.collections,data:a(l).serialize(),dataType:"json",cache:false,success:function(m){a(l)[0].reset()}};MMS.utils.doAjax(g)};j=function(m){if(m==="addCollection"){k();a(".current").html("Add Collection")}else{if(m==="editCollection"){}else{if(m==="deleteCollection"){}else{if(m==="viewCollections"){h();a(".current").html("Collections")}}}}};f=function(){a(i).hide();a("#addCollection").on("click",function(m){j(a(this).attr("id"))});a("#viewCollections").on("click",function(m){j(a(this).attr("id"))});d()};d=function(){a(l).validate({errorClass:"invalid",submitHandler:function(){b()}})};return{init:function(){return f()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(d){var c,f,e,a,b=".module width_full",g="#login-form",h,i;c=function(){a={type:"POST",url:MMS.configObj.authenticate,data:d(g).serialize(),dataType:"json",cache:true,success:function(j){d(b).hide();f(j)}};d("h3#message").ajaxStart(function(){d("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(a)};f=function(j){if(j.isAuthenticated==="false"){d("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");d("#authenticate").removeAttr("disabled")}else{if(j.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};e=function(){d("#login-form").validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){d("#logout").click(function(){a={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(j){if(j.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(a)});return false};h=function(){e();i()};return{init:function(){h()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(l){var h,i,j,f,k,c,a,g,e,d,b="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";d={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};h=function(m){l("#content").empty();m.preventDefault();j=l("input#quickSearch").val();j=MMS.utils.sanitizeInput(j);if(j===""){return l("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}f=l("#search_box").serialize();l("#search").empty();l("#actionFeedback").empty();g={type:"GET",url:MMS.configObj.search,data:l("#search_box").serialize(),dataType:"json",cache:true,success:function(n){if(n.error==500){l("#error").html(b)}else{l("#error").html("");MMS.view.createView(d);a(n)}}};MMS.utils.doAjax(g);return false};a=function(n){var p="";var o=[];var q="";var m=JSON.parse(sessionStorage.getItem("mms_profile"));l("#search_box")[0].reset();l("#search-message").text("You searched for: "+j);l(".current").html("Search Results");if(n.response.numFound===0){l("#search-forms").remove();l("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}p+="<div>";p+="<div>";p+="<table class='tablesorter' cellspacing='0'>";p+="<thead>";p+="<tr>";p+="<th>Records Found: "+n.response.numFound+"</th>";p+="<th>Actions</th>";p+="</tr>";p+="</thead>";p+="<tbody id='pages'>";l.each(n.response.docs,function(r,s){q+="<tr>";q+="<td width='85%'>";q+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";q+="<tr align='top'>";if(s.identifier_t[0]!==undefined){q+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+s.identifier_t[0]+"' alt='"+s.title_t[0]+"' border='1'></p></td>"}q+="<td width='40%' align='left'>";if(s.title_t!==undefined){q+="<p><strong>Title:</strong> "+s.title_t[0]+"</p>"}if(s.creator_t!==undefined){q+="<p><strong>Creator:</strong> "+s.creator_t[0]+"</p>"}q+="</td>";q+="</tr>";q+="</table>";q+="</td>";q+="<td width='28%'>";q+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+s.id+'", "search");\'>';if(m.roleID==="1"){q+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+s.id+"\"); return false;'>"}q+="</td>";q+="</tr>";o.push(q);q=""});p+="</tbody>";p+="</table>";p+="</div>";p+="</div>";l("#search").append(p);l("#search-results").show();MMS.pagination.init(o)};i=function(n){var m;l.each(n.spellcheck.suggestions,function(o,p){if(p!=="true"){if(p.suggestion!==undefined){l.each(p.suggestion,function(q,r){if(q===0){c=r.word.trim();m="<a href='#' id='didYouMeanSearch'>"+r.word.trim()+"</a>"}})}}});if(m!==undefined){l("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+m+"</h4>");l("#didYouMeanSearch").on("click",function(o){k()})}};k=function(){l("#search").empty();l("#searchActionFeedback").empty();var m=f.replace(j,c);j=c;g={type:"GET",url:MMS.configObj.search,data:m,dataType:"json",cache:true,success:function(n){if(n.error==500){l("#error").html(b)}else{l("#error").html("");a(n)}}};MMS.utils.doAjax(g)};e=function(){l("#search-forms").hide();l("form.quick_search").submit(function(m){h(m)})};return{init:function(){return e()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(a){var i,d=1,j,k=4,h,g,l,e,b,c,f;j=function(){return Math.ceil(l/k)};h=function(){a("div.pagination").empty();var m="";m+="<ul id='pagination-flickr'>";m+="<li><a href='#' onclick='MMS.pagination.previous("+d+")'>Previous</a></li>";for(var n=1;n<=j();n++){if(n!==d){if(j()<=20){m+="<li><a href='#' onclick='MMS.pagination.renderPage("+n+"); return false;'>"+n+"</a></li>"}}else{m+="<li class='active'>"+n+"</li>";d=n}}m+="<li><a href='#' onclick='MMS.pagination.next("+d+")'>Next</a></li>";m+="</ul>";a("div.pagination").append(m)};b=function(m){if(m<j()){var n=m+1;g(n)}};c=function(m){if(m>1){var n=m-1;g(n)}};g=function(m){d=m;var m=(m-1);h();a("#pages").empty();for(var n=(m)*k;n<((m)*k)+k;n++){a("#pages").append(i[n])}};f=function(m){i=m;l=m.length;g(1)};return{init:function(m){return f(m)},renderPage:function(m){return g(m)},next:function(m){return b(m)},previous:function(m){return c(m)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(b){var c,e,a,f,g,d;g={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};c=function(){MMS.utils.focusForm("#batch-ingest-forms");f={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(h){MMS.view.createView(g);e(h)}};MMS.utils.doAjax(f);return false};e=function(h){b(".current").html("Batch");if(h.length===0){b("#batch-ingest-forms").remove();b("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var i="";i+="<div>";i+="<div>";i+="<table class='tablesorter' cellspacing='0'>";i+="<thead>";i+="<tr>";i+="<th>Batch Records</th>";i+="<th>Status</th>";i+="</tr>";i+="</thead>";i+="<tbody>";b.each(h,function(j,k){if(k.object!=""){i+="<input name='pids[]' type='hidden' value='"+k.pid+"' />"}i+="<tr>";i+="<td width='85%'>";i+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";i+="<tr align='top'>";if(k.object!=""){i+="<td width='30%' align='center'><p><img src='"+k.object+"' alt='"+k.title+"' border='1'></p></td>"}else{i+="<td width='30%' align='center'><p>No Object.</p></td>"}i+="<td width='40%' align='left'>";i+="<p><strong>Pid:</strong> "+k.pid+"</p>";i+="<p><strong>Title:</strong> "+k.title+"</p>";i+="<p><strong>Creator:</strong> "+k.creator+"</p>";i+="<p><strong>Identifier:</strong> "+k.identifier+"</p>";i+="</td>";i+="</tr>";i+="</table>";i+="</td>";if(k.object!=""){i+="<td width='28%'>complete.</td>"}else{i+="<td width='28%'>incomplete.</td>"}i+="</tr>"});i+="</tbody>";i+="</table>";i+="</div>";i+="</div>";b("#batch-ingest").empty().append(i);b("#batch-ingest-forms").show()};a=function(){f={type:"POST",url:MMS.configObj.batch,data:b("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(h){if(h.success===false){b("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},4000)}else{b("#batch-ingest").empty();b("#batch-ingest-forms").remove();b("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(f);return false};d=function(){b("#batch-ingest-forms").hide();b("#batch").on("click",function(h){c(b(this).attr("id"))})};return{init:function(){return d()},ingest:function(){return a()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(c){var f,b,g,a,h,d,e;h={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};f=function(){g={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(i){MMS.view.createView(h);b(i)}};MMS.utils.doAjax(g)};b=function(i){c(".current").html("Xml");var j="";j+="<div class='tab_container'>";j+="<div id='tab1' class='tab_content'>";j+="<table class='tablesorter' cellspacing='0'>";j+="<thead>";j+="<tr>";j+="<th>XML File</th>";j+="<th>Actions</th>";j+="</tr>";j+="</thead>";j+="<tbody>";c.each(i,function(k,l){j+="<input name='xmlFiles[]' type='hidden' value='"+l.fileName+"' />";j+="<tr>";j+="<td>"+l.fileName+"</td>";j+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+l.fileName+"\"); return false;'></td>";j+="</tr>"});j+="</tbody>";j+="</table>";j+="</div>";j+="</div>";c("#xml").append(j);c("#xml-forms").show()};a=function(i){var j=[];for(var k in i){j.push(i[k].name)}g={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:j},dataType:"json",cache:false,success:function(l){c("#xml-forms").remove();if(l.created==="true"){c("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){c("div#actionFeedback").empty()},5000)}else{c("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){c("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(g)};d=function(){MMS.view.createView(h);g={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(i){c("#xml").append(i)}};MMS.utils.doAjax(g)};e=function(){c("#view_xml").on("click",function(){f()})};return{init:function(){return e()},saveXml:function(i){return a(i)},createUploadArea:function(){return d()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(c){var a,d,e,b;a={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};d=function(){e={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(f){b(f)}};MMS.utils.doAjax(e);return false};b=function(f){c(".current").html("Review Queue");c("#search-results").empty();MMS.view.createView(a);if(f.length===0){c("#queue-forms").remove();c("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var g="";g+="<div class='tab_container'>";g+="<div id='tab1' class='tab_content'>";g+="<table class='tablesorter' cellspacing='0'>";g+="<thead>";g+="<tr>";g+="<th>Pid</th>";g+="<th>Title</th>";g+="<th>Created By</th>";g+="<th>Date Created</th>";g+="<th>Actions</th>";g+="</tr>";g+="</thead>";g+="<tbody>";c.each(f,function(h,i){g+="<tr>";g+="<td>"+i.pid+"</td>";g+="<td>"+i.title+"</td>";g+="<td>"+i.name+"</td>";g+="<td>"+i.timestamp+"</td>";g+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+i.pid+'", "queue");\'</td>';g+="</tr>"});g+="</tbody>";g+="</table>";g+="</div>";g+="</div>";c("#search-results").empty();c("#queue").append(g)};return{getItems:function(){d()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(b){var a;a=function(c){var d="";d+='<div id="actionFeedback"></div>';d+='<div id="error"></div>';d+='<article id="'+c.articleID+'" class="'+c.articleClass+'">';d+="<header>";if(c.h3ID!=="null"){d+='<h3 id="'+c.h3ID+'">'+c.h3Value+"</h3>"}if(c.header!=="null"){d+=c.header}d+="</header>";d+='<form id="'+c.formID+'">';d+='<div id="'+c.divID+'" class="'+c.divClass+'"></div>';d+="<footer>";if(c.footer!=="null"){d+=c.footer}d+="</footer>";d+="</form>";d+="</article>";b("#"+c.content).empty().append(d)};return{createView:function(c){a(c)}}}(jQuery));$(function(){var a={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(a))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(g){var h=g.split("."),e=MMS,f;if(h[0]==="MMS"){h=h.slice(1)}for(f=0;f<h.length;f+=1){if(typeof e[h[f]]==="undefined"){e[h[f]]={}}e=e[h[f]]}return e};MMS.namespace("MMS.utils");MMS.utils=(function(h){var i,g,k,j,l;j={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};i=function(a){a.timeout=5000;a.error=function(b,c){h("#error").html("<h4 class='alert_error'>An error has occurred ("+c+").  Please contact library-support@du.edu for assistance.</h4>")};a.statusCode={403:function(){alert("Session expired");MMS.view.createView(j);h("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};h(document).ajaxStart(function(){h.fancybox.showLoading()});h(document).ajaxStop(function(){h.fancybox.hideLoading()});h.ajax(a)};k=function(){var a={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(b){if(typeof b===null||b.isFedoraUp!==200||b.isSolrUp!=="OK"){h("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");h("#authenticate").attr("disabled","disabled")}}};i(a)};l=function(a){return a.replace(/</g,"").replace(/>/g,"")};g=function(a){if(a!=="#metadata-forms"){h(".optional_fields").hide();h("#optional_fields").hide()}h("article:not("+a+", .breadcrumbs)").hide()};return{doAjax:function(a){i(a)},focusForm:function(a){g(a)},sanitizeInput:function(a){return l(a)},pingServices:function(){k()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(R){var W,C,A,D,H,T,z,G,L,J,S,Q,N,P,I,U,K,X,O,B,E,V,M,F;F={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};Q=function(){var a="";a+='<article id="controlled-vocabulary-section" class="module width_quarter">';a+="<header><h3>Controlled Vocabularies</h3></header>";a+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';a+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';a+="<p>";a+='<select id="vocab-options" name="vocab-options">';a+='<option value="ulan" selected>ULAN</option>';a+='<option value="aat">AAT</option>';a+='<option value="locnames">LC-Names</option>';a+='<option value="locsubjects">LC-Subjects</option>';a+='<option value="aloracreators">Alora-Creators</option>';a+='<option value="alorasubjects">Alora-Subjects</option>';a+="</select>&nbsp;";a+='<input id="getVocabularies" type="submit" value="Go" />';a+="</p>";a+="</div>";a+='<div id="vocabulary-results"></div>';a+="</article>";return a};V=function(){R("#search-results").empty();MMS.view.createView(F);N();E();R(".current").html("Creator");R("#controlled-vocabulary-form").show()};M=function(){R("#search-results").empty();MMS.view.createView(F);B();E();R(".current").html("Subject");R("#controlled-vocabulary-form").show()};E=function(){R("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){X()}})};X=function(){G={type:"POST",url:MMS.configObj.creatorapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(G)};O=function(){G={type:"POST",url:MMS.configObj.subjectapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(G)};B=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Subject";a+="</label>";a+="<input id='subject' name='subject[]' type='text' class='required' />";a+="</fieldset>";a+="<label>";R("#controlledvocabulary").append(a)};N=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Creator";a+="</label>";a+="<input id='creator' name='creator[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Creator Alternative";a+="</label>";a+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Nationality";a+="</label>";a+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Role";a+="</label>";a+="<input id='description-role' name='description.role[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Biography";a+="</label>";a+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Sex";a+="</label>";a+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Source";a+="</label>";a+="<input id='source' name='source' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Earliest Date";a+="</label>";a+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Latest Date";a+="</label>";a+="<input id='latestdates' name='latestdates' type='text' class='required' />";a+="</fieldset>";R("#controlledvocabulary").append(a)};L=function(){return sessionStorage.getItem("roleID")};W=function(){var a,b=R("input#vocabTerm").val(),c=R("select#vocab-options");b=MMS.utils.sanitizeInput(b);if(c.length>0){a=c.val()}G={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+b+"&option="+a,dataType:"json",cache:true,success:function(d){D(a,d)}};MMS.utils.doAjax(G)};J=function(c,b,d){var a="id="+c+"&vocabType="+b;if(d===undefined){var d=function(e){S(c,e)}}G={type:"GET",url:MMS.configObj.vocabUrl,data:a,dataType:"json",cache:true,success:d};MMS.utils.doAjax(G)};S=function(c,b){var a="",d=R("span#"+c+"-toggle").text();if(d==="( + )"){R("span#"+c+"-toggle").text("( - )");R("div#"+c+"-vocab-data").show()}else{if(d==="( - )"){R("div#"+c+"-vocab-data").hide();R("span#"+c+"-toggle").text("( + )")}}R.each(b,function(f,e){if(e.subject_id!==undefined){a+="<p><strong>Subject id:</strong> "+e.subject_id+"</p>"}if(e.nationalities!==""){a+="<p><strong>Nationality:</strong> "+e.nationalities+"</p>"}if(e.role_id!==""){a+="<p><strong>Role:</strong> "+e.role_id+"</p>"}if(e.preferred_terms_source_id!==""){a+="<p><strong>Source:</strong> "+e.preferred_terms_source_id+"</p>"}if(e.non_preferred_terms_term_text!==""){a+="<p><strong>Alternative name:</strong> "+e.non_preferred_terms_term_text+"</p>"}if(e.preferred_biographies_biography_text!==""){a+="<p><strong>Bio:</strong> "+e.preferred_biographies_biography_text+"</p>"}if(e.preferred_biographies_birth_date!==""){a+="<p><strong>Birth date:</strong> "+e.preferred_biographies_birth_date+"</p>"}if(e.preferred_biographies_death_date!==""){a+="<p><strong>Death date:</strong> "+e.preferred_biographies_death_date+"</p>"}if(e.preferred_biographies_sex!==""){a+="<p><strong>Sex:</strong> "+e.preferred_biographies_sex+"</p>"}});R("div#"+c+"-vocab-data").empty().append(a)};z=function(c,a,b){var d;while(a<50){d=R("#"+b+"-"+a).val();if(d===""){R("#"+b+"-"+a).val(c);break}a++}return d};T=function(d,b){var c,i,h,e,a,j=1,f=function(k){K(k)},g=R("select#vocab-options");if(L()=="2"){R("#"+d).removeAttr("disabled");R("#"+d).attr("readonly","readonly")}if(g.length>0){a=g.val()}if(a==="ulan"||a==="locnames"||a==="aloracreators"){if(a!=="locnames"){J(d,a,f)}c=R("#creator-0").val();if(c===""){z(b,0,"creator")}else{i=R("#coverage-spatial-repository-0").val(b);if(i===""){z(b,0,"coverage-spatial-repository")}else{z(b,j,"coverage-spatial-repository")}}}else{if(a==="aat"||a==="locsubjects"||a==="alorasubjects"){e=R("#coverage-temporal-styleperiod-0").val();if(e===""){z(b,0,"coverage-temporal-styleperiod")}else{e=z(b,j,"coverage-temporal-styleperiod")}if(e===undefined){h=R("#subject-0").val();if(h===""){z(b,0,"subject")}else{z(b,j,"subject")}}}}};K=function(b){var a="";R.each(b,function(d,c){a+='<input name="creator.alternative[]" type="hidden" value="'+c.non_preferred_terms_term_text+'" />';a+='<input name="description.creatorbio[]" type="hidden" value="'+c.preferred_biographies_biography_text+'" />';a+='<input name="description.nationality[]" type="hidden" value="'+c.nationalities+'" />';a+='<input name="description.role[]" type="hidden" value="'+c.role_id+'" />';a+='<input name="description.lifedates[]" type="hidden" value="'+c.preferred_biographies_birth_date+"-"+c.preferred_biographies_death_date+'" />';a+='<input name="source[]" type="hidden" value="'+c.preferred_terms_source_id+'" />'});R("div#metadata").append(a)};D=function(d,c){var b,a="";if(d==="ulan"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+C+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"ulan\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="aat"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+C+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="locnames"||d==="locsubjects"){b=c.loc;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+C+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+C+", $(this).text());return false;'>"+c.loc[f].title+"</a><br /><a href='#'>"+e.id+"</a></li></ul></p>"})}else{if(d==="aloracreators"||d==="alorasubjects"){b=c.local;if(b.message!==undefined){a+="<p><ul><li>No results found.</li></ul></p>";R("div#vocabulary-results").empty().append(a);return}R.each(b,function(f,e){if(d==="aloracreators"){a+="<p><ul><li><a href='#' id='"+C+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"local\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{a+="<p><ul><li><a href='#' id='"+C+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}R("div#vocabulary-results").empty().append(a)};H=function(){R("#controlled-vocabulary-section").show();var a=Q();R("#content").append(a);R("input#vocabTerm").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("select#vocab-options").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("input#getVocabularies").on("click",function(){W()})};I=function(){R("select#type-arttypes").val("");R("select#type-timeperiods").val("");R("select#type-instructors").val("")};P=function(c){var b=["arttypes","timeperiods","instructors"],d={},a;if(c===undefined){c=function(e){U(e)}}for(a=0;a<b.length;a++){d.type="GET";d.url=MMS.configObj.vocabUrl;d.data="vocabType="+b[a];d.dataType="json";d.cache=true;d.success=c;MMS.utils.doAjax(d)}};U=function(f){var f=R.parseJSON(f);var e;var d;var b=sessionStorage.getItem("arttypes");var a=sessionStorage.getItem("timeperiods");var c=sessionStorage.getItem("instructors");e="<option value=''>---Select an term---</option>";R.each(f,function(h,g){if(g.type){d=g.type}if(g.term===b||g.term===a||g.term===c){e+="<option value='"+g.term+"' selected>"+g.term+"</option>"}else{e+="<option value='"+g.term+"'>"+g.term+"</option>"}});R("select#type-"+d).html(e)};A=function(){R("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){W()},displayControlledVocabulariesBox:function(b,a){H(b,a)},selectVocabularyTerm:function(a,b){T(a,b)},getTermData:function(a,b){J(a,b)},getLists:function(){P()},resetLists:function(){I()},loadCreatorForm:function(){V()},loadSubjectForm:function(){M()},init:function(){A()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(Y){var U,Q,H,aj,T,aa,X="#metadata",I="#metadata-form",ai="#metadata-forms",ac,ad,G,P,ae,W,M,S,V,J,ah,L,K,ab,O,Z,N,ag,R,F,af;U={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};Q=function(a){var b=G(Z,"displayOrder");Y.each(b,function(d,c){P=ac(c);P.appendTo(X)});Y(X).append("<input name='objectType' type='hidden' value='"+a+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};ag=function(c){var b;var a;if(c==="queue"){a="Back to Review Queue"}else{if(c==="search"){Y("#search-results").hide();a="Back to Search Results"}}b="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+c+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+a+"</a>";return b};R=function(a){if(a==="queue"){MMS.queue.getItems()}else{if(a==="search"){Y("#search-results").show();Y("#content").empty()}}Y("#clone-record").empty();Y("#controlled-vocabulary-section").hide();return};H=function(g,f,b){var i=100,d="",c,h;Y(".current").html("Edit Metadata");Y(X).empty();d+="<div id='edit-mode'></div>";d+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";d+="<fieldset id='isPid'>";d+="<label>pid</label>";d+="<input type='text' value='"+f+"'  disabled />";d+="</fieldset>";if(b==="queue"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}else{if(b==="search"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}}Z=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var e=G(Z,"displayOrder");Y.each(e,function(k,j){Y.each(g,function(l,n){if(j.element===l){c=l.replace(".","-");if(typeof n==="string"){d+="<fieldset class='"+c+"-0'>";if(j.repeat==="true"){d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+l+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+l+"'><span>Add</span></a></span></label>"}else{d+="<label>"+j.label+"</label>"}if(j.type==="select"){if(j.required==="true"){var m="class='required"}if(j.element==="type.arttype"){sessionStorage.setItem("arttypes",n)}else{if(j.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",n)}else{if(j.element==="instructor"){sessionStorage.setItem("instructors",n)}}}d+="<select name='"+j.element+"[]' id='"+j.id+"' "+m+"'></select>"}if(j.type==="text"){d+="<input id='"+l+"-"+i+"' name='"+l+"[]' type='text' value='"+n+"' "+m+" />"}if(j.type==="textarea"){d+="<textarea id='"+l+"-"+i+"' name='"+l+"[]' rows='7' cols='55' "+m+">"+n+"</textarea> "}d+="</fieldset>"}if(typeof n==="object"){Y.each(n,function(o,p){i++;if(i>101){d+="<fieldset class='"+c+"-"+i+"'>"}else{d+="<fieldset class='"+c+"-0'>"}if(j.repeat==="true"){if(i>101){d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+l+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+l+"'><span>Del</span></a></span></label>"}else{d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+l+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+l+"'><span>Add</span></a></span></label>"}}else{d+="<label>"+j.label+"</label>"}if(j.type==="text"){d+="<input id='"+l+"-"+i+"' name='"+l+"[]' type='text' value='"+p+"' "+m+" />"}if(j.type==="textarea"){d+="<textarea id='"+l+"-"+i+"' name='"+l+"[]' rows='7' cols='55' "+m+">"+p+"</textarea> "}d+="</fieldset>"})}}})});Y.each(g,function(k,j){if(k==="collection"){d+="<input id='"+k+"-0' name='collection' type='hidden' value='"+j+"' />"}else{if(k==="identifier.system"){d+="<input id='"+k+"' class='pid' name='pid' type='hidden' value='"+j+"' />"}else{if(k==="identifier.legacy"){d+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+j+"' />"}else{if(k==="identifier.master"){d+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+j+"' />"}else{if(k==="objectType"){h=j;d+="<input name='"+k+"' type='hidden' value='"+j+"' />"}else{if(k==="date.created"){d+="<fieldset>";d+="<label class='datecreated'>"+k+"</label>";d+="<input class='datecreated' type='text' value='"+j+"' disabled />";d+="<input class='datecreated' name='"+k+"[]' type='hidden' value='"+j+"'/>";d+="</fieldset>"}else{if(k==="date.modified"){d+="<fieldset>";d+="<label class='datemodified'>"+k+"</label>";d+="<input class='datemodified' type='text' value='"+j+"' disabled />";d+="</fieldset>"}}}}}}}});Y.each(e,function(k,j){if(j.required==="false"){d+="<fieldset class='"+j.id+"-0' style='display:none;'>";d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+j.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+j.element+"'><span>Del</span></a></span></label>";if(j.type==="text"){d+="<input id='"+j.id+"-0' name='"+j.element+"[]' type='"+j.type+"' value='' />"}else{if(j.type==="textarea"){d+="<textarea id='"+j.id+"-0' name='"+j.element+"[]' rows='7' cols='55'></textarea> "}}d+="</fieldset>"}});U.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(U);var a=ag(b);Y("#pid").append(a);Y(X).append(d);V();Y(".optional_fields").show();Y("#optional_fields").show();Y(ai).show();aj()};aa=function(i,h){var e,a=h.split("-"),b=a[a.length-2],d,f,g,c=[];if(a[a.length-1]==="clone"){a.pop();a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");f=f.replace(".","-");e=function(){Y.each(Z,function(k,j){g=j.element.replace(".","-");g=g.replace(".","-");if(f===g){T(i,j)}})};W(e)}else{if(a[a.length-1]==="remove"){a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");if(b==="0"){e=function(){Y("#"+f).val("");Y("."+f).hide()}}else{e=function(){Y("."+h).remove()}}M(e)}}};S=function(b,a){b.preventDefault();b.stopPropagation();a=a.replace("-remove","");Y("."+a).remove()};M=function(a){a()};W=function(a){a()};F=function(a){a=a.replace("-clear","");Y("#"+a).val("")};ac=function(e){var b=JSON.parse(sessionStorage.getItem("mms_profile"));var d="";var a="";if(e.type==="select"){if(e.required==="true"){var c="class='required"}d+="<fieldset class='"+e.id+"-"+MMS.counterObj.count+"'>";d+="<label for='"+e.id+"'>"+e.label+"</label>";d+="<select name='"+e.element+"[]' id='"+e.id+"' "+c+"'></select>";d+="</fieldset>"}else{if(e.vocabulary==="true"&&b.roleID=="2"){a="&nbsp;&nbsp;<a href='#' id='"+e.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}d+="<fieldset class='"+e.id+"-"+MMS.counterObj.count+"'>";d+="<label>";d+=e.label;if(e.repeat==="true"){d+="<span class='clone'><a href='#' id='"+e.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+e.element+"'><span>Add</span></a></span>"}else{if(e.repeat==="false"){d+="<a href='#' id='"+e.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(e.required==="false"){d+="<span class='remove'><a href='#' id='"+e.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+e.element+"'><span>Del</span></a></span>"}d+="</label>"+a;if(e.type==="text"){d+="<input "}else{if(e.type==="textarea"){d+="<textarea "}}d+="id='"+e.id+"-"+MMS.counterObj.count+"'";d+="name='"+e.element+"[]' ";d+="type='"+e.type+"' ";if(e.vocabulary==="true"&&b.roleID=="2"){d+="disabled='disbled'"}d+="class='";if(e.required==="true"){d+="required"}d+="'";if(e.type==="text"){d+="/>"}else{if(e.type==="textarea"){d+="rows='14' cols='45'></textarea>"}}d+="</fieldset>"}if(e.required==="true"){ae=Y(d)}else{if(e.required==="false"){ae=Y(d).hide()}}return ae};aj=function(){Y("#optional_fields").empty();Y.each(Z,function(a,c){if(c.required==="false"){var b="<li class='icn_categories'><a href='#'>"+c.label+"</a></li>";ad=Y(b).on("click","a",function(d){d.preventDefault();MMS.metadata.appendOptionalField(c)});ad.appendTo("#optional_fields")}})};af=function(a){Y("."+a.id+"-0").show();location.hash="#"+a.id+"-0"};T=function(e,a){e.preventDefault();e.stopPropagation();var b=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var c="";var d="";d+="<fieldset class='"+a.id+"-"+MMS.counterObj.count+"'>";d+="<label>";d+=a.label;d+="&nbsp;<span class='remove'><a href='#' id='"+a.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+a.element+"'><span>Del</span></a></span>";if(a.vocabulary==="true"){}d+="</label>";if(a.type==="text"){d+="<input "}else{if(a.type==="textarea"){d+="<textarea "}}d+="id='"+a.id+"-"+MMS.counterObj.count+"'";d+="name='"+a.element+"[]' ";d+="type='"+a.type+"' ";if(a.vocabulary==="true"&&b.roleID=="2"){d+="disabled='disabled'"}d+="class='none ";d+="'";if(a.type==="text"){d+="/>"}else{if(a.type==="textarea"){d+="rows='10' cols='45'></textarea>"}}d+="</fieldset>";c=Y(d).insertAfter("."+a.id+"-0");return c};J=function(){var a=JSON.parse(sessionStorage.getItem("mms_profile"));if(a.roleID==="2"){K={type:"PUT",url:MMS.configObj.queue,data:Y(I).serialize(),dataType:"json",cache:true,success:function(d){Y("#metadata-form").find("input[type=text], textarea").val("");Y("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){Y("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(K);return}var c=Y(".pid").val();var b=Y("#type").val();K={type:"PUT",url:MMS.configObj.repository,data:Y(I).serialize(),dataType:"json",cache:false,success:function(d){if(d.updated==="true"){K={type:"GET",url:MMS.configObj.repository,data:"pid="+c,dataType:"json",cache:true,success:function(f,e){Y("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){Y("div#actionFeedback").empty()},5000);location.hash="#header";return false;H(f,c,e)}};MMS.utils.doAjax(K)}else{if(d.created==="true"){Y("#metadata-form").find("input[type=text], textarea").val("");Y("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){Y("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(K)};ab=function(b,a,c){b.preventDefault();K={type:"GET",url:MMS.configObj.repository,data:"pid="+a,dataType:"json",cache:false,success:function(d){H(d,a,c)}};MMS.utils.doAjax(K)};N=function(){var a=Y(".pid").val();Y(".pid").remove();Y("#isPid").remove();Y(".datecreated").remove();Y(".datemodified").remove();Y("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+a+".</h4>");setTimeout(function(){Y("div#actionFeedback").remove()},10000)};V=function(){Y(I).validate({errorClass:"invalid",submitHandler:function(){J()}})};O=function(b,c){b.preventDefault();var a=confirm("Are you sure you want to delete this record?");if(a){K={type:"POST",url:MMS.configObj.repository,data:"pid="+c,dataType:"json",cache:true,success:function(d){if(d.deleted==="true"){Y("#search-forms").hide();Y("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){Y("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(K)}return false};G=function(b,c){var a=[];for(var d in b){a.push(b[d])}return a.sort(function(e,f){var g=e[c];var h=f[c];return((g<h)?-1:((g>h)?1:0))})};ah=function(a){MMS.counterObj.count=0;Y("#search-results").empty();MMS.view.createView(U);if(a==="image"){var b=[];Z=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));Q(a);aj()}V();Y(".current").html(a+" metadata");Y("#clone-record").remove();Y(ai).show();Y(".optional_fields").show();Y("#optional_fields").show();Y("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};L=function(){Y(ai).hide();Y(".optional_fields").hide();Y(".formType").on("click",function(a){ah(Y(this).attr("id"))})};return{getMetadata:function(b,a,c){ab(b,a,c)},deleteMetadata:function(a,b){O(a,b)},removeClonedField:function(b,a){S(b,a)},constructFieldEvent:function(b,a){aa(b,a)},cloneRecord:function(a){N(a)},back:function(a){R(a)},createMetadataEditForm:function(c,a,b){H(c,a,b)},appendOptionalField:function(a){af(a)},clearField:function(a){F(a)},loadForm:function(a){ah(a)},init:function(){L()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(M){var y="#user",F="#user-form",P="#user-forms",I,J,H,v,z,O,D,N,w,B,E,L,A,G,K,x,C;C={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};z=function(){M(F).validate({errorClass:"invalid",submitHandler:function(){N()}})};J=function(){C.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(C);var d="";var b="";var f="";var h="";var e="";var c="";var a="";b+="<fieldset>";b+="<label>";b+="* First Name";b+="</label>";b+="<input id='firstName' name='firstName' type='text' class='required' />";b+="</fieldset>";f+="<fieldset>";f+="<label>";f+="* Last Name";f+="</label>";f+="<input id='lastName' name='lastName' type='text' class='required' />";f+="</fieldset>";h+="<fieldset>";h+="<label>";h+="* DU ID";h+="</label>";h+="<input id='duID' name='duID' type='text' class='required' />";h+="</fieldset>";A={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(i){c+="<fieldset>";c+="<label for='roleID'>* Roles</label>";c+="<select name='roleID' id='roleID' class='required'>";c+="<option value=''>---Assign a role--</option>";M.each(i,function(k,j){if(k!="3"){c+="<option value='"+k+"'>"+j+"</option>"}});c+="</select>";c+="</fieldset>";M(y).append(c)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){G={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(i){a+="<strong>* Assign a Collection</strong>";M.each(i,function(k,j){a+="<p><input id='"+j.collectionID+"' name='collections[]' type='radio' value='"+j.collectionID+"' /><label for='"+j.collectionID+"'>"+j.title+"</label></p>"});M(y).append(a)}};MMS.utils.doAjax(G)}else{a+="<input id='"+g.collectionID+"' name='collections[]' type='hidden' value='"+g.collectionID+"' />";d+=a}MMS.utils.doAjax(A);d+=b;d+=f;d+=h;M(y).append(d);z()};v=function(){C.footer="null";MMS.view.createView(C);B={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>First Name</th>";a+="<th>Last Name</th>";a+="<th>Role</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";M.each(b,function(c,d){a+="<tr>";a+="<td>"+d.firstName+"</td>";a+="<td>"+d.lastName+"</td>";a+="<td>"+d.roleName+"</td>";if(d.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+d.id+");'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";M(y).append(a)}};MMS.utils.doAjax(B)};H=function(b){var d="";var e="";var c="";var a="";C.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(C);M(".current").html("Edit User");K={type:"GET",url:MMS.configObj.users,data:"id="+b,dataType:"json",cache:false,async:false,success:function(g){d+="<input name='userID' type='hidden' value='"+b+"' />";d+="<fieldset>";d+="<label>";d+="* First Name";d+="</label>";d+="<input id='firstName' name='firstName' type='text' value='"+g[0].firstName+"' class='required' />";d+="</fieldset>";d+="<fieldset>";d+="<label>";d+="* Last Name";d+="</label>";d+="<input id='lastName' name='lastName' type='text' value='"+g[0].lastName+"' class='required' />";d+="</fieldset>";M(y).append(d);A={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(h){e+="<fieldset>";e+="<label for='roleID'>* Roles</label>";e+="<select name='roleID' id='roleID' class='required'>";e+="<option value=''>---Assign a role--</option>";M.each(h,function(j,i){if(g[0].roleID===j){e+="<option value='"+j+"' selected>"+i+"</option>"}else{if(j!="3"){e+="<option value='"+j+"'>"+i+"</option>"}}});e+="</select>";e+="</fieldset>";M(y).append(e)}};var f=JSON.parse(sessionStorage.getItem("mms_profile"));if(f.roleID=="3"){G={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(h){c+="<strong>* Assigned Collection</strong>";M.each(h,function(j,i){if(g[1].collectionID===i.collectionID){c+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' checked /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}else{c+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}})}};MMS.utils.doAjax(G)}else{c+="<input name='collectionID' type='hidden' value='"+f.collectionID+"' />"}M(y).append(c);MMS.utils.doAjax(A);a+="<label>";a+="isActive";a+="</label>";if(g[0].isActive=="1"){a+="<input id='isActive' name='isActive' type='checkbox' value='"+g[0].isActive+"' checked />"}else{a+="<input id='isActive' name='isActive' type='checkbox' value='"+g[0].isActive+"' />"}M(y).append(a)}};MMS.utils.doAjax(K);z()};N=function(){E={type:"PUT",url:MMS.configObj.users,data:M(F).serialize(),dataType:"json",cache:false,success:function(a){if(a.updated==="true"){v()}else{if(a.updated==="false"){alert("Error: Update failed.")}else{M("#user-form")[0].reset()}}}};MMS.utils.doAjax(E)};w=function(a){var b=confirm("Are you sure you want to delete this user?");if(b){L={type:"POST",url:MMS.configObj.users,data:"userID="+a,dataType:"json",cache:false,success:function(c){if(c.deleted==="true"){v()}else{if(c.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(L)}};I=function(){x={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(b){sessionStorage.setItem("mms_profile",JSON.stringify(b));var a=JSON.parse(sessionStorage.getItem("mms_profile"));var c=a.firstName+" "+a.lastName+" ("+a.roleName+")";M("#user-role").append(c)}};MMS.utils.doAjax(x)};O=function(a){if(a==="addUser"){J();M("#search-results").empty();M(".current").html("Add User")}else{if(a==="viewUsers"){v();M("#search-results").empty();M(".current").html("Users")}}};D=function(){M(P).hide();M("#addUser").on("click",function(a){O(M(this).attr("id"))});M("#viewUsers").on("click",function(a){O(M(this).attr("id"))})};return{init:function(){return D()},constructUserEditForm:function(a){return H(a)},deleteUserData:function(a){return w(a)},getSessionInfo:function(){return I()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(r){var p="#collection",s="#collection-form",v="#collection-forms",t,w,o,u,m,q,x,n;n={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};t=function(){MMS.view.createView(n);var c="";var d="";var e="";var b="";var f="";d+="<fieldset>";d+="<label>";d+="* Title";d+="</label>";d+="<input id='title' name='title' type='text' class='required' />";d+="</fieldset>";e+="<fieldset>";e+="<label>";e+="* Description";e+="</label>";e+="<input id='description' name='description' type='text' class='required' />";e+="</fieldset>";f+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";c+=d;c+=e;c+=f;r(p).append(c);var a={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(g){b+="<fieldset>";b+="<label>";b+="* Object Type";b+="</label>";b+="<br />";r.each(g,function(i,h){b+="<p><input id='"+h.objectType+"' name='objectType[]' type='checkbox' value='"+h.objectTypeID+"' /> "+h.objectType+"</p>"});b+="</fieldset>";r(p).append(b)}};MMS.utils.doAjax(a)};w=function(){MMS.view.createView(n);x={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(a){var b="";b+="<div class='tab_container'>";b+="<div id='tab1' class='tab_content'>";b+="<table class='tablesorter' cellspacing='0'>";b+="<thead>";b+="<tr>";b+="<th>Collection Name</th>";b+="<th>Description</th>";b+="<th>Active</th>";b+="<th>Actions</th>";b+="</tr>";b+="</thead>";b+="<tbody>";r.each(a,function(d,c){b+="<tr>";b+="<td>"+c.title+"</td>";b+="<td>"+c.description+"</td>";if(c.isActive==="1"){b+="<td>Yes</td>"}else{b+="<td>No</td>"}b+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+c.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+c.collectionID+"\"); return false;'></td>";b+="</tr>"});b+="</tbody>";b+="</table>";b+="</div>";b+="</div>";r(p).append(b)}};MMS.utils.doAjax(x)};q=function(){x={type:"PUT",url:MMS.configObj.collections,data:r(s).serialize(),dataType:"json",cache:false,success:function(a){r(s)[0].reset()}};MMS.utils.doAjax(x)};u=function(a){if(a==="addCollection"){t();r(".current").html("Add Collection")}else{if(a==="editCollection"){}else{if(a==="deleteCollection"){}else{if(a==="viewCollections"){w();r(".current").html("Collections")}}}}};m=function(){r(v).hide();r("#addCollection").on("click",function(a){u(r(this).attr("id"))});r("#viewCollections").on("click",function(a){u(r(this).attr("id"))});o()};o=function(){r(s).validate({errorClass:"invalid",submitHandler:function(){q()}})};return{init:function(){return m()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(o){var p,m,n,r,q=".module width_full",l="#login-form",k,j;p=function(){r={type:"POST",url:MMS.configObj.authenticate,data:o(l).serialize(),dataType:"json",cache:true,success:function(a){o(q).hide();m(a)}};o("h3#message").ajaxStart(function(){o("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(r)};m=function(a){if(a.isAuthenticated==="false"){o("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");o("#authenticate").removeAttr("disabled")}else{if(a.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};n=function(){o("#login-form").validate({errorClass:"invalid",submitHandler:function(){p()}})};j=function(){o("#logout").click(function(){r={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(a){if(a.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(r)});return false};k=function(){n();j()};return{init:function(){k()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(s){var w,v,u,m,t,p,r,x,n,o,q="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";o={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};w=function(a){s("#content").empty();a.preventDefault();u=s("input#quickSearch").val();u=MMS.utils.sanitizeInput(u);if(u===""){return s("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}m=s("#search_box").serialize();s("#search").empty();s("#actionFeedback").empty();x={type:"GET",url:MMS.configObj.search,data:s("#search_box").serialize(),dataType:"json",cache:true,success:function(b){if(b.error==500){s("#error").html(q)}else{s("#error").html("");MMS.view.createView(o);r(b)}}};MMS.utils.doAjax(x);return false};r=function(a){var d="";var e=[];var c="";var b=JSON.parse(sessionStorage.getItem("mms_profile"));s("#search_box")[0].reset();s("#search-message").text("You searched for: "+u);s(".current").html("Search Results");if(a.response.numFound===0){s("#search-forms").remove();s("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}d+="<div>";d+="<div>";d+="<table class='tablesorter' cellspacing='0'>";d+="<thead>";d+="<tr>";d+="<th>Records Found: "+a.response.numFound+"</th>";d+="<th>Actions</th>";d+="</tr>";d+="</thead>";d+="<tbody id='pages'>";s.each(a.response.docs,function(g,f){c+="<tr>";c+="<td width='85%'>";c+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";c+="<tr align='top'>";if(f.identifier_t[0]!==undefined){c+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+f.identifier_t[0]+"' alt='"+f.title_t[0]+"' border='1'></p></td>"}c+="<td width='40%' align='left'>";if(f.title_t!==undefined){c+="<p><strong>Title:</strong> "+f.title_t[0]+"</p>"}if(f.creator_t!==undefined){c+="<p><strong>Creator:</strong> "+f.creator_t[0]+"</p>"}c+="</td>";c+="</tr>";c+="</table>";c+="</td>";c+="<td width='28%'>";c+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+f.id+'", "search");\'>';if(b.roleID==="1"){c+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+f.id+"\"); return false;'>"}c+="</td>";c+="</tr>";e.push(c);c=""});d+="</tbody>";d+="</table>";d+="</div>";d+="</div>";s("#search").append(d);s("#search-results").show();MMS.pagination.init(e)};v=function(a){var b;s.each(a.spellcheck.suggestions,function(d,c){if(c!=="true"){if(c.suggestion!==undefined){s.each(c.suggestion,function(f,e){if(f===0){p=e.word.trim();b="<a href='#' id='didYouMeanSearch'>"+e.word.trim()+"</a>"}})}}});if(b!==undefined){s("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+b+"</h4>");s("#didYouMeanSearch").on("click",function(c){t()})}};t=function(){s("#search").empty();s("#searchActionFeedback").empty();var a=m.replace(u,p);u=p;x={type:"GET",url:MMS.configObj.search,data:a,dataType:"json",cache:true,success:function(b){if(b.error==500){s("#error").html(q)}else{s("#error").html("");r(b)}}};MMS.utils.doAjax(x)};n=function(){s("#search-forms").hide();s("form.quick_search").submit(function(a){w(a)})};return{init:function(){return n()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(r){var v,o=1,u,t=4,w,x,s,n,q,p,m;u=function(){return Math.ceil(s/t)};w=function(){r("div.pagination").empty();var b="";b+="<ul id='pagination-flickr'>";b+="<li><a href='#' onclick='MMS.pagination.previous("+o+")'>Previous</a></li>";for(var a=1;a<=u();a++){if(a!==o){if(u()<=20){b+="<li><a href='#' onclick='MMS.pagination.renderPage("+a+"); return false;'>"+a+"</a></li>"}}else{b+="<li class='active'>"+a+"</li>";o=a}}b+="<li><a href='#' onclick='MMS.pagination.next("+o+")'>Next</a></li>";b+="</ul>";r("div.pagination").append(b)};q=function(b){if(b<u()){var a=b+1;x(a)}};p=function(b){if(b>1){var a=b-1;x(a)}};x=function(b){o=b;var b=(b-1);w();r("#pages").empty();for(var a=(b)*t;a<((b)*t)+t;a++){r("#pages").append(v[a])}};m=function(a){v=a;s=a.length;x(1)};return{init:function(a){return m(a)},renderPage:function(a){return x(a)},next:function(a){return q(a)},previous:function(a){return p(a)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(l){var k,i,m,h,n,j;n={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};k=function(){MMS.utils.focusForm("#batch-ingest-forms");h={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(a){MMS.view.createView(n);i(a)}};MMS.utils.doAjax(h);return false};i=function(b){l(".current").html("Batch");if(b.length===0){l("#batch-ingest-forms").remove();l("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var a="";a+="<div>";a+="<div>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Batch Records</th>";a+="<th>Status</th>";a+="</tr>";a+="</thead>";a+="<tbody>";l.each(b,function(d,c){if(c.object!=""){a+="<input name='pids[]' type='hidden' value='"+c.pid+"' />"}a+="<tr>";a+="<td width='85%'>";a+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";a+="<tr align='top'>";if(c.object!=""){a+="<td width='30%' align='center'><p><img src='"+c.object+"' alt='"+c.title+"' border='1'></p></td>"}else{a+="<td width='30%' align='center'><p>No Object.</p></td>"}a+="<td width='40%' align='left'>";a+="<p><strong>Pid:</strong> "+c.pid+"</p>";a+="<p><strong>Title:</strong> "+c.title+"</p>";a+="<p><strong>Creator:</strong> "+c.creator+"</p>";a+="<p><strong>Identifier:</strong> "+c.identifier+"</p>";a+="</td>";a+="</tr>";a+="</table>";a+="</td>";if(c.object!=""){a+="<td width='28%'>complete.</td>"}else{a+="<td width='28%'>incomplete.</td>"}a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";l("#batch-ingest").empty().append(a);l("#batch-ingest-forms").show()};m=function(){h={type:"POST",url:MMS.configObj.batch,data:l("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(a){if(a.success===false){l("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},4000)}else{l("#batch-ingest").empty();l("#batch-ingest-forms").remove();l("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(h);return false};j=function(){l("#batch-ingest-forms").hide();l("#batch").on("click",function(a){k(l(this).attr("id"))})};return{init:function(){return j()},ingest:function(){return m()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(k){var p,l,o,m,n,j,i;n={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};p=function(){o={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(a){MMS.view.createView(n);l(a)}};MMS.utils.doAjax(o)};l=function(b){k(".current").html("Xml");var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>XML File</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";k.each(b,function(d,c){a+="<input name='xmlFiles[]' type='hidden' value='"+c.fileName+"' />";a+="<tr>";a+="<td>"+c.fileName+"</td>";a+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+c.fileName+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";k("#xml").append(a);k("#xml-forms").show()};m=function(b){var a=[];for(var c in b){a.push(b[c].name)}o={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:a},dataType:"json",cache:false,success:function(d){k("#xml-forms").remove();if(d.created==="true"){k("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){k("div#actionFeedback").empty()},5000)}else{k("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){k("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(o)};j=function(){MMS.view.createView(n);o={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(a){k("#xml").append(a)}};MMS.utils.doAjax(o)};i=function(){k("#view_xml").on("click",function(){p()})};return{init:function(){return i()},saveXml:function(a){return m(a)},createUploadArea:function(){return j()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(h){var j,g,f,i;j={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};g=function(){f={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(a){i(a)}};MMS.utils.doAjax(f);return false};i=function(b){h(".current").html("Review Queue");h("#search-results").empty();MMS.view.createView(j);if(b.length===0){h("#queue-forms").remove();h("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Pid</th>";a+="<th>Title</th>";a+="<th>Created By</th>";a+="<th>Date Created</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";h.each(b,function(d,c){a+="<tr>";a+="<td>"+c.pid+"</td>";a+="<td>"+c.title+"</td>";a+="<td>"+c.name+"</td>";a+="<td>"+c.timestamp+"</td>";a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+c.pid+'", "queue");\'</td>';a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";h("#search-results").empty();h("#queue").append(a)};return{getItems:function(){g()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(c){var d;d=function(b){var a="";a+='<div id="actionFeedback"></div>';a+='<div id="error"></div>';a+='<article id="'+b.articleID+'" class="'+b.articleClass+'">';a+="<header>";if(b.h3ID!=="null"){a+='<h3 id="'+b.h3ID+'">'+b.h3Value+"</h3>"}if(b.header!=="null"){a+=b.header}a+="</header>";a+='<form id="'+b.formID+'">';a+='<div id="'+b.divID+'" class="'+b.divClass+'"></div>';a+="<footer>";if(b.footer!=="null"){a+=b.footer}a+="</footer>";a+="</form>";a+="</article>";c("#"+b.content).empty().append(a)};return{createView:function(a){d(a)}}}(jQuery));$(function(){var b={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(b))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(d){var c=d.split("."),b=MMS,a;if(c[0]==="MMS"){c=c.slice(1)}for(a=0;a<c.length;a+=1){if(typeof b[c[a]]==="undefined"){b[c[a]]={}}b=b[c[a]]}return b};MMS.namespace("MMS.utils");MMS.utils=(function(a){var f,b,d,e,c;e={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};f=function(g){g.timeout=5000;g.error=function(i,h){a("#error").html("<h4 class='alert_error'>An error has occurred ("+h+").  Please contact library-support@du.edu for assistance.</h4>")};g.statusCode={403:function(){alert("Session expired");MMS.view.createView(e);a("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};a(document).ajaxStart(function(){a.fancybox.showLoading()});a(document).ajaxStop(function(){a.fancybox.hideLoading()});a.ajax(g)};d=function(){var g={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(h){if(typeof h===null||h.isFedoraUp!==200||h.isSolrUp!=="OK"){a("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");a("#authenticate").attr("disabled","disabled")}}};f(g)};c=function(g){return g.replace(/</g,"").replace(/>/g,"")};b=function(g){if(g!=="#metadata-forms"){a(".optional_fields").hide();a("#optional_fields").hide()}a("article:not("+g+", .breadcrumbs)").hide()};return{doAjax:function(g){f(g)},focusForm:function(g){b(g)},sanitizeInput:function(g){return c(g)},pingServices:function(){d()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(g){var b,v,x,u,q,e,y,r,m,o,f,h,k,i,p,d,n,a,j,w,t,c,l,s;s={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};h=function(){var z="";z+='<article id="controlled-vocabulary-section" class="module width_quarter">';z+="<header><h3>Controlled Vocabularies</h3></header>";z+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';z+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';z+="<p>";z+='<select id="vocab-options" name="vocab-options">';z+='<option value="ulan" selected>ULAN</option>';z+='<option value="aat">AAT</option>';z+='<option value="locnames">LC-Names</option>';z+='<option value="locsubjects">LC-Subjects</option>';z+='<option value="aloracreators">Alora-Creators</option>';z+='<option value="alorasubjects">Alora-Subjects</option>';z+="</select>&nbsp;";z+='<input id="getVocabularies" type="submit" value="Go" />';z+="</p>";z+="</div>";z+='<div id="vocabulary-results"></div>';z+="</article>";return z};c=function(){g("#search-results").empty();MMS.view.createView(s);k();t();g(".current").html("Creator");g("#controlled-vocabulary-form").show()};l=function(){g("#search-results").empty();MMS.view.createView(s);w();t();g(".current").html("Subject");g("#controlled-vocabulary-form").show()};t=function(){g("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){a()}})};a=function(){r={type:"POST",url:MMS.configObj.creatorapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(r)};j=function(){r={type:"POST",url:MMS.configObj.subjectapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(r)};w=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Subject";z+="</label>";z+="<input id='subject' name='subject[]' type='text' class='required' />";z+="</fieldset>";z+="<label>";g("#controlledvocabulary").append(z)};k=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Creator";z+="</label>";z+="<input id='creator' name='creator[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Creator Alternative";z+="</label>";z+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Nationality";z+="</label>";z+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Role";z+="</label>";z+="<input id='description-role' name='description.role[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Biography";z+="</label>";z+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Sex";z+="</label>";z+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Source";z+="</label>";z+="<input id='source' name='source' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Earliest Date";z+="</label>";z+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Latest Date";z+="</label>";z+="<input id='latestdates' name='latestdates' type='text' class='required' />";z+="</fieldset>";g("#controlledvocabulary").append(z)};m=function(){return sessionStorage.getItem("roleID")};b=function(){var A,z=g("input#vocabTerm").val(),B=g("select#vocab-options");z=MMS.utils.sanitizeInput(z);if(B.length>0){A=B.val()}r={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+z+"&option="+A,dataType:"json",cache:true,success:function(C){u(A,C)}};MMS.utils.doAjax(r)};o=function(C,z,B){var A="id="+C+"&vocabType="+z;if(B===undefined){var B=function(D){f(C,D)}}r={type:"GET",url:MMS.configObj.vocabUrl,data:A,dataType:"json",cache:true,success:B};MMS.utils.doAjax(r)};f=function(C,z){var A="",B=g("span#"+C+"-toggle").text();if(B==="( + )"){g("span#"+C+"-toggle").text("( - )");g("div#"+C+"-vocab-data").show()}else{if(B==="( - )"){g("div#"+C+"-vocab-data").hide();g("span#"+C+"-toggle").text("( + )")}}g.each(z,function(D,E){if(E.subject_id!==undefined){A+="<p><strong>Subject id:</strong> "+E.subject_id+"</p>"}if(E.nationalities!==""){A+="<p><strong>Nationality:</strong> "+E.nationalities+"</p>"}if(E.role_id!==""){A+="<p><strong>Role:</strong> "+E.role_id+"</p>"}if(E.preferred_terms_source_id!==""){A+="<p><strong>Source:</strong> "+E.preferred_terms_source_id+"</p>"}if(E.non_preferred_terms_term_text!==""){A+="<p><strong>Alternative name:</strong> "+E.non_preferred_terms_term_text+"</p>"}if(E.preferred_biographies_biography_text!==""){A+="<p><strong>Bio:</strong> "+E.preferred_biographies_biography_text+"</p>"}if(E.preferred_biographies_birth_date!==""){A+="<p><strong>Birth date:</strong> "+E.preferred_biographies_birth_date+"</p>"}if(E.preferred_biographies_death_date!==""){A+="<p><strong>Death date:</strong> "+E.preferred_biographies_death_date+"</p>"}if(E.preferred_biographies_sex!==""){A+="<p><strong>Sex:</strong> "+E.preferred_biographies_sex+"</p>"}});g("div#"+C+"-vocab-data").empty().append(A)};y=function(C,A,z){var B;while(A<50){B=g("#"+z+"-"+A).val();if(B===""){g("#"+z+"-"+A).val(C);break}A++}return B};e=function(A,C){var B,F,G,z,D,E=1,I=function(J){n(J)},H=g("select#vocab-options");if(m()=="2"){g("#"+A).removeAttr("disabled");g("#"+A).attr("readonly","readonly")}if(H.length>0){D=H.val()}if(D==="ulan"||D==="locnames"||D==="aloracreators"){if(D!=="locnames"){o(A,D,I)}B=g("#creator-0").val();if(B===""){y(C,0,"creator")}else{F=g("#coverage-spatial-repository-0").val(C);if(F===""){y(C,0,"coverage-spatial-repository")}else{y(C,E,"coverage-spatial-repository")}}}else{if(D==="aat"||D==="locsubjects"||D==="alorasubjects"){z=g("#coverage-temporal-styleperiod-0").val();if(z===""){y(C,0,"coverage-temporal-styleperiod")}else{z=y(C,E,"coverage-temporal-styleperiod")}if(z===undefined){G=g("#subject-0").val();if(G===""){y(C,0,"subject")}else{y(C,E,"subject")}}}}};n=function(z){var A="";g.each(z,function(B,C){A+='<input name="creator.alternative[]" type="hidden" value="'+C.non_preferred_terms_term_text+'" />';A+='<input name="description.creatorbio[]" type="hidden" value="'+C.preferred_biographies_biography_text+'" />';A+='<input name="description.nationality[]" type="hidden" value="'+C.nationalities+'" />';A+='<input name="description.role[]" type="hidden" value="'+C.role_id+'" />';A+='<input name="description.lifedates[]" type="hidden" value="'+C.preferred_biographies_birth_date+"-"+C.preferred_biographies_death_date+'" />';A+='<input name="source[]" type="hidden" value="'+C.preferred_terms_source_id+'" />'});g("div#metadata").append(A)};u=function(B,C){var z,A="";if(B==="ulan"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+v+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"ulan\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="aat"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+v+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="locnames"||B==="locsubjects"){z=C.loc;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+v+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+v+", $(this).text());return false;'>"+C.loc[D].title+"</a><br /><a href='#'>"+E.id+"</a></li></ul></p>"})}else{if(B==="aloracreators"||B==="alorasubjects"){z=C.local;if(z.message!==undefined){A+="<p><ul><li>No results found.</li></ul></p>";g("div#vocabulary-results").empty().append(A);return}g.each(z,function(D,E){if(B==="aloracreators"){A+="<p><ul><li><a href='#' id='"+v+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"local\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{A+="<p><ul><li><a href='#' id='"+v+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}g("div#vocabulary-results").empty().append(A)};q=function(){g("#controlled-vocabulary-section").show();var z=h();g("#content").append(z);g("input#vocabTerm").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("select#vocab-options").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("input#getVocabularies").on("click",function(){b()})};p=function(){g("select#type-arttypes").val("");g("select#type-timeperiods").val("");g("select#type-instructors").val("")};i=function(C){var z=["arttypes","timeperiods","instructors"],B={},A;if(C===undefined){C=function(D){d(D)}}for(A=0;A<z.length;A++){B.type="GET";B.url=MMS.configObj.vocabUrl;B.data="vocabType="+z[A];B.dataType="json";B.cache=true;B.success=C;MMS.utils.doAjax(B)}};d=function(B){var B=g.parseJSON(B);var C;var z;var E=sessionStorage.getItem("arttypes");var A=sessionStorage.getItem("timeperiods");var D=sessionStorage.getItem("instructors");C="<option value=''>---Select an term---</option>";g.each(B,function(F,G){if(G.type){z=G.type}if(G.term===E||G.term===A||G.term===D){C+="<option value='"+G.term+"' selected>"+G.term+"</option>"}else{C+="<option value='"+G.term+"'>"+G.term+"</option>"}});g("select#type-"+z).html(C)};x=function(){g("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){b()},displayControlledVocabulariesBox:function(z,A){q(z,A)},selectVocabularyTerm:function(A,z){e(A,z)},getTermData:function(A,z){o(A,z)},getLists:function(){i()},resetLists:function(){p()},loadCreatorForm:function(){c()},loadSubjectForm:function(){l()},init:function(){x()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(l){var p,r,x,a,A,j,m="#metadata",w="#metadata-form",b="#metadata-forms",h,g,y,C,f,n,E,B,o,v,c,t,u,i,s,k,D,d,q,z,e;p={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};r=function(G){var F=y(k,"displayOrder");l.each(F,function(H,I){C=h(I);C.appendTo(m)});l(m).append("<input name='objectType' type='hidden' value='"+G+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};d=function(F){var G;var H;if(F==="queue"){H="Back to Review Queue"}else{if(F==="search"){l("#search-results").hide();H="Back to Search Results"}}G="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+F+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+H+"</a>";return G};q=function(F){if(F==="queue"){MMS.queue.getItems()}else{if(F==="search"){l("#search-results").show();l("#content").empty()}}l("#clone-record").empty();l("#controlled-vocabulary-section").hide();return};x=function(H,I,M){var F=100,K="",L,G;l(".current").html("Edit Metadata");l(m).empty();K+="<div id='edit-mode'></div>";K+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";K+="<fieldset id='isPid'>";K+="<label>pid</label>";K+="<input type='text' value='"+I+"'  disabled />";K+="</fieldset>";if(M==="queue"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}else{if(M==="search"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}}k=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var J=y(k,"displayOrder");l.each(J,function(O,P){l.each(H,function(S,Q){if(P.element===S){L=S.replace(".","-");if(typeof Q==="string"){K+="<fieldset class='"+L+"-0'>";if(P.repeat==="true"){K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+S+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+S+"'><span>Add</span></a></span></label>"}else{K+="<label>"+P.label+"</label>"}if(P.type==="select"){if(P.required==="true"){var R="class='required"}if(P.element==="type.arttype"){sessionStorage.setItem("arttypes",Q)}else{if(P.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",Q)}else{if(P.element==="instructor"){sessionStorage.setItem("instructors",Q)}}}K+="<select name='"+P.element+"[]' id='"+P.id+"' "+R+"'></select>"}if(P.type==="text"){K+="<input id='"+S+"-"+F+"' name='"+S+"[]' type='text' value='"+Q+"' "+R+" />"}if(P.type==="textarea"){K+="<textarea id='"+S+"-"+F+"' name='"+S+"[]' rows='7' cols='55' "+R+">"+Q+"</textarea> "}K+="</fieldset>"}if(typeof Q==="object"){l.each(Q,function(U,T){F++;if(F>101){K+="<fieldset class='"+L+"-"+F+"'>"}else{K+="<fieldset class='"+L+"-0'>"}if(P.repeat==="true"){if(F>101){K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+S+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+S+"'><span>Del</span></a></span></label>"}else{K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+S+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+S+"'><span>Add</span></a></span></label>"}}else{K+="<label>"+P.label+"</label>"}if(P.type==="text"){K+="<input id='"+S+"-"+F+"' name='"+S+"[]' type='text' value='"+T+"' "+R+" />"}if(P.type==="textarea"){K+="<textarea id='"+S+"-"+F+"' name='"+S+"[]' rows='7' cols='55' "+R+">"+T+"</textarea> "}K+="</fieldset>"})}}})});l.each(H,function(O,P){if(O==="collection"){K+="<input id='"+O+"-0' name='collection' type='hidden' value='"+P+"' />"}else{if(O==="identifier.system"){K+="<input id='"+O+"' class='pid' name='pid' type='hidden' value='"+P+"' />"}else{if(O==="identifier.legacy"){K+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+P+"' />"}else{if(O==="identifier.master"){K+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+P+"' />"}else{if(O==="objectType"){G=P;K+="<input name='"+O+"' type='hidden' value='"+P+"' />"}else{if(O==="date.created"){K+="<fieldset>";K+="<label class='datecreated'>"+O+"</label>";K+="<input class='datecreated' type='text' value='"+P+"' disabled />";K+="<input class='datecreated' name='"+O+"[]' type='hidden' value='"+P+"'/>";K+="</fieldset>"}else{if(O==="date.modified"){K+="<fieldset>";K+="<label class='datemodified'>"+O+"</label>";K+="<input class='datemodified' type='text' value='"+P+"' disabled />";K+="</fieldset>"}}}}}}}});l.each(J,function(O,P){if(P.required==="false"){K+="<fieldset class='"+P.id+"-0' style='display:none;'>";K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+P.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+P.element+"'><span>Del</span></a></span></label>";if(P.type==="text"){K+="<input id='"+P.id+"-0' name='"+P.element+"[]' type='"+P.type+"' value='' />"}else{if(P.type==="textarea"){K+="<textarea id='"+P.id+"-0' name='"+P.element+"[]' rows='7' cols='55'></textarea> "}}K+="</fieldset>"}});p.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(p);var N=d(M);l("#pid").append(N);l(m).append(K);o();l(".optional_fields").show();l("#optional_fields").show();l(b).show();a()};j=function(F,G){var J,N=G.split("-"),M=N[N.length-2],K,I,H,L=[];if(N[N.length-1]==="clone"){N.pop();N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");I=I.replace(".","-");J=function(){l.each(k,function(O,P){H=P.element.replace(".","-");H=H.replace(".","-");if(I===H){A(F,P)}})};n(J)}else{if(N[N.length-1]==="remove"){N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");if(M==="0"){J=function(){l("#"+I).val("");l("."+I).hide()}}else{J=function(){l("."+G).remove()}}E(J)}}};B=function(F,G){F.preventDefault();F.stopPropagation();G=G.replace("-remove","");l("."+G).remove()};E=function(F){F()};n=function(F){F()};z=function(F){F=F.replace("-clear","");l("#"+F).val("")};h=function(F){var I=JSON.parse(sessionStorage.getItem("mms_profile"));var G="";var J="";if(F.type==="select"){if(F.required==="true"){var H="class='required"}G+="<fieldset class='"+F.id+"-"+MMS.counterObj.count+"'>";G+="<label for='"+F.id+"'>"+F.label+"</label>";G+="<select name='"+F.element+"[]' id='"+F.id+"' "+H+"'></select>";G+="</fieldset>"}else{if(F.vocabulary==="true"&&I.roleID=="2"){J="&nbsp;&nbsp;<a href='#' id='"+F.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}G+="<fieldset class='"+F.id+"-"+MMS.counterObj.count+"'>";G+="<label>";G+=F.label;if(F.repeat==="true"){G+="<span class='clone'><a href='#' id='"+F.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+F.element+"'><span>Add</span></a></span>"}else{if(F.repeat==="false"){G+="<a href='#' id='"+F.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(F.required==="false"){G+="<span class='remove'><a href='#' id='"+F.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+F.element+"'><span>Del</span></a></span>"}G+="</label>"+J;if(F.type==="text"){G+="<input "}else{if(F.type==="textarea"){G+="<textarea "}}G+="id='"+F.id+"-"+MMS.counterObj.count+"'";G+="name='"+F.element+"[]' ";G+="type='"+F.type+"' ";if(F.vocabulary==="true"&&I.roleID=="2"){G+="disabled='disbled'"}G+="class='";if(F.required==="true"){G+="required"}G+="'";if(F.type==="text"){G+="/>"}else{if(F.type==="textarea"){G+="rows='14' cols='45'></textarea>"}}G+="</fieldset>"}if(F.required==="true"){f=l(G)}else{if(F.required==="false"){f=l(G).hide()}}return f};a=function(){l("#optional_fields").empty();l.each(k,function(H,F){if(F.required==="false"){var G="<li class='icn_categories'><a href='#'>"+F.label+"</a></li>";g=l(G).on("click","a",function(I){I.preventDefault();MMS.metadata.appendOptionalField(F)});g.appendTo("#optional_fields")}})};e=function(F){l("."+F.id+"-0").show();location.hash="#"+F.id+"-0"};A=function(F,J){F.preventDefault();F.stopPropagation();var I=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var H="";var G="";G+="<fieldset class='"+J.id+"-"+MMS.counterObj.count+"'>";G+="<label>";G+=J.label;G+="&nbsp;<span class='remove'><a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+J.element+"'><span>Del</span></a></span>";if(J.vocabulary==="true"){}G+="</label>";if(J.type==="text"){G+="<input "}else{if(J.type==="textarea"){G+="<textarea "}}G+="id='"+J.id+"-"+MMS.counterObj.count+"'";G+="name='"+J.element+"[]' ";G+="type='"+J.type+"' ";if(J.vocabulary==="true"&&I.roleID=="2"){G+="disabled='disabled'"}G+="class='none ";G+="'";if(J.type==="text"){G+="/>"}else{if(J.type==="textarea"){G+="rows='10' cols='45'></textarea>"}}G+="</fieldset>";H=l(G).insertAfter("."+J.id+"-0");return H};v=function(){var H=JSON.parse(sessionStorage.getItem("mms_profile"));if(H.roleID==="2"){u={type:"PUT",url:MMS.configObj.queue,data:l(w).serialize(),dataType:"json",cache:true,success:function(I){l("#metadata-form").find("input[type=text], textarea").val("");l("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(u);return}var F=l(".pid").val();var G=l("#type").val();u={type:"PUT",url:MMS.configObj.repository,data:l(w).serialize(),dataType:"json",cache:false,success:function(I){if(I.updated==="true"){u={type:"GET",url:MMS.configObj.repository,data:"pid="+F,dataType:"json",cache:true,success:function(J,K){l("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},5000);location.hash="#header";return false;x(J,F,K)}};MMS.utils.doAjax(u)}else{if(I.created==="true"){l("#metadata-form").find("input[type=text], textarea").val("");l("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(u)};i=function(G,H,F){G.preventDefault();u={type:"GET",url:MMS.configObj.repository,data:"pid="+H,dataType:"json",cache:false,success:function(I){x(I,H,F)}};MMS.utils.doAjax(u)};D=function(){var F=l(".pid").val();l(".pid").remove();l("#isPid").remove();l(".datecreated").remove();l(".datemodified").remove();l("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+F+".</h4>");setTimeout(function(){l("div#actionFeedback").remove()},10000)};o=function(){l(w).validate({errorClass:"invalid",submitHandler:function(){v()}})};s=function(G,F){G.preventDefault();var H=confirm("Are you sure you want to delete this record?");if(H){u={type:"POST",url:MMS.configObj.repository,data:"pid="+F,dataType:"json",cache:true,success:function(I){if(I.deleted==="true"){l("#search-forms").hide();l("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(u)}return false};y=function(H,G){var I=[];for(var F in H){I.push(H[F])}return I.sort(function(L,K){var J=L[G];var M=K[G];return((J<M)?-1:((J>M)?1:0))})};c=function(G){MMS.counterObj.count=0;l("#search-results").empty();MMS.view.createView(p);if(G==="image"){var F=[];k=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));r(G);a()}o();l(".current").html(G+" metadata");l("#clone-record").remove();l(b).show();l(".optional_fields").show();l("#optional_fields").show();l("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};t=function(){l(b).hide();l(".optional_fields").hide();l(".formType").on("click",function(F){c(l(this).attr("id"))})};return{getMetadata:function(G,H,F){i(G,H,F)},deleteMetadata:function(G,F){s(G,F)},removeClonedField:function(F,G){B(F,G)},constructFieldEvent:function(F,G){j(F,G)},cloneRecord:function(F){D(F)},back:function(F){q(F)},createMetadataEditForm:function(F,H,G){x(F,H,G)},appendOptionalField:function(F){e(F)},clearField:function(F){z(F)},loadForm:function(F){c(F)},init:function(){t()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(d){var r="#user",k="#user-form",a="#user-forms",h,g,i,u,q,b,m,c,t,o,l,e,p,j,f,s,n;n={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};q=function(){d(k).validate({errorClass:"invalid",submitHandler:function(){c()}})};g=function(){n.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(n);var v="";var x="";var z="";var B="";var C="";var w="";var A="";x+="<fieldset>";x+="<label>";x+="* First Name";x+="</label>";x+="<input id='firstName' name='firstName' type='text' class='required' />";x+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' class='required' />";z+="</fieldset>";B+="<fieldset>";B+="<label>";B+="* DU ID";B+="</label>";B+="<input id='duID' name='duID' type='text' class='required' />";B+="</fieldset>";p={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(D){w+="<fieldset>";w+="<label for='roleID'>* Roles</label>";w+="<select name='roleID' id='roleID' class='required'>";w+="<option value=''>---Assign a role--</option>";d.each(D,function(E,F){if(E!="3"){w+="<option value='"+E+"'>"+F+"</option>"}});w+="</select>";w+="</fieldset>";d(r).append(w)}};var y=JSON.parse(sessionStorage.getItem("mms_profile"));if(y.roleID=="3"){j={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(D){A+="<strong>* Assign a Collection</strong>";d.each(D,function(E,F){A+="<p><input id='"+F.collectionID+"' name='collections[]' type='radio' value='"+F.collectionID+"' /><label for='"+F.collectionID+"'>"+F.title+"</label></p>"});d(r).append(A)}};MMS.utils.doAjax(j)}else{A+="<input id='"+y.collectionID+"' name='collections[]' type='hidden' value='"+y.collectionID+"' />";v+=A}MMS.utils.doAjax(p);v+=x;v+=z;v+=B;d(r).append(v);q()};u=function(){n.footer="null";MMS.view.createView(n);o={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(v){var w="";w+="<div class='tab_container'>";w+="<div id='tab1' class='tab_content'>";w+="<table class='tablesorter' cellspacing='0'>";w+="<thead>";w+="<tr>";w+="<th>First Name</th>";w+="<th>Last Name</th>";w+="<th>Role</th>";w+="<th>Active</th>";w+="<th>Actions</th>";w+="</tr>";w+="</thead>";w+="<tbody>";d.each(v,function(x,y){w+="<tr>";w+="<td>"+y.firstName+"</td>";w+="<td>"+y.lastName+"</td>";w+="<td>"+y.roleName+"</td>";if(y.isActive==="1"){w+="<td>Yes</td>"}else{w+="<td>No</td>"}w+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+y.id+");'></td>";w+="</tr>"});w+="</tbody>";w+="</table>";w+="</div>";w+="</div>";d(r).append(w)}};MMS.utils.doAjax(o)};i=function(w){var z="";var y="";var v="";var x="";n.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(n);d(".current").html("Edit User");f={type:"GET",url:MMS.configObj.users,data:"id="+w,dataType:"json",cache:false,async:false,success:function(B){z+="<input name='userID' type='hidden' value='"+w+"' />";z+="<fieldset>";z+="<label>";z+="* First Name";z+="</label>";z+="<input id='firstName' name='firstName' type='text' value='"+B[0].firstName+"' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' value='"+B[0].lastName+"' class='required' />";z+="</fieldset>";d(r).append(z);p={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(C){y+="<fieldset>";y+="<label for='roleID'>* Roles</label>";y+="<select name='roleID' id='roleID' class='required'>";y+="<option value=''>---Assign a role--</option>";d.each(C,function(D,E){if(B[0].roleID===D){y+="<option value='"+D+"' selected>"+E+"</option>"}else{if(D!="3"){y+="<option value='"+D+"'>"+E+"</option>"}}});y+="</select>";y+="</fieldset>";d(r).append(y)}};var A=JSON.parse(sessionStorage.getItem("mms_profile"));if(A.roleID=="3"){j={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(C){v+="<strong>* Assigned Collection</strong>";d.each(C,function(D,E){if(B[1].collectionID===E.collectionID){v+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' checked /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}else{v+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}})}};MMS.utils.doAjax(j)}else{v+="<input name='collectionID' type='hidden' value='"+A.collectionID+"' />"}d(r).append(v);MMS.utils.doAjax(p);x+="<label>";x+="isActive";x+="</label>";if(B[0].isActive=="1"){x+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' checked />"}else{x+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' />"}d(r).append(x)}};MMS.utils.doAjax(f);q()};c=function(){l={type:"PUT",url:MMS.configObj.users,data:d(k).serialize(),dataType:"json",cache:false,success:function(v){if(v.updated==="true"){u()}else{if(v.updated==="false"){alert("Error: Update failed.")}else{d("#user-form")[0].reset()}}}};MMS.utils.doAjax(l)};t=function(w){var v=confirm("Are you sure you want to delete this user?");if(v){e={type:"POST",url:MMS.configObj.users,data:"userID="+w,dataType:"json",cache:false,success:function(x){if(x.deleted==="true"){u()}else{if(x.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(e)}};h=function(){s={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(w){sessionStorage.setItem("mms_profile",JSON.stringify(w));var x=JSON.parse(sessionStorage.getItem("mms_profile"));var v=x.firstName+" "+x.lastName+" ("+x.roleName+")";d("#user-role").append(v)}};MMS.utils.doAjax(s)};b=function(v){if(v==="addUser"){g();d("#search-results").empty();d(".current").html("Add User")}else{if(v==="viewUsers"){u();d("#search-results").empty();d(".current").html("Users")}}};m=function(){d(a).hide();d("#addUser").on("click",function(v){b(d(this).attr("id"))});d("#viewUsers").on("click",function(v){b(d(this).attr("id"))})};return{init:function(){return m()},constructUserEditForm:function(v){return i(v)},deleteUserData:function(v){return t(v)},getSessionInfo:function(){return h()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(g){var i="#collection",f="#collection-form",c="#collection-forms",e,b,j,d,l,h,a,k;k={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};e=function(){MMS.view.createView(k);var q="";var p="";var o="";var r="";var n="";p+="<fieldset>";p+="<label>";p+="* Title";p+="</label>";p+="<input id='title' name='title' type='text' class='required' />";p+="</fieldset>";o+="<fieldset>";o+="<label>";o+="* Description";o+="</label>";o+="<input id='description' name='description' type='text' class='required' />";o+="</fieldset>";n+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";q+=p;q+=o;q+=n;g(i).append(q);var m={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(s){r+="<fieldset>";r+="<label>";r+="* Object Type";r+="</label>";r+="<br />";g.each(s,function(t,u){r+="<p><input id='"+u.objectType+"' name='objectType[]' type='checkbox' value='"+u.objectTypeID+"' /> "+u.objectType+"</p>"});r+="</fieldset>";g(i).append(r)}};MMS.utils.doAjax(m)};b=function(){MMS.view.createView(k);a={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(m){var n="";n+="<div class='tab_container'>";n+="<div id='tab1' class='tab_content'>";n+="<table class='tablesorter' cellspacing='0'>";n+="<thead>";n+="<tr>";n+="<th>Collection Name</th>";n+="<th>Description</th>";n+="<th>Active</th>";n+="<th>Actions</th>";n+="</tr>";n+="</thead>";n+="<tbody>";g.each(m,function(o,p){n+="<tr>";n+="<td>"+p.title+"</td>";n+="<td>"+p.description+"</td>";if(p.isActive==="1"){n+="<td>Yes</td>"}else{n+="<td>No</td>"}n+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+p.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+p.collectionID+"\"); return false;'></td>";n+="</tr>"});n+="</tbody>";n+="</table>";n+="</div>";n+="</div>";g(i).append(n)}};MMS.utils.doAjax(a)};h=function(){a={type:"PUT",url:MMS.configObj.collections,data:g(f).serialize(),dataType:"json",cache:false,success:function(m){g(f)[0].reset()}};MMS.utils.doAjax(a)};d=function(m){if(m==="addCollection"){e();g(".current").html("Add Collection")}else{if(m==="editCollection"){}else{if(m==="deleteCollection"){}else{if(m==="viewCollections"){b();g(".current").html("Collections")}}}}};l=function(){g(c).hide();g("#addCollection").on("click",function(m){d(g(this).attr("id"))});g("#viewCollections").on("click",function(m){d(g(this).attr("id"))});j()};j=function(){g(f).validate({errorClass:"invalid",submitHandler:function(){h()}})};return{init:function(){return l()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(d){var c,f,e,a,b=".module width_full",g="#login-form",h,i;c=function(){a={type:"POST",url:MMS.configObj.authenticate,data:d(g).serialize(),dataType:"json",cache:true,success:function(j){d(b).hide();f(j)}};d("h3#message").ajaxStart(function(){d("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(a)};f=function(j){if(j.isAuthenticated==="false"){d("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");d("#authenticate").removeAttr("disabled")}else{if(j.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};e=function(){d("#login-form").validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){d("#logout").click(function(){a={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(j){if(j.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(a)});return false};h=function(){e();i()};return{init:function(){h()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(f){var b,c,d,l,e,i,g,a,k,j,h="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";j={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};b=function(m){f("#content").empty();m.preventDefault();d=f("input#quickSearch").val();d=MMS.utils.sanitizeInput(d);if(d===""){return f("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}l=f("#search_box").serialize();f("#search").empty();f("#actionFeedback").empty();a={type:"GET",url:MMS.configObj.search,data:f("#search_box").serialize(),dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");MMS.view.createView(j);g(n)}}};MMS.utils.doAjax(a);return false};g=function(m){var o="";var n=[];var p="";var q=JSON.parse(sessionStorage.getItem("mms_profile"));f("#search_box")[0].reset();f("#search-message").text("You searched for: "+d);f(".current").html("Search Results");if(m.response.numFound===0){f("#search-forms").remove();f("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}o+="<div>";o+="<div>";o+="<table class='tablesorter' cellspacing='0'>";o+="<thead>";o+="<tr>";o+="<th>Records Found: "+m.response.numFound+"</th>";o+="<th>Actions</th>";o+="</tr>";o+="</thead>";o+="<tbody id='pages'>";f.each(m.response.docs,function(r,s){p+="<tr>";p+="<td width='85%'>";p+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";p+="<tr align='top'>";if(s.identifier_t[0]!==undefined){p+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+s.identifier_t[0]+"' alt='"+s.title_t[0]+"' border='1'></p></td>"}p+="<td width='40%' align='left'>";if(s.title_t!==undefined){p+="<p><strong>Title:</strong> "+s.title_t[0]+"</p>"}if(s.creator_t!==undefined){p+="<p><strong>Creator:</strong> "+s.creator_t[0]+"</p>"}p+="</td>";p+="</tr>";p+="</table>";p+="</td>";p+="<td width='28%'>";p+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+s.id+'", "search");\'>';if(q.roleID==="1"){p+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+s.id+"\"); return false;'>"}p+="</td>";p+="</tr>";n.push(p);p=""});o+="</tbody>";o+="</table>";o+="</div>";o+="</div>";f("#search").append(o);f("#search-results").show();MMS.pagination.init(n)};c=function(m){var n;f.each(m.spellcheck.suggestions,function(o,p){if(p!=="true"){if(p.suggestion!==undefined){f.each(p.suggestion,function(q,r){if(q===0){i=r.word.trim();n="<a href='#' id='didYouMeanSearch'>"+r.word.trim()+"</a>"}})}}});if(n!==undefined){f("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+n+"</h4>");f("#didYouMeanSearch").on("click",function(o){e()})}};e=function(){f("#search").empty();f("#searchActionFeedback").empty();var m=l.replace(d,i);d=i;a={type:"GET",url:MMS.configObj.search,data:m,dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");g(n)}}};MMS.utils.doAjax(a)};k=function(){f("#search-forms").hide();f("form.quick_search").submit(function(m){b(m)})};return{init:function(){return k()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(g){var c,j=1,d,e=4,b,a,f,k,h,i,l;d=function(){return Math.ceil(f/e)};b=function(){g("div.pagination").empty();var n="";n+="<ul id='pagination-flickr'>";n+="<li><a href='#' onclick='MMS.pagination.previous("+j+")'>Previous</a></li>";for(var m=1;m<=d();m++){if(m!==j){if(d()<=20){n+="<li><a href='#' onclick='MMS.pagination.renderPage("+m+"); return false;'>"+m+"</a></li>"}}else{n+="<li class='active'>"+m+"</li>";j=m}}n+="<li><a href='#' onclick='MMS.pagination.next("+j+")'>Next</a></li>";n+="</ul>";g("div.pagination").append(n)};h=function(n){if(n<d()){var m=n+1;a(m)}};i=function(n){if(n>1){var m=n-1;a(m)}};a=function(n){j=n;var n=(n-1);b();g("#pages").empty();for(var m=(n)*e;m<((n)*e)+e;m++){g("#pages").append(c[m])}};l=function(m){c=m;f=m.length;a(1)};return{init:function(m){return l(m)},renderPage:function(m){return a(m)},next:function(m){return h(m)},previous:function(m){return i(m)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(e){var f,a,d,b,c,g;c={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};f=function(){MMS.utils.focusForm("#batch-ingest-forms");b={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(h){MMS.view.createView(c);a(h)}};MMS.utils.doAjax(b);return false};a=function(h){e(".current").html("Batch");if(h.length===0){e("#batch-ingest-forms").remove();e("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var i="";i+="<div>";i+="<div>";i+="<table class='tablesorter' cellspacing='0'>";i+="<thead>";i+="<tr>";i+="<th>Batch Records</th>";i+="<th>Status</th>";i+="</tr>";i+="</thead>";i+="<tbody>";e.each(h,function(j,k){if(k.object!=""){i+="<input name='pids[]' type='hidden' value='"+k.pid+"' />"}i+="<tr>";i+="<td width='85%'>";i+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";i+="<tr align='top'>";if(k.object!=""){i+="<td width='30%' align='center'><p><img src='"+k.object+"' alt='"+k.title+"' border='1'></p></td>"}else{i+="<td width='30%' align='center'><p>No Object.</p></td>"}i+="<td width='40%' align='left'>";i+="<p><strong>Pid:</strong> "+k.pid+"</p>";i+="<p><strong>Title:</strong> "+k.title+"</p>";i+="<p><strong>Creator:</strong> "+k.creator+"</p>";i+="<p><strong>Identifier:</strong> "+k.identifier+"</p>";i+="</td>";i+="</tr>";i+="</table>";i+="</td>";if(k.object!=""){i+="<td width='28%'>complete.</td>"}else{i+="<td width='28%'>incomplete.</td>"}i+="</tr>"});i+="</tbody>";i+="</table>";i+="</div>";i+="</div>";e("#batch-ingest").empty().append(i);e("#batch-ingest-forms").show()};d=function(){b={type:"POST",url:MMS.configObj.batch,data:e("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(h){if(h.success===false){e("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){e("div#actionFeedback").empty()},4000)}else{e("#batch-ingest").empty();e("#batch-ingest-forms").remove();e("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){e("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(b);return false};g=function(){e("#batch-ingest-forms").hide();e("#batch").on("click",function(h){f(e(this).attr("id"))})};return{init:function(){return g()},ingest:function(){return d()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(h){var c,g,d,f,e,a,b;e={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};c=function(){d={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(i){MMS.view.createView(e);g(i)}};MMS.utils.doAjax(d)};g=function(i){h(".current").html("Xml");var j="";j+="<div class='tab_container'>";j+="<div id='tab1' class='tab_content'>";j+="<table class='tablesorter' cellspacing='0'>";j+="<thead>";j+="<tr>";j+="<th>XML File</th>";j+="<th>Actions</th>";j+="</tr>";j+="</thead>";j+="<tbody>";h.each(i,function(k,l){j+="<input name='xmlFiles[]' type='hidden' value='"+l.fileName+"' />";j+="<tr>";j+="<td>"+l.fileName+"</td>";j+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+l.fileName+"\"); return false;'></td>";j+="</tr>"});j+="</tbody>";j+="</table>";j+="</div>";j+="</div>";h("#xml").append(j);h("#xml-forms").show()};f=function(j){var k=[];for(var i in j){k.push(j[i].name)}d={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:k},dataType:"json",cache:false,success:function(l){h("#xml-forms").remove();if(l.created==="true"){h("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){h("div#actionFeedback").empty()},5000)}else{h("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){h("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(d)};a=function(){MMS.view.createView(e);d={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(i){h("#xml").append(i)}};MMS.utils.doAjax(d)};b=function(){h("#view_xml").on("click",function(){c()})};return{init:function(){return b()},saveXml:function(i){return f(i)},createUploadArea:function(){return a()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(e){var c,a,b,d;c={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};a=function(){b={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(f){d(f)}};MMS.utils.doAjax(b);return false};d=function(f){e(".current").html("Review Queue");e("#search-results").empty();MMS.view.createView(c);if(f.length===0){e("#queue-forms").remove();e("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var g="";g+="<div class='tab_container'>";g+="<div id='tab1' class='tab_content'>";g+="<table class='tablesorter' cellspacing='0'>";g+="<thead>";g+="<tr>";g+="<th>Pid</th>";g+="<th>Title</th>";g+="<th>Created By</th>";g+="<th>Date Created</th>";g+="<th>Actions</th>";g+="</tr>";g+="</thead>";g+="<tbody>";e.each(f,function(h,i){g+="<tr>";g+="<td>"+i.pid+"</td>";g+="<td>"+i.title+"</td>";g+="<td>"+i.name+"</td>";g+="<td>"+i.timestamp+"</td>";g+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+i.pid+'", "queue");\'</td>';g+="</tr>"});g+="</tbody>";g+="</table>";g+="</div>";g+="</div>";e("#search-results").empty();e("#queue").append(g)};return{getItems:function(){a()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(b){var a;a=function(c){var d="";d+='<div id="actionFeedback"></div>';d+='<div id="error"></div>';d+='<article id="'+c.articleID+'" class="'+c.articleClass+'">';d+="<header>";if(c.h3ID!=="null"){d+='<h3 id="'+c.h3ID+'">'+c.h3Value+"</h3>"}if(c.header!=="null"){d+=c.header}d+="</header>";d+='<form id="'+c.formID+'">';d+='<div id="'+c.divID+'" class="'+c.divClass+'"></div>';d+="<footer>";if(c.footer!=="null"){d+=c.footer}d+="</footer>";d+="</form>";d+="</article>";b("#"+c.content).empty().append(d)};return{createView:function(c){a(c)}}}(jQuery));$(function(){var a={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(a))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(e){var f=e.split("."),g=MMS,h;if(f[0]==="MMS"){f=f.slice(1)}for(h=0;h<f.length;h+=1){if(typeof g[f[h]]==="undefined"){g[f[h]]={}}g=g[f[h]]}return g};MMS.namespace("MMS.utils");MMS.utils=(function(l){var g,k,i,h,j;h={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};g=function(a){a.timeout=5000;a.error=function(c,b){l("#error").html("<h4 class='alert_error'>An error has occurred ("+b+").  Please contact library-support@du.edu for assistance.</h4>")};a.statusCode={403:function(){alert("Session expired");MMS.view.createView(h);l("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};l(document).ajaxStart(function(){l.fancybox.showLoading()});l(document).ajaxStop(function(){l.fancybox.hideLoading()});l.ajax(a)};i=function(){var a={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(b){if(typeof b===null||b.isFedoraUp!==200||b.isSolrUp!=="OK"){l("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");l("#authenticate").attr("disabled","disabled")}}};g(a)};j=function(a){return a.replace(/</g,"").replace(/>/g,"")};k=function(a){if(a!=="#metadata-forms"){l(".optional_fields").hide();l("#optional_fields").hide()}l("article:not("+a+", .breadcrumbs)").hide()};return{doAjax:function(a){g(a)},focusForm:function(a){k(a)},sanitizeInput:function(a){return j(a)},pingServices:function(){i()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(R){var W,D,B,E,I,T,A,H,L,z,S,Q,N,P,J,U,K,X,O,C,F,V,M,G;G={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};Q=function(){var a="";a+='<article id="controlled-vocabulary-section" class="module width_quarter">';a+="<header><h3>Controlled Vocabularies</h3></header>";a+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';a+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';a+="<p>";a+='<select id="vocab-options" name="vocab-options">';a+='<option value="ulan" selected>ULAN</option>';a+='<option value="aat">AAT</option>';a+='<option value="locnames">LC-Names</option>';a+='<option value="locsubjects">LC-Subjects</option>';a+='<option value="aloracreators">Alora-Creators</option>';a+='<option value="alorasubjects">Alora-Subjects</option>';a+="</select>&nbsp;";a+='<input id="getVocabularies" type="submit" value="Go" />';a+="</p>";a+="</div>";a+='<div id="vocabulary-results"></div>';a+="</article>";return a};V=function(){R("#search-results").empty();MMS.view.createView(G);N();F();R(".current").html("Creator");R("#controlled-vocabulary-form").show()};M=function(){R("#search-results").empty();MMS.view.createView(G);C();F();R(".current").html("Subject");R("#controlled-vocabulary-form").show()};F=function(){R("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){X()}})};X=function(){H={type:"POST",url:MMS.configObj.creatorapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(H)};O=function(){H={type:"POST",url:MMS.configObj.subjectapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(H)};C=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Subject";a+="</label>";a+="<input id='subject' name='subject[]' type='text' class='required' />";a+="</fieldset>";a+="<label>";R("#controlledvocabulary").append(a)};N=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Creator";a+="</label>";a+="<input id='creator' name='creator[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Creator Alternative";a+="</label>";a+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Nationality";a+="</label>";a+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Role";a+="</label>";a+="<input id='description-role' name='description.role[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Biography";a+="</label>";a+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Sex";a+="</label>";a+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Source";a+="</label>";a+="<input id='source' name='source' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Earliest Date";a+="</label>";a+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Latest Date";a+="</label>";a+="<input id='latestdates' name='latestdates' type='text' class='required' />";a+="</fieldset>";R("#controlledvocabulary").append(a)};L=function(){return sessionStorage.getItem("roleID")};W=function(){var a,b=R("input#vocabTerm").val(),c=R("select#vocab-options");b=MMS.utils.sanitizeInput(b);if(c.length>0){a=c.val()}H={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+b+"&option="+a,dataType:"json",cache:true,success:function(d){E(a,d)}};MMS.utils.doAjax(H)};z=function(c,b,d){var a="id="+c+"&vocabType="+b;if(d===undefined){var d=function(e){S(c,e)}}H={type:"GET",url:MMS.configObj.vocabUrl,data:a,dataType:"json",cache:true,success:d};MMS.utils.doAjax(H)};S=function(c,b){var a="",d=R("span#"+c+"-toggle").text();if(d==="( + )"){R("span#"+c+"-toggle").text("( - )");R("div#"+c+"-vocab-data").show()}else{if(d==="( - )"){R("div#"+c+"-vocab-data").hide();R("span#"+c+"-toggle").text("( + )")}}R.each(b,function(f,e){if(e.subject_id!==undefined){a+="<p><strong>Subject id:</strong> "+e.subject_id+"</p>"}if(e.nationalities!==""){a+="<p><strong>Nationality:</strong> "+e.nationalities+"</p>"}if(e.role_id!==""){a+="<p><strong>Role:</strong> "+e.role_id+"</p>"}if(e.preferred_terms_source_id!==""){a+="<p><strong>Source:</strong> "+e.preferred_terms_source_id+"</p>"}if(e.non_preferred_terms_term_text!==""){a+="<p><strong>Alternative name:</strong> "+e.non_preferred_terms_term_text+"</p>"}if(e.preferred_biographies_biography_text!==""){a+="<p><strong>Bio:</strong> "+e.preferred_biographies_biography_text+"</p>"}if(e.preferred_biographies_birth_date!==""){a+="<p><strong>Birth date:</strong> "+e.preferred_biographies_birth_date+"</p>"}if(e.preferred_biographies_death_date!==""){a+="<p><strong>Death date:</strong> "+e.preferred_biographies_death_date+"</p>"}if(e.preferred_biographies_sex!==""){a+="<p><strong>Sex:</strong> "+e.preferred_biographies_sex+"</p>"}});R("div#"+c+"-vocab-data").empty().append(a)};A=function(c,a,b){var d;while(a<50){d=R("#"+b+"-"+a).val();if(d===""){R("#"+b+"-"+a).val(c);break}a++}return d};T=function(i,g){var h,d,c,j,f,e=1,a=function(k){K(k)},b=R("select#vocab-options");if(L()=="2"){R("#"+i).removeAttr("disabled");R("#"+i).attr("readonly","readonly")}if(b.length>0){f=b.val()}if(f==="ulan"||f==="locnames"||f==="aloracreators"){if(f!=="locnames"){z(i,f,a)}h=R("#creator-0").val();if(h===""){A(g,0,"creator")}else{d=R("#coverage-spatial-repository-0").val(g);if(d===""){A(g,0,"coverage-spatial-repository")}else{A(g,e,"coverage-spatial-repository")}}}else{if(f==="aat"||f==="locsubjects"||f==="alorasubjects"){j=R("#coverage-temporal-styleperiod-0").val();if(j===""){A(g,0,"coverage-temporal-styleperiod")}else{j=A(g,e,"coverage-temporal-styleperiod")}if(j===undefined){c=R("#subject-0").val();if(c===""){A(g,0,"subject")}else{A(g,e,"subject")}}}}};K=function(b){var a="";R.each(b,function(d,c){a+='<input name="creator.alternative[]" type="hidden" value="'+c.non_preferred_terms_term_text+'" />';a+='<input name="description.creatorbio[]" type="hidden" value="'+c.preferred_biographies_biography_text+'" />';a+='<input name="description.nationality[]" type="hidden" value="'+c.nationalities+'" />';a+='<input name="description.role[]" type="hidden" value="'+c.role_id+'" />';a+='<input name="description.lifedates[]" type="hidden" value="'+c.preferred_biographies_birth_date+"-"+c.preferred_biographies_death_date+'" />';a+='<input name="source[]" type="hidden" value="'+c.preferred_terms_source_id+'" />'});R("div#metadata").append(a)};E=function(d,c){var b,a="";if(d==="ulan"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+D+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"ulan\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="aat"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+D+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="locnames"||d==="locsubjects"){b=c.loc;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+D+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+D+", $(this).text());return false;'>"+c.loc[f].title+"</a><br /><a href='#'>"+e.id+"</a></li></ul></p>"})}else{if(d==="aloracreators"||d==="alorasubjects"){b=c.local;if(b.message!==undefined){a+="<p><ul><li>No results found.</li></ul></p>";R("div#vocabulary-results").empty().append(a);return}R.each(b,function(f,e){if(d==="aloracreators"){a+="<p><ul><li><a href='#' id='"+D+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"local\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{a+="<p><ul><li><a href='#' id='"+D+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}R("div#vocabulary-results").empty().append(a)};I=function(){R("#controlled-vocabulary-section").show();var a=Q();R("#content").append(a);R("input#vocabTerm").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("select#vocab-options").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("input#getVocabularies").on("click",function(){W()})};J=function(){R("select#type-arttypes").val("");R("select#type-timeperiods").val("");R("select#type-instructors").val("")};P=function(c){var b=["arttypes","timeperiods","instructors"],d={},a;if(c===undefined){c=function(e){U(e)}}for(a=0;a<b.length;a++){d.type="GET";d.url=MMS.configObj.vocabUrl;d.data="vocabType="+b[a];d.dataType="json";d.cache=true;d.success=c;MMS.utils.doAjax(d)}};U=function(f){var f=R.parseJSON(f);var e;var b;var c=sessionStorage.getItem("arttypes");var a=sessionStorage.getItem("timeperiods");var d=sessionStorage.getItem("instructors");e="<option value=''>---Select an term---</option>";R.each(f,function(h,g){if(g.type){b=g.type}if(g.term===c||g.term===a||g.term===d){e+="<option value='"+g.term+"' selected>"+g.term+"</option>"}else{e+="<option value='"+g.term+"'>"+g.term+"</option>"}});R("select#type-"+b).html(e)};B=function(){R("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){W()},displayControlledVocabulariesBox:function(b,a){I(b,a)},selectVocabularyTerm:function(a,b){T(a,b)},getTermData:function(a,b){z(a,b)},getLists:function(){P()},resetLists:function(){J()},loadCreatorForm:function(){V()},loadSubjectForm:function(){M()},init:function(){B()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(O){var K,I,ah,Z,ae,Q,N="#metadata",ai="#metadata-form",Y="#metadata-forms",S,T,ag,ac,U,M,aa,ad,L,aj,X,G,F,R,H,P,ab,W,J,af,V;K={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};I=function(a){var b=ag(P,"displayOrder");O.each(b,function(d,c){ac=S(c);ac.appendTo(N)});O(N).append("<input name='objectType' type='hidden' value='"+a+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};W=function(b){var a;var c;if(b==="queue"){c="Back to Review Queue"}else{if(b==="search"){O("#search-results").hide();c="Back to Search Results"}}a="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+b+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+c+"</a>";return a};J=function(a){if(a==="queue"){MMS.queue.getItems()}else{if(a==="search"){O("#search-results").show();O("#content").empty()}}O("#clone-record").empty();O("#controlled-vocabulary-section").hide();return};ah=function(g,f,b){var i=100,d="",c,h;O(".current").html("Edit Metadata");O(N).empty();d+="<div id='edit-mode'></div>";d+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";d+="<fieldset id='isPid'>";d+="<label>pid</label>";d+="<input type='text' value='"+f+"'  disabled />";d+="</fieldset>";if(b==="queue"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}else{if(b==="search"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}}P=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var e=ag(P,"displayOrder");O.each(e,function(k,j){O.each(g,function(n,m){if(j.element===n){c=n.replace(".","-");if(typeof m==="string"){d+="<fieldset class='"+c+"-0'>";if(j.repeat==="true"){d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+n+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+n+"'><span>Add</span></a></span></label>"}else{d+="<label>"+j.label+"</label>"}if(j.type==="select"){if(j.required==="true"){var l="class='required"}if(j.element==="type.arttype"){sessionStorage.setItem("arttypes",m)}else{if(j.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",m)}else{if(j.element==="instructor"){sessionStorage.setItem("instructors",m)}}}d+="<select name='"+j.element+"[]' id='"+j.id+"' "+l+"'></select>"}if(j.type==="text"){d+="<input id='"+n+"-"+i+"' name='"+n+"[]' type='text' value='"+m+"' "+l+" />"}if(j.type==="textarea"){d+="<textarea id='"+n+"-"+i+"' name='"+n+"[]' rows='7' cols='55' "+l+">"+m+"</textarea> "}d+="</fieldset>"}if(typeof m==="object"){O.each(m,function(o,p){i++;if(i>101){d+="<fieldset class='"+c+"-"+i+"'>"}else{d+="<fieldset class='"+c+"-0'>"}if(j.repeat==="true"){if(i>101){d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+n+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+n+"'><span>Del</span></a></span></label>"}else{d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+n+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+n+"'><span>Add</span></a></span></label>"}}else{d+="<label>"+j.label+"</label>"}if(j.type==="text"){d+="<input id='"+n+"-"+i+"' name='"+n+"[]' type='text' value='"+p+"' "+l+" />"}if(j.type==="textarea"){d+="<textarea id='"+n+"-"+i+"' name='"+n+"[]' rows='7' cols='55' "+l+">"+p+"</textarea> "}d+="</fieldset>"})}}})});O.each(g,function(k,j){if(k==="collection"){d+="<input id='"+k+"-0' name='collection' type='hidden' value='"+j+"' />"}else{if(k==="identifier.system"){d+="<input id='"+k+"' class='pid' name='pid' type='hidden' value='"+j+"' />"}else{if(k==="identifier.legacy"){d+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+j+"' />"}else{if(k==="identifier.master"){d+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+j+"' />"}else{if(k==="objectType"){h=j;d+="<input name='"+k+"' type='hidden' value='"+j+"' />"}else{if(k==="date.created"){d+="<fieldset>";d+="<label class='datecreated'>"+k+"</label>";d+="<input class='datecreated' type='text' value='"+j+"' disabled />";d+="<input class='datecreated' name='"+k+"[]' type='hidden' value='"+j+"'/>";d+="</fieldset>"}else{if(k==="date.modified"){d+="<fieldset>";d+="<label class='datemodified'>"+k+"</label>";d+="<input class='datemodified' type='text' value='"+j+"' disabled />";d+="</fieldset>"}}}}}}}});O.each(e,function(k,j){if(j.required==="false"){d+="<fieldset class='"+j.id+"-0' style='display:none;'>";d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+j.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+j.element+"'><span>Del</span></a></span></label>";if(j.type==="text"){d+="<input id='"+j.id+"-0' name='"+j.element+"[]' type='"+j.type+"' value='' />"}else{if(j.type==="textarea"){d+="<textarea id='"+j.id+"-0' name='"+j.element+"[]' rows='7' cols='55'></textarea> "}}d+="</fieldset>"}});K.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(K);var a=W(b);O("#pid").append(a);O(N).append(d);L();O(".optional_fields").show();O("#optional_fields").show();O(Y).show();Z()};Q=function(i,h){var e,a=h.split("-"),b=a[a.length-2],d,f,g,c=[];if(a[a.length-1]==="clone"){a.pop();a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");f=f.replace(".","-");e=function(){O.each(P,function(k,j){g=j.element.replace(".","-");g=g.replace(".","-");if(f===g){ae(i,j)}})};M(e)}else{if(a[a.length-1]==="remove"){a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");if(b==="0"){e=function(){O("#"+f).val("");O("."+f).hide()}}else{e=function(){O("."+h).remove()}}aa(e)}}};ad=function(b,a){b.preventDefault();b.stopPropagation();a=a.replace("-remove","");O("."+a).remove()};aa=function(a){a()};M=function(a){a()};af=function(a){a=a.replace("-clear","");O("#"+a).val("")};S=function(b){var d=JSON.parse(sessionStorage.getItem("mms_profile"));var a="";var c="";if(b.type==="select"){if(b.required==="true"){var e="class='required"}a+="<fieldset class='"+b.id+"-"+MMS.counterObj.count+"'>";a+="<label for='"+b.id+"'>"+b.label+"</label>";a+="<select name='"+b.element+"[]' id='"+b.id+"' "+e+"'></select>";a+="</fieldset>"}else{if(b.vocabulary==="true"&&d.roleID=="2"){c="&nbsp;&nbsp;<a href='#' id='"+b.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}a+="<fieldset class='"+b.id+"-"+MMS.counterObj.count+"'>";a+="<label>";a+=b.label;if(b.repeat==="true"){a+="<span class='clone'><a href='#' id='"+b.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+b.element+"'><span>Add</span></a></span>"}else{if(b.repeat==="false"){a+="<a href='#' id='"+b.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(b.required==="false"){a+="<span class='remove'><a href='#' id='"+b.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+b.element+"'><span>Del</span></a></span>"}a+="</label>"+c;if(b.type==="text"){a+="<input "}else{if(b.type==="textarea"){a+="<textarea "}}a+="id='"+b.id+"-"+MMS.counterObj.count+"'";a+="name='"+b.element+"[]' ";a+="type='"+b.type+"' ";if(b.vocabulary==="true"&&d.roleID=="2"){a+="disabled='disbled'"}a+="class='";if(b.required==="true"){a+="required"}a+="'";if(b.type==="text"){a+="/>"}else{if(b.type==="textarea"){a+="rows='14' cols='45'></textarea>"}}a+="</fieldset>"}if(b.required==="true"){U=O(a)}else{if(b.required==="false"){U=O(a).hide()}}return U};Z=function(){O("#optional_fields").empty();O.each(P,function(c,b){if(b.required==="false"){var a="<li class='icn_categories'><a href='#'>"+b.label+"</a></li>";T=O(a).on("click","a",function(d){d.preventDefault();MMS.metadata.appendOptionalField(b)});T.appendTo("#optional_fields")}})};V=function(a){O("."+a.id+"-0").show();location.hash="#"+a.id+"-0"};ae=function(b,c){b.preventDefault();b.stopPropagation();var d=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var e="";var a="";a+="<fieldset class='"+c.id+"-"+MMS.counterObj.count+"'>";a+="<label>";a+=c.label;a+="&nbsp;<span class='remove'><a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+c.element+"'><span>Del</span></a></span>";if(c.vocabulary==="true"){}a+="</label>";if(c.type==="text"){a+="<input "}else{if(c.type==="textarea"){a+="<textarea "}}a+="id='"+c.id+"-"+MMS.counterObj.count+"'";a+="name='"+c.element+"[]' ";a+="type='"+c.type+"' ";if(c.vocabulary==="true"&&d.roleID=="2"){a+="disabled='disabled'"}a+="class='none ";a+="'";if(c.type==="text"){a+="/>"}else{if(c.type==="textarea"){a+="rows='10' cols='45'></textarea>"}}a+="</fieldset>";e=O(a).insertAfter("."+c.id+"-0");return e};aj=function(){var c=JSON.parse(sessionStorage.getItem("mms_profile"));if(c.roleID==="2"){F={type:"PUT",url:MMS.configObj.queue,data:O(ai).serialize(),dataType:"json",cache:true,success:function(d){O("#metadata-form").find("input[type=text], textarea").val("");O("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){O("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(F);return}var b=O(".pid").val();var a=O("#type").val();F={type:"PUT",url:MMS.configObj.repository,data:O(ai).serialize(),dataType:"json",cache:false,success:function(d){if(d.updated==="true"){F={type:"GET",url:MMS.configObj.repository,data:"pid="+b,dataType:"json",cache:true,success:function(f,e){O("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){O("div#actionFeedback").empty()},5000);location.hash="#header";return false;ah(f,b,e)}};MMS.utils.doAjax(F)}else{if(d.created==="true"){O("#metadata-form").find("input[type=text], textarea").val("");O("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){O("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(F)};R=function(a,c,b){a.preventDefault();F={type:"GET",url:MMS.configObj.repository,data:"pid="+c,dataType:"json",cache:false,success:function(d){ah(d,c,b)}};MMS.utils.doAjax(F)};ab=function(){var a=O(".pid").val();O(".pid").remove();O("#isPid").remove();O(".datecreated").remove();O(".datemodified").remove();O("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+a+".</h4>");setTimeout(function(){O("div#actionFeedback").remove()},10000)};L=function(){O(ai).validate({errorClass:"invalid",submitHandler:function(){aj()}})};H=function(a,b){a.preventDefault();var c=confirm("Are you sure you want to delete this record?");if(c){F={type:"POST",url:MMS.configObj.repository,data:"pid="+b,dataType:"json",cache:true,success:function(d){if(d.deleted==="true"){O("#search-forms").hide();O("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){O("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(F)}return false};ag=function(d,a){var c=[];for(var b in d){c.push(d[b])}return c.sort(function(f,g){var h=f[a];var e=g[a];return((h<e)?-1:((h>e)?1:0))})};X=function(a){MMS.counterObj.count=0;O("#search-results").empty();MMS.view.createView(K);if(a==="image"){var b=[];P=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));I(a);Z()}L();O(".current").html(a+" metadata");O("#clone-record").remove();O(Y).show();O(".optional_fields").show();O("#optional_fields").show();O("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};G=function(){O(Y).hide();O(".optional_fields").hide();O(".formType").on("click",function(a){X(O(this).attr("id"))})};return{getMetadata:function(a,c,b){R(a,c,b)},deleteMetadata:function(a,b){H(a,b)},removeClonedField:function(b,a){ad(b,a)},constructFieldEvent:function(b,a){Q(b,a)},cloneRecord:function(a){ab(a)},back:function(a){J(a)},createMetadataEditForm:function(b,c,a){ah(b,c,a)},appendOptionalField:function(a){V(a)},clearField:function(a){af(a)},loadForm:function(a){X(a)},init:function(){G()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(M){var D="#user",x="#user-form",P="#user-forms",J,z,y,A,E,O,w,N,B,v,H,L,F,I,K,C,G;G={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};E=function(){M(x).validate({errorClass:"invalid",submitHandler:function(){N()}})};z=function(){G.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(G);var b="";var h="";var f="";var d="";var c="";var a="";var e="";h+="<fieldset>";h+="<label>";h+="* First Name";h+="</label>";h+="<input id='firstName' name='firstName' type='text' class='required' />";h+="</fieldset>";f+="<fieldset>";f+="<label>";f+="* Last Name";f+="</label>";f+="<input id='lastName' name='lastName' type='text' class='required' />";f+="</fieldset>";d+="<fieldset>";d+="<label>";d+="* DU ID";d+="</label>";d+="<input id='duID' name='duID' type='text' class='required' />";d+="</fieldset>";F={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(i){a+="<fieldset>";a+="<label for='roleID'>* Roles</label>";a+="<select name='roleID' id='roleID' class='required'>";a+="<option value=''>---Assign a role--</option>";M.each(i,function(k,j){if(k!="3"){a+="<option value='"+k+"'>"+j+"</option>"}});a+="</select>";a+="</fieldset>";M(D).append(a)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){I={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(i){e+="<strong>* Assign a Collection</strong>";M.each(i,function(k,j){e+="<p><input id='"+j.collectionID+"' name='collections[]' type='radio' value='"+j.collectionID+"' /><label for='"+j.collectionID+"'>"+j.title+"</label></p>"});M(D).append(e)}};MMS.utils.doAjax(I)}else{e+="<input id='"+g.collectionID+"' name='collections[]' type='hidden' value='"+g.collectionID+"' />";b+=e}MMS.utils.doAjax(F);b+=h;b+=f;b+=d;M(D).append(b);E()};A=function(){G.footer="null";MMS.view.createView(G);v={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>First Name</th>";a+="<th>Last Name</th>";a+="<th>Role</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";M.each(b,function(d,c){a+="<tr>";a+="<td>"+c.firstName+"</td>";a+="<td>"+c.lastName+"</td>";a+="<td>"+c.roleName+"</td>";if(c.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+c.id+");'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";M(D).append(a)}};MMS.utils.doAjax(v)};y=function(a){var c="";var d="";var b="";var e="";G.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(G);M(".current").html("Edit User");K={type:"GET",url:MMS.configObj.users,data:"id="+a,dataType:"json",cache:false,async:false,success:function(f){c+="<input name='userID' type='hidden' value='"+a+"' />";c+="<fieldset>";c+="<label>";c+="* First Name";c+="</label>";c+="<input id='firstName' name='firstName' type='text' value='"+f[0].firstName+"' class='required' />";c+="</fieldset>";c+="<fieldset>";c+="<label>";c+="* Last Name";c+="</label>";c+="<input id='lastName' name='lastName' type='text' value='"+f[0].lastName+"' class='required' />";c+="</fieldset>";M(D).append(c);F={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(h){d+="<fieldset>";d+="<label for='roleID'>* Roles</label>";d+="<select name='roleID' id='roleID' class='required'>";d+="<option value=''>---Assign a role--</option>";M.each(h,function(j,i){if(f[0].roleID===j){d+="<option value='"+j+"' selected>"+i+"</option>"}else{if(j!="3"){d+="<option value='"+j+"'>"+i+"</option>"}}});d+="</select>";d+="</fieldset>";M(D).append(d)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){I={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(h){b+="<strong>* Assigned Collection</strong>";M.each(h,function(j,i){if(f[1].collectionID===i.collectionID){b+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' checked /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}else{b+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}})}};MMS.utils.doAjax(I)}else{b+="<input name='collectionID' type='hidden' value='"+g.collectionID+"' />"}M(D).append(b);MMS.utils.doAjax(F);e+="<label>";e+="isActive";e+="</label>";if(f[0].isActive=="1"){e+="<input id='isActive' name='isActive' type='checkbox' value='"+f[0].isActive+"' checked />"}else{e+="<input id='isActive' name='isActive' type='checkbox' value='"+f[0].isActive+"' />"}M(D).append(e)}};MMS.utils.doAjax(K);E()};N=function(){H={type:"PUT",url:MMS.configObj.users,data:M(x).serialize(),dataType:"json",cache:false,success:function(a){if(a.updated==="true"){A()}else{if(a.updated==="false"){alert("Error: Update failed.")}else{M("#user-form")[0].reset()}}}};MMS.utils.doAjax(H)};B=function(a){var b=confirm("Are you sure you want to delete this user?");if(b){L={type:"POST",url:MMS.configObj.users,data:"userID="+a,dataType:"json",cache:false,success:function(c){if(c.deleted==="true"){A()}else{if(c.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(L)}};J=function(){C={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(a){sessionStorage.setItem("mms_profile",JSON.stringify(a));var c=JSON.parse(sessionStorage.getItem("mms_profile"));var b=c.firstName+" "+c.lastName+" ("+c.roleName+")";M("#user-role").append(b)}};MMS.utils.doAjax(C)};O=function(a){if(a==="addUser"){z();M("#search-results").empty();M(".current").html("Add User")}else{if(a==="viewUsers"){A();M("#search-results").empty();M(".current").html("Users")}}};w=function(){M(P).hide();M("#addUser").on("click",function(a){O(M(this).attr("id"))});M("#viewUsers").on("click",function(a){O(M(this).attr("id"))})};return{init:function(){return w()},constructUserEditForm:function(a){return y(a)},deleteUserData:function(a){return B(a)},getSessionInfo:function(){return J()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(x){var v="#collection",m="#collection-form",p="#collection-forms",n,q,u,o,s,w,r,t;t={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};n=function(){MMS.view.createView(t);var d="";var e="";var f="";var c="";var a="";e+="<fieldset>";e+="<label>";e+="* Title";e+="</label>";e+="<input id='title' name='title' type='text' class='required' />";e+="</fieldset>";f+="<fieldset>";f+="<label>";f+="* Description";f+="</label>";f+="<input id='description' name='description' type='text' class='required' />";f+="</fieldset>";a+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";d+=e;d+=f;d+=a;x(v).append(d);var b={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(g){c+="<fieldset>";c+="<label>";c+="* Object Type";c+="</label>";c+="<br />";x.each(g,function(i,h){c+="<p><input id='"+h.objectType+"' name='objectType[]' type='checkbox' value='"+h.objectTypeID+"' /> "+h.objectType+"</p>"});c+="</fieldset>";x(v).append(c)}};MMS.utils.doAjax(b)};q=function(){MMS.view.createView(t);r={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Collection Name</th>";a+="<th>Description</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";x.each(b,function(d,c){a+="<tr>";a+="<td>"+c.title+"</td>";a+="<td>"+c.description+"</td>";if(c.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+c.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+c.collectionID+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";x(v).append(a)}};MMS.utils.doAjax(r)};w=function(){r={type:"PUT",url:MMS.configObj.collections,data:x(m).serialize(),dataType:"json",cache:false,success:function(a){x(m)[0].reset()}};MMS.utils.doAjax(r)};o=function(a){if(a==="addCollection"){n();x(".current").html("Add Collection")}else{if(a==="editCollection"){}else{if(a==="deleteCollection"){}else{if(a==="viewCollections"){q();x(".current").html("Collections")}}}}};s=function(){x(p).hide();x("#addCollection").on("click",function(a){o(x(this).attr("id"))});x("#viewCollections").on("click",function(a){o(x(this).attr("id"))});u()};u=function(){x(m).validate({errorClass:"invalid",submitHandler:function(){w()}})};return{init:function(){return s()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(o){var p,m,n,r,q=".module width_full",l="#login-form",k,j;p=function(){r={type:"POST",url:MMS.configObj.authenticate,data:o(l).serialize(),dataType:"json",cache:true,success:function(a){o(q).hide();m(a)}};o("h3#message").ajaxStart(function(){o("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(r)};m=function(a){if(a.isAuthenticated==="false"){o("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");o("#authenticate").removeAttr("disabled")}else{if(a.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};n=function(){o("#login-form").validate({errorClass:"invalid",submitHandler:function(){p()}})};j=function(){o("#logout").click(function(){r={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(a){if(a.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(r)});return false};k=function(){n();j()};return{init:function(){k()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(m){var q,p,o,s,n,v,x,r,t,u,w="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";u={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};q=function(a){m("#content").empty();a.preventDefault();o=m("input#quickSearch").val();o=MMS.utils.sanitizeInput(o);if(o===""){return m("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}s=m("#search_box").serialize();m("#search").empty();m("#actionFeedback").empty();r={type:"GET",url:MMS.configObj.search,data:m("#search_box").serialize(),dataType:"json",cache:true,success:function(b){if(b.error==500){m("#error").html(w)}else{m("#error").html("");MMS.view.createView(u);x(b)}}};MMS.utils.doAjax(r);return false};x=function(b){var e="";var a=[];var d="";var c=JSON.parse(sessionStorage.getItem("mms_profile"));m("#search_box")[0].reset();m("#search-message").text("You searched for: "+o);m(".current").html("Search Results");if(b.response.numFound===0){m("#search-forms").remove();m("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}e+="<div>";e+="<div>";e+="<table class='tablesorter' cellspacing='0'>";e+="<thead>";e+="<tr>";e+="<th>Records Found: "+b.response.numFound+"</th>";e+="<th>Actions</th>";e+="</tr>";e+="</thead>";e+="<tbody id='pages'>";m.each(b.response.docs,function(g,f){d+="<tr>";d+="<td width='85%'>";d+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";d+="<tr align='top'>";if(f.identifier_t[0]!==undefined){d+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+f.identifier_t[0]+"' alt='"+f.title_t[0]+"' border='1'></p></td>"}d+="<td width='40%' align='left'>";if(f.title_t!==undefined){d+="<p><strong>Title:</strong> "+f.title_t[0]+"</p>"}if(f.creator_t!==undefined){d+="<p><strong>Creator:</strong> "+f.creator_t[0]+"</p>"}d+="</td>";d+="</tr>";d+="</table>";d+="</td>";d+="<td width='28%'>";d+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+f.id+'", "search");\'>';if(c.roleID==="1"){d+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+f.id+"\"); return false;'>"}d+="</td>";d+="</tr>";a.push(d);d=""});e+="</tbody>";e+="</table>";e+="</div>";e+="</div>";m("#search").append(e);m("#search-results").show();MMS.pagination.init(a)};p=function(b){var a;m.each(b.spellcheck.suggestions,function(d,c){if(c!=="true"){if(c.suggestion!==undefined){m.each(c.suggestion,function(f,e){if(f===0){v=e.word.trim();a="<a href='#' id='didYouMeanSearch'>"+e.word.trim()+"</a>"}})}}});if(a!==undefined){m("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+a+"</h4>");m("#didYouMeanSearch").on("click",function(c){n()})}};n=function(){m("#search").empty();m("#searchActionFeedback").empty();var a=s.replace(o,v);o=v;r={type:"GET",url:MMS.configObj.search,data:a,dataType:"json",cache:true,success:function(b){if(b.error==500){m("#error").html(w)}else{m("#error").html("");x(b)}}};MMS.utils.doAjax(r)};t=function(){m("#search-forms").hide();m("form.quick_search").submit(function(a){q(a)})};return{init:function(){return t()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(x){var p,u=1,o,n=4,q,r,m,t,w,v,s;o=function(){return Math.ceil(m/n)};q=function(){x("div.pagination").empty();var a="";a+="<ul id='pagination-flickr'>";a+="<li><a href='#' onclick='MMS.pagination.previous("+u+")'>Previous</a></li>";for(var b=1;b<=o();b++){if(b!==u){if(o()<=20){a+="<li><a href='#' onclick='MMS.pagination.renderPage("+b+"); return false;'>"+b+"</a></li>"}}else{a+="<li class='active'>"+b+"</li>";u=b}}a+="<li><a href='#' onclick='MMS.pagination.next("+u+")'>Next</a></li>";a+="</ul>";x("div.pagination").append(a)};w=function(a){if(a<o()){var b=a+1;r(b)}};v=function(a){if(a>1){var b=a-1;r(b)}};r=function(a){u=a;var a=(a-1);q();x("#pages").empty();for(var b=(a)*n;b<((a)*n)+n;b++){x("#pages").append(p[b])}};s=function(a){p=a;m=a.length;r(1)};return{init:function(a){return s(a)},renderPage:function(a){return r(a)},next:function(a){return w(a)},previous:function(a){return v(a)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(i){var h,m,j,l,k,n;k={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};h=function(){MMS.utils.focusForm("#batch-ingest-forms");l={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(a){MMS.view.createView(k);m(a)}};MMS.utils.doAjax(l);return false};m=function(b){i(".current").html("Batch");if(b.length===0){i("#batch-ingest-forms").remove();i("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var a="";a+="<div>";a+="<div>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Batch Records</th>";a+="<th>Status</th>";a+="</tr>";a+="</thead>";a+="<tbody>";i.each(b,function(d,c){if(c.object!=""){a+="<input name='pids[]' type='hidden' value='"+c.pid+"' />"}a+="<tr>";a+="<td width='85%'>";a+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";a+="<tr align='top'>";if(c.object!=""){a+="<td width='30%' align='center'><p><img src='"+c.object+"' alt='"+c.title+"' border='1'></p></td>"}else{a+="<td width='30%' align='center'><p>No Object.</p></td>"}a+="<td width='40%' align='left'>";a+="<p><strong>Pid:</strong> "+c.pid+"</p>";a+="<p><strong>Title:</strong> "+c.title+"</p>";a+="<p><strong>Creator:</strong> "+c.creator+"</p>";a+="<p><strong>Identifier:</strong> "+c.identifier+"</p>";a+="</td>";a+="</tr>";a+="</table>";a+="</td>";if(c.object!=""){a+="<td width='28%'>complete.</td>"}else{a+="<td width='28%'>incomplete.</td>"}a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";i("#batch-ingest").empty().append(a);i("#batch-ingest-forms").show()};j=function(){l={type:"POST",url:MMS.configObj.batch,data:i("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(a){if(a.success===false){i("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},4000)}else{i("#batch-ingest").empty();i("#batch-ingest-forms").remove();i("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(l);return false};n=function(){i("#batch-ingest-forms").hide();i("#batch").on("click",function(a){h(i(this).attr("id"))})};return{init:function(){return n()},ingest:function(){return j()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(n){var k,o,j,p,i,m,l;i={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};k=function(){j={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(a){MMS.view.createView(i);o(a)}};MMS.utils.doAjax(j)};o=function(b){n(".current").html("Xml");var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>XML File</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";n.each(b,function(d,c){a+="<input name='xmlFiles[]' type='hidden' value='"+c.fileName+"' />";a+="<tr>";a+="<td>"+c.fileName+"</td>";a+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+c.fileName+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";n("#xml").append(a);n("#xml-forms").show()};p=function(a){var c=[];for(var b in a){c.push(a[b].name)}j={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:c},dataType:"json",cache:false,success:function(d){n("#xml-forms").remove();if(d.created==="true"){n("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){n("div#actionFeedback").empty()},5000)}else{n("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){n("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(j)};m=function(){MMS.view.createView(i);j={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(a){n("#xml").append(a)}};MMS.utils.doAjax(j)};l=function(){n("#view_xml").on("click",function(){k()})};return{init:function(){return l()},saveXml:function(a){return p(a)},createUploadArea:function(){return m()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(f){var h,j,i,g;h={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};j=function(){i={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(a){g(a)}};MMS.utils.doAjax(i);return false};g=function(b){f(".current").html("Review Queue");f("#search-results").empty();MMS.view.createView(h);if(b.length===0){f("#queue-forms").remove();f("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Pid</th>";a+="<th>Title</th>";a+="<th>Created By</th>";a+="<th>Date Created</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";f.each(b,function(d,c){a+="<tr>";a+="<td>"+c.pid+"</td>";a+="<td>"+c.title+"</td>";a+="<td>"+c.name+"</td>";a+="<td>"+c.timestamp+"</td>";a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+c.pid+'", "queue");\'</td>';a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";f("#search-results").empty();f("#queue").append(a)};return{getItems:function(){j()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(c){var d;d=function(b){var a="";a+='<div id="actionFeedback"></div>';a+='<div id="error"></div>';a+='<article id="'+b.articleID+'" class="'+b.articleClass+'">';a+="<header>";if(b.h3ID!=="null"){a+='<h3 id="'+b.h3ID+'">'+b.h3Value+"</h3>"}if(b.header!=="null"){a+=b.header}a+="</header>";a+='<form id="'+b.formID+'">';a+='<div id="'+b.divID+'" class="'+b.divClass+'"></div>';a+="<footer>";if(b.footer!=="null"){a+=b.footer}a+="</footer>";a+="</form>";a+="</article>";c("#"+b.content).empty().append(a)};return{createView:function(a){d(a)}}}(jQuery));$(function(){var b={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(b))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(b){var a=b.split("."),d=MMS,c;if(a[0]==="MMS"){a=a.slice(1)}for(c=0;c<a.length;c+=1){if(typeof d[a[c]]==="undefined"){d[a[c]]={}}d=d[a[c]]}return d};MMS.namespace("MMS.utils");MMS.utils=(function(c){var b,d,f,a,e;a={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};b=function(g){g.timeout=5000;g.error=function(h,i){c("#error").html("<h4 class='alert_error'>An error has occurred ("+i+").  Please contact library-support@du.edu for assistance.</h4>")};g.statusCode={403:function(){alert("Session expired");MMS.view.createView(a);c("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};c(document).ajaxStart(function(){c.fancybox.showLoading()});c(document).ajaxStop(function(){c.fancybox.hideLoading()});c.ajax(g)};f=function(){var g={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(h){if(typeof h===null||h.isFedoraUp!==200||h.isSolrUp!=="OK"){c("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");c("#authenticate").attr("disabled","disabled")}}};b(g)};e=function(g){return g.replace(/</g,"").replace(/>/g,"")};d=function(g){if(g!=="#metadata-forms"){c(".optional_fields").hide();c("#optional_fields").hide()}c("article:not("+g+", .breadcrumbs)").hide()};return{doAjax:function(g){b(g)},focusForm:function(g){d(g)},sanitizeInput:function(g){return e(g)},pingServices:function(){f()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(g){var b,u,w,t,p,e,x,q,m,y,f,h,k,i,o,d,n,a,j,v,s,c,l,r;r={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};h=function(){var z="";z+='<article id="controlled-vocabulary-section" class="module width_quarter">';z+="<header><h3>Controlled Vocabularies</h3></header>";z+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';z+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';z+="<p>";z+='<select id="vocab-options" name="vocab-options">';z+='<option value="ulan" selected>ULAN</option>';z+='<option value="aat">AAT</option>';z+='<option value="locnames">LC-Names</option>';z+='<option value="locsubjects">LC-Subjects</option>';z+='<option value="aloracreators">Alora-Creators</option>';z+='<option value="alorasubjects">Alora-Subjects</option>';z+="</select>&nbsp;";z+='<input id="getVocabularies" type="submit" value="Go" />';z+="</p>";z+="</div>";z+='<div id="vocabulary-results"></div>';z+="</article>";return z};c=function(){g("#search-results").empty();MMS.view.createView(r);k();s();g(".current").html("Creator");g("#controlled-vocabulary-form").show()};l=function(){g("#search-results").empty();MMS.view.createView(r);v();s();g(".current").html("Subject");g("#controlled-vocabulary-form").show()};s=function(){g("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){a()}})};a=function(){q={type:"POST",url:MMS.configObj.creatorapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(q)};j=function(){q={type:"POST",url:MMS.configObj.subjectapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(q)};v=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Subject";z+="</label>";z+="<input id='subject' name='subject[]' type='text' class='required' />";z+="</fieldset>";z+="<label>";g("#controlledvocabulary").append(z)};k=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Creator";z+="</label>";z+="<input id='creator' name='creator[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Creator Alternative";z+="</label>";z+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Nationality";z+="</label>";z+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Role";z+="</label>";z+="<input id='description-role' name='description.role[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Biography";z+="</label>";z+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Sex";z+="</label>";z+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Source";z+="</label>";z+="<input id='source' name='source' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Earliest Date";z+="</label>";z+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Latest Date";z+="</label>";z+="<input id='latestdates' name='latestdates' type='text' class='required' />";z+="</fieldset>";g("#controlledvocabulary").append(z)};m=function(){return sessionStorage.getItem("roleID")};b=function(){var A,z=g("input#vocabTerm").val(),B=g("select#vocab-options");z=MMS.utils.sanitizeInput(z);if(B.length>0){A=B.val()}q={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+z+"&option="+A,dataType:"json",cache:true,success:function(C){t(A,C)}};MMS.utils.doAjax(q)};y=function(C,z,B){var A="id="+C+"&vocabType="+z;if(B===undefined){var B=function(D){f(C,D)}}q={type:"GET",url:MMS.configObj.vocabUrl,data:A,dataType:"json",cache:true,success:B};MMS.utils.doAjax(q)};f=function(C,z){var A="",B=g("span#"+C+"-toggle").text();if(B==="( + )"){g("span#"+C+"-toggle").text("( - )");g("div#"+C+"-vocab-data").show()}else{if(B==="( - )"){g("div#"+C+"-vocab-data").hide();g("span#"+C+"-toggle").text("( + )")}}g.each(z,function(D,E){if(E.subject_id!==undefined){A+="<p><strong>Subject id:</strong> "+E.subject_id+"</p>"}if(E.nationalities!==""){A+="<p><strong>Nationality:</strong> "+E.nationalities+"</p>"}if(E.role_id!==""){A+="<p><strong>Role:</strong> "+E.role_id+"</p>"}if(E.preferred_terms_source_id!==""){A+="<p><strong>Source:</strong> "+E.preferred_terms_source_id+"</p>"}if(E.non_preferred_terms_term_text!==""){A+="<p><strong>Alternative name:</strong> "+E.non_preferred_terms_term_text+"</p>"}if(E.preferred_biographies_biography_text!==""){A+="<p><strong>Bio:</strong> "+E.preferred_biographies_biography_text+"</p>"}if(E.preferred_biographies_birth_date!==""){A+="<p><strong>Birth date:</strong> "+E.preferred_biographies_birth_date+"</p>"}if(E.preferred_biographies_death_date!==""){A+="<p><strong>Death date:</strong> "+E.preferred_biographies_death_date+"</p>"}if(E.preferred_biographies_sex!==""){A+="<p><strong>Sex:</strong> "+E.preferred_biographies_sex+"</p>"}});g("div#"+C+"-vocab-data").empty().append(A)};x=function(C,A,z){var B;while(A<50){B=g("#"+z+"-"+A).val();if(B===""){g("#"+z+"-"+A).val(C);break}A++}return B};e=function(F,H){var G,A,B,E,I,z=1,D=function(J){n(J)},C=g("select#vocab-options");if(m()=="2"){g("#"+F).removeAttr("disabled");g("#"+F).attr("readonly","readonly")}if(C.length>0){I=C.val()}if(I==="ulan"||I==="locnames"||I==="aloracreators"){if(I!=="locnames"){y(F,I,D)}G=g("#creator-0").val();if(G===""){x(H,0,"creator")}else{A=g("#coverage-spatial-repository-0").val(H);if(A===""){x(H,0,"coverage-spatial-repository")}else{x(H,z,"coverage-spatial-repository")}}}else{if(I==="aat"||I==="locsubjects"||I==="alorasubjects"){E=g("#coverage-temporal-styleperiod-0").val();if(E===""){x(H,0,"coverage-temporal-styleperiod")}else{E=x(H,z,"coverage-temporal-styleperiod")}if(E===undefined){B=g("#subject-0").val();if(B===""){x(H,0,"subject")}else{x(H,z,"subject")}}}}};n=function(z){var A="";g.each(z,function(B,C){A+='<input name="creator.alternative[]" type="hidden" value="'+C.non_preferred_terms_term_text+'" />';A+='<input name="description.creatorbio[]" type="hidden" value="'+C.preferred_biographies_biography_text+'" />';A+='<input name="description.nationality[]" type="hidden" value="'+C.nationalities+'" />';A+='<input name="description.role[]" type="hidden" value="'+C.role_id+'" />';A+='<input name="description.lifedates[]" type="hidden" value="'+C.preferred_biographies_birth_date+"-"+C.preferred_biographies_death_date+'" />';A+='<input name="source[]" type="hidden" value="'+C.preferred_terms_source_id+'" />'});g("div#metadata").append(A)};t=function(B,C){var z,A="";if(B==="ulan"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+u+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"ulan\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="aat"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+u+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="locnames"||B==="locsubjects"){z=C.loc;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+u+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+u+", $(this).text());return false;'>"+C.loc[D].title+"</a><br /><a href='#'>"+E.id+"</a></li></ul></p>"})}else{if(B==="aloracreators"||B==="alorasubjects"){z=C.local;if(z.message!==undefined){A+="<p><ul><li>No results found.</li></ul></p>";g("div#vocabulary-results").empty().append(A);return}g.each(z,function(D,E){if(B==="aloracreators"){A+="<p><ul><li><a href='#' id='"+u+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"local\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{A+="<p><ul><li><a href='#' id='"+u+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}g("div#vocabulary-results").empty().append(A)};p=function(){g("#controlled-vocabulary-section").show();var z=h();g("#content").append(z);g("input#vocabTerm").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("select#vocab-options").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("input#getVocabularies").on("click",function(){b()})};o=function(){g("select#type-arttypes").val("");g("select#type-timeperiods").val("");g("select#type-instructors").val("")};i=function(C){var z=["arttypes","timeperiods","instructors"],B={},A;if(C===undefined){C=function(D){d(D)}}for(A=0;A<z.length;A++){B.type="GET";B.url=MMS.configObj.vocabUrl;B.data="vocabType="+z[A];B.dataType="json";B.cache=true;B.success=C;MMS.utils.doAjax(B)}};d=function(B){var B=g.parseJSON(B);var C;var E;var D=sessionStorage.getItem("arttypes");var A=sessionStorage.getItem("timeperiods");var z=sessionStorage.getItem("instructors");C="<option value=''>---Select an term---</option>";g.each(B,function(F,G){if(G.type){E=G.type}if(G.term===D||G.term===A||G.term===z){C+="<option value='"+G.term+"' selected>"+G.term+"</option>"}else{C+="<option value='"+G.term+"'>"+G.term+"</option>"}});g("select#type-"+E).html(C)};w=function(){g("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){b()},displayControlledVocabulariesBox:function(z,A){p(z,A)},selectVocabularyTerm:function(A,z){e(A,z)},getTermData:function(A,z){y(A,z)},getLists:function(){i()},resetLists:function(){o()},loadCreatorForm:function(){c()},loadSubjectForm:function(){l()},init:function(){w()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(D){var u,w,c,k,f,C,s="#metadata",b="#metadata-form",l="#metadata-forms",B,A,d,h,p,E,j,g,t,a,m,y,z,q,x,r,i,n,v,e,o;u={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};w=function(G){var F=d(r,"displayOrder");D.each(F,function(H,I){h=B(I);h.appendTo(s)});D(s).append("<input name='objectType' type='hidden' value='"+G+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};n=function(G){var H;var F;if(G==="queue"){F="Back to Review Queue"}else{if(G==="search"){D("#search-results").hide();F="Back to Search Results"}}H="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+G+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+F+"</a>";return H};v=function(F){if(F==="queue"){MMS.queue.getItems()}else{if(F==="search"){D("#search-results").show();D("#content").empty()}}D("#clone-record").empty();D("#controlled-vocabulary-section").hide();return};c=function(H,I,M){var F=100,K="",L,G;D(".current").html("Edit Metadata");D(s).empty();K+="<div id='edit-mode'></div>";K+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";K+="<fieldset id='isPid'>";K+="<label>pid</label>";K+="<input type='text' value='"+I+"'  disabled />";K+="</fieldset>";if(M==="queue"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}else{if(M==="search"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}}r=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var J=d(r,"displayOrder");D.each(J,function(O,P){D.each(H,function(Q,R){if(P.element===Q){L=Q.replace(".","-");if(typeof R==="string"){K+="<fieldset class='"+L+"-0'>";if(P.repeat==="true"){K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+Q+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+Q+"'><span>Add</span></a></span></label>"}else{K+="<label>"+P.label+"</label>"}if(P.type==="select"){if(P.required==="true"){var S="class='required"}if(P.element==="type.arttype"){sessionStorage.setItem("arttypes",R)}else{if(P.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",R)}else{if(P.element==="instructor"){sessionStorage.setItem("instructors",R)}}}K+="<select name='"+P.element+"[]' id='"+P.id+"' "+S+"'></select>"}if(P.type==="text"){K+="<input id='"+Q+"-"+F+"' name='"+Q+"[]' type='text' value='"+R+"' "+S+" />"}if(P.type==="textarea"){K+="<textarea id='"+Q+"-"+F+"' name='"+Q+"[]' rows='7' cols='55' "+S+">"+R+"</textarea> "}K+="</fieldset>"}if(typeof R==="object"){D.each(R,function(U,T){F++;if(F>101){K+="<fieldset class='"+L+"-"+F+"'>"}else{K+="<fieldset class='"+L+"-0'>"}if(P.repeat==="true"){if(F>101){K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+Q+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+Q+"'><span>Del</span></a></span></label>"}else{K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+Q+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+Q+"'><span>Add</span></a></span></label>"}}else{K+="<label>"+P.label+"</label>"}if(P.type==="text"){K+="<input id='"+Q+"-"+F+"' name='"+Q+"[]' type='text' value='"+T+"' "+S+" />"}if(P.type==="textarea"){K+="<textarea id='"+Q+"-"+F+"' name='"+Q+"[]' rows='7' cols='55' "+S+">"+T+"</textarea> "}K+="</fieldset>"})}}})});D.each(H,function(O,P){if(O==="collection"){K+="<input id='"+O+"-0' name='collection' type='hidden' value='"+P+"' />"}else{if(O==="identifier.system"){K+="<input id='"+O+"' class='pid' name='pid' type='hidden' value='"+P+"' />"}else{if(O==="identifier.legacy"){K+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+P+"' />"}else{if(O==="identifier.master"){K+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+P+"' />"}else{if(O==="objectType"){G=P;K+="<input name='"+O+"' type='hidden' value='"+P+"' />"}else{if(O==="date.created"){K+="<fieldset>";K+="<label class='datecreated'>"+O+"</label>";K+="<input class='datecreated' type='text' value='"+P+"' disabled />";K+="<input class='datecreated' name='"+O+"[]' type='hidden' value='"+P+"'/>";K+="</fieldset>"}else{if(O==="date.modified"){K+="<fieldset>";K+="<label class='datemodified'>"+O+"</label>";K+="<input class='datemodified' type='text' value='"+P+"' disabled />";K+="</fieldset>"}}}}}}}});D.each(J,function(O,P){if(P.required==="false"){K+="<fieldset class='"+P.id+"-0' style='display:none;'>";K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+P.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+P.element+"'><span>Del</span></a></span></label>";if(P.type==="text"){K+="<input id='"+P.id+"-0' name='"+P.element+"[]' type='"+P.type+"' value='' />"}else{if(P.type==="textarea"){K+="<textarea id='"+P.id+"-0' name='"+P.element+"[]' rows='7' cols='55'></textarea> "}}K+="</fieldset>"}});u.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(u);var N=n(M);D("#pid").append(N);D(s).append(K);t();D(".optional_fields").show();D("#optional_fields").show();D(l).show();k()};C=function(F,G){var J,N=G.split("-"),M=N[N.length-2],K,I,H,L=[];if(N[N.length-1]==="clone"){N.pop();N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");I=I.replace(".","-");J=function(){D.each(r,function(O,P){H=P.element.replace(".","-");H=H.replace(".","-");if(I===H){f(F,P)}})};E(J)}else{if(N[N.length-1]==="remove"){N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");if(M==="0"){J=function(){D("#"+I).val("");D("."+I).hide()}}else{J=function(){D("."+G).remove()}}j(J)}}};g=function(F,G){F.preventDefault();F.stopPropagation();G=G.replace("-remove","");D("."+G).remove()};j=function(F){F()};E=function(F){F()};e=function(F){F=F.replace("-clear","");D("#"+F).val("")};B=function(I){var G=JSON.parse(sessionStorage.getItem("mms_profile"));var J="";var H="";if(I.type==="select"){if(I.required==="true"){var F="class='required"}J+="<fieldset class='"+I.id+"-"+MMS.counterObj.count+"'>";J+="<label for='"+I.id+"'>"+I.label+"</label>";J+="<select name='"+I.element+"[]' id='"+I.id+"' "+F+"'></select>";J+="</fieldset>"}else{if(I.vocabulary==="true"&&G.roleID=="2"){H="&nbsp;&nbsp;<a href='#' id='"+I.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}J+="<fieldset class='"+I.id+"-"+MMS.counterObj.count+"'>";J+="<label>";J+=I.label;if(I.repeat==="true"){J+="<span class='clone'><a href='#' id='"+I.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+I.element+"'><span>Add</span></a></span>"}else{if(I.repeat==="false"){J+="<a href='#' id='"+I.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(I.required==="false"){J+="<span class='remove'><a href='#' id='"+I.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+I.element+"'><span>Del</span></a></span>"}J+="</label>"+H;if(I.type==="text"){J+="<input "}else{if(I.type==="textarea"){J+="<textarea "}}J+="id='"+I.id+"-"+MMS.counterObj.count+"'";J+="name='"+I.element+"[]' ";J+="type='"+I.type+"' ";if(I.vocabulary==="true"&&G.roleID=="2"){J+="disabled='disbled'"}J+="class='";if(I.required==="true"){J+="required"}J+="'";if(I.type==="text"){J+="/>"}else{if(I.type==="textarea"){J+="rows='14' cols='45'></textarea>"}}J+="</fieldset>"}if(I.required==="true"){p=D(J)}else{if(I.required==="false"){p=D(J).hide()}}return p};k=function(){D("#optional_fields").empty();D.each(r,function(F,G){if(G.required==="false"){var H="<li class='icn_categories'><a href='#'>"+G.label+"</a></li>";A=D(H).on("click","a",function(I){I.preventDefault();MMS.metadata.appendOptionalField(G)});A.appendTo("#optional_fields")}})};o=function(F){D("."+F.id+"-0").show();location.hash="#"+F.id+"-0"};f=function(I,H){I.preventDefault();I.stopPropagation();var G=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var F="";var J="";J+="<fieldset class='"+H.id+"-"+MMS.counterObj.count+"'>";J+="<label>";J+=H.label;J+="&nbsp;<span class='remove'><a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+H.element+"'><span>Del</span></a></span>";if(H.vocabulary==="true"){}J+="</label>";if(H.type==="text"){J+="<input "}else{if(H.type==="textarea"){J+="<textarea "}}J+="id='"+H.id+"-"+MMS.counterObj.count+"'";J+="name='"+H.element+"[]' ";J+="type='"+H.type+"' ";if(H.vocabulary==="true"&&G.roleID=="2"){J+="disabled='disabled'"}J+="class='none ";J+="'";if(H.type==="text"){J+="/>"}else{if(H.type==="textarea"){J+="rows='10' cols='45'></textarea>"}}J+="</fieldset>";F=D(J).insertAfter("."+H.id+"-0");return F};a=function(){var F=JSON.parse(sessionStorage.getItem("mms_profile"));if(F.roleID==="2"){z={type:"PUT",url:MMS.configObj.queue,data:D(b).serialize(),dataType:"json",cache:true,success:function(I){D("#metadata-form").find("input[type=text], textarea").val("");D("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){D("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(z);return}var G=D(".pid").val();var H=D("#type").val();z={type:"PUT",url:MMS.configObj.repository,data:D(b).serialize(),dataType:"json",cache:false,success:function(I){if(I.updated==="true"){z={type:"GET",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:true,success:function(J,K){D("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){D("div#actionFeedback").empty()},5000);location.hash="#header";return false;c(J,G,K)}};MMS.utils.doAjax(z)}else{if(I.created==="true"){D("#metadata-form").find("input[type=text], textarea").val("");D("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){D("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(z)};q=function(H,F,G){H.preventDefault();z={type:"GET",url:MMS.configObj.repository,data:"pid="+F,dataType:"json",cache:false,success:function(I){c(I,F,G)}};MMS.utils.doAjax(z)};i=function(){var F=D(".pid").val();D(".pid").remove();D("#isPid").remove();D(".datecreated").remove();D(".datemodified").remove();D("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+F+".</h4>");setTimeout(function(){D("div#actionFeedback").remove()},10000)};t=function(){D(b).validate({errorClass:"invalid",submitHandler:function(){a()}})};x=function(H,G){H.preventDefault();var F=confirm("Are you sure you want to delete this record?");if(F){z={type:"POST",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:true,success:function(I){if(I.deleted==="true"){D("#search-forms").hide();D("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){D("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(z)}return false};d=function(F,I){var G=[];for(var H in F){G.push(F[H])}return G.sort(function(K,J){var M=K[I];var L=J[I];return((M<L)?-1:((M>L)?1:0))})};m=function(G){MMS.counterObj.count=0;D("#search-results").empty();MMS.view.createView(u);if(G==="image"){var F=[];r=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));w(G);k()}t();D(".current").html(G+" metadata");D("#clone-record").remove();D(l).show();D(".optional_fields").show();D("#optional_fields").show();D("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};y=function(){D(l).hide();D(".optional_fields").hide();D(".formType").on("click",function(F){m(D(this).attr("id"))})};return{getMetadata:function(H,F,G){q(H,F,G)},deleteMetadata:function(G,F){x(G,F)},removeClonedField:function(F,G){g(F,G)},constructFieldEvent:function(F,G){C(F,G)},cloneRecord:function(F){i(F)},back:function(F){v(F)},createMetadataEditForm:function(G,F,H){c(G,F,H)},appendOptionalField:function(F){o(F)},clearField:function(F){e(F)},loadForm:function(F){m(F)},init:function(){y()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(d){var m="#user",s="#user-form",a="#user-forms",g,q,r,p,l,b,t,c,o,u,i,e,k,h,f,n,j;j={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};l=function(){d(s).validate({errorClass:"invalid",submitHandler:function(){c()}})};q=function(){j.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(j);var x="";var B="";var z="";var v="";var w="";var A="";var C="";B+="<fieldset>";B+="<label>";B+="* First Name";B+="</label>";B+="<input id='firstName' name='firstName' type='text' class='required' />";B+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' class='required' />";z+="</fieldset>";v+="<fieldset>";v+="<label>";v+="* DU ID";v+="</label>";v+="<input id='duID' name='duID' type='text' class='required' />";v+="</fieldset>";k={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(D){A+="<fieldset>";A+="<label for='roleID'>* Roles</label>";A+="<select name='roleID' id='roleID' class='required'>";A+="<option value=''>---Assign a role--</option>";d.each(D,function(E,F){if(E!="3"){A+="<option value='"+E+"'>"+F+"</option>"}});A+="</select>";A+="</fieldset>";d(m).append(A)}};var y=JSON.parse(sessionStorage.getItem("mms_profile"));if(y.roleID=="3"){h={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(D){C+="<strong>* Assign a Collection</strong>";d.each(D,function(E,F){C+="<p><input id='"+F.collectionID+"' name='collections[]' type='radio' value='"+F.collectionID+"' /><label for='"+F.collectionID+"'>"+F.title+"</label></p>"});d(m).append(C)}};MMS.utils.doAjax(h)}else{C+="<input id='"+y.collectionID+"' name='collections[]' type='hidden' value='"+y.collectionID+"' />";x+=C}MMS.utils.doAjax(k);x+=B;x+=z;x+=v;d(m).append(x);l()};p=function(){j.footer="null";MMS.view.createView(j);u={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(v){var w="";w+="<div class='tab_container'>";w+="<div id='tab1' class='tab_content'>";w+="<table class='tablesorter' cellspacing='0'>";w+="<thead>";w+="<tr>";w+="<th>First Name</th>";w+="<th>Last Name</th>";w+="<th>Role</th>";w+="<th>Active</th>";w+="<th>Actions</th>";w+="</tr>";w+="</thead>";w+="<tbody>";d.each(v,function(y,x){w+="<tr>";w+="<td>"+x.firstName+"</td>";w+="<td>"+x.lastName+"</td>";w+="<td>"+x.roleName+"</td>";if(x.isActive==="1"){w+="<td>Yes</td>"}else{w+="<td>No</td>"}w+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+x.id+");'></td>";w+="</tr>"});w+="</tbody>";w+="</table>";w+="</div>";w+="</div>";d(m).append(w)}};MMS.utils.doAjax(u)};r=function(x){var v="";var z="";var w="";var y="";j.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(j);d(".current").html("Edit User");f={type:"GET",url:MMS.configObj.users,data:"id="+x,dataType:"json",cache:false,async:false,success:function(A){v+="<input name='userID' type='hidden' value='"+x+"' />";v+="<fieldset>";v+="<label>";v+="* First Name";v+="</label>";v+="<input id='firstName' name='firstName' type='text' value='"+A[0].firstName+"' class='required' />";v+="</fieldset>";v+="<fieldset>";v+="<label>";v+="* Last Name";v+="</label>";v+="<input id='lastName' name='lastName' type='text' value='"+A[0].lastName+"' class='required' />";v+="</fieldset>";d(m).append(v);k={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(C){z+="<fieldset>";z+="<label for='roleID'>* Roles</label>";z+="<select name='roleID' id='roleID' class='required'>";z+="<option value=''>---Assign a role--</option>";d.each(C,function(D,E){if(A[0].roleID===D){z+="<option value='"+D+"' selected>"+E+"</option>"}else{if(D!="3"){z+="<option value='"+D+"'>"+E+"</option>"}}});z+="</select>";z+="</fieldset>";d(m).append(z)}};var B=JSON.parse(sessionStorage.getItem("mms_profile"));if(B.roleID=="3"){h={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(C){w+="<strong>* Assigned Collection</strong>";d.each(C,function(D,E){if(A[1].collectionID===E.collectionID){w+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' checked /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}else{w+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}})}};MMS.utils.doAjax(h)}else{w+="<input name='collectionID' type='hidden' value='"+B.collectionID+"' />"}d(m).append(w);MMS.utils.doAjax(k);y+="<label>";y+="isActive";y+="</label>";if(A[0].isActive=="1"){y+="<input id='isActive' name='isActive' type='checkbox' value='"+A[0].isActive+"' checked />"}else{y+="<input id='isActive' name='isActive' type='checkbox' value='"+A[0].isActive+"' />"}d(m).append(y)}};MMS.utils.doAjax(f);l()};c=function(){i={type:"PUT",url:MMS.configObj.users,data:d(s).serialize(),dataType:"json",cache:false,success:function(v){if(v.updated==="true"){p()}else{if(v.updated==="false"){alert("Error: Update failed.")}else{d("#user-form")[0].reset()}}}};MMS.utils.doAjax(i)};o=function(w){var v=confirm("Are you sure you want to delete this user?");if(v){e={type:"POST",url:MMS.configObj.users,data:"userID="+w,dataType:"json",cache:false,success:function(x){if(x.deleted==="true"){p()}else{if(x.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(e)}};g=function(){n={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(x){sessionStorage.setItem("mms_profile",JSON.stringify(x));var v=JSON.parse(sessionStorage.getItem("mms_profile"));var w=v.firstName+" "+v.lastName+" ("+v.roleName+")";d("#user-role").append(w)}};MMS.utils.doAjax(n)};b=function(v){if(v==="addUser"){q();d("#search-results").empty();d(".current").html("Add User")}else{if(v==="viewUsers"){p();d("#search-results").empty();d(".current").html("Users")}}};t=function(){d(a).hide();d("#addUser").on("click",function(v){b(d(this).attr("id"))});d("#viewUsers").on("click",function(v){b(d(this).attr("id"))})};return{init:function(){return t()},constructUserEditForm:function(v){return r(v)},deleteUserData:function(v){return o(v)},getSessionInfo:function(){return g()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(a){var c="#collection",l="#collection-form",i="#collection-forms",k,h,d,j,f,b,g,e;e={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};k=function(){MMS.view.createView(e);var p="";var o="";var n="";var q="";var m="";o+="<fieldset>";o+="<label>";o+="* Title";o+="</label>";o+="<input id='title' name='title' type='text' class='required' />";o+="</fieldset>";n+="<fieldset>";n+="<label>";n+="* Description";n+="</label>";n+="<input id='description' name='description' type='text' class='required' />";n+="</fieldset>";m+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";p+=o;p+=n;p+=m;a(c).append(p);var r={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(s){q+="<fieldset>";q+="<label>";q+="* Object Type";q+="</label>";q+="<br />";a.each(s,function(t,u){q+="<p><input id='"+u.objectType+"' name='objectType[]' type='checkbox' value='"+u.objectTypeID+"' /> "+u.objectType+"</p>"});q+="</fieldset>";a(c).append(q)}};MMS.utils.doAjax(r)};h=function(){MMS.view.createView(e);g={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(n){var m="";m+="<div class='tab_container'>";m+="<div id='tab1' class='tab_content'>";m+="<table class='tablesorter' cellspacing='0'>";m+="<thead>";m+="<tr>";m+="<th>Collection Name</th>";m+="<th>Description</th>";m+="<th>Active</th>";m+="<th>Actions</th>";m+="</tr>";m+="</thead>";m+="<tbody>";a.each(n,function(o,p){m+="<tr>";m+="<td>"+p.title+"</td>";m+="<td>"+p.description+"</td>";if(p.isActive==="1"){m+="<td>Yes</td>"}else{m+="<td>No</td>"}m+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+p.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+p.collectionID+"\"); return false;'></td>";m+="</tr>"});m+="</tbody>";m+="</table>";m+="</div>";m+="</div>";a(c).append(m)}};MMS.utils.doAjax(g)};b=function(){g={type:"PUT",url:MMS.configObj.collections,data:a(l).serialize(),dataType:"json",cache:false,success:function(m){a(l)[0].reset()}};MMS.utils.doAjax(g)};j=function(m){if(m==="addCollection"){k();a(".current").html("Add Collection")}else{if(m==="editCollection"){}else{if(m==="deleteCollection"){}else{if(m==="viewCollections"){h();a(".current").html("Collections")}}}}};f=function(){a(i).hide();a("#addCollection").on("click",function(m){j(a(this).attr("id"))});a("#viewCollections").on("click",function(m){j(a(this).attr("id"))});d()};d=function(){a(l).validate({errorClass:"invalid",submitHandler:function(){b()}})};return{init:function(){return f()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(d){var c,f,e,a,b=".module width_full",g="#login-form",h,i;c=function(){a={type:"POST",url:MMS.configObj.authenticate,data:d(g).serialize(),dataType:"json",cache:true,success:function(j){d(b).hide();f(j)}};d("h3#message").ajaxStart(function(){d("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(a)};f=function(j){if(j.isAuthenticated==="false"){d("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");d("#authenticate").removeAttr("disabled")}else{if(j.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};e=function(){d("#login-form").validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){d("#logout").click(function(){a={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(j){if(j.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(a)});return false};h=function(){e();i()};return{init:function(){h()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(l){var h,i,j,f,k,c,a,g,e,d,b="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";d={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};h=function(m){l("#content").empty();m.preventDefault();j=l("input#quickSearch").val();j=MMS.utils.sanitizeInput(j);if(j===""){return l("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}f=l("#search_box").serialize();l("#search").empty();l("#actionFeedback").empty();g={type:"GET",url:MMS.configObj.search,data:l("#search_box").serialize(),dataType:"json",cache:true,success:function(n){if(n.error==500){l("#error").html(b)}else{l("#error").html("");MMS.view.createView(d);a(n)}}};MMS.utils.doAjax(g);return false};a=function(q){var n="";var m=[];var o="";var p=JSON.parse(sessionStorage.getItem("mms_profile"));l("#search_box")[0].reset();l("#search-message").text("You searched for: "+j);l(".current").html("Search Results");if(q.response.numFound===0){l("#search-forms").remove();l("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}n+="<div>";n+="<div>";n+="<table class='tablesorter' cellspacing='0'>";n+="<thead>";n+="<tr>";n+="<th>Records Found: "+q.response.numFound+"</th>";n+="<th>Actions</th>";n+="</tr>";n+="</thead>";n+="<tbody id='pages'>";l.each(q.response.docs,function(r,s){o+="<tr>";o+="<td width='85%'>";o+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";o+="<tr align='top'>";if(s.identifier_t[0]!==undefined){o+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+s.identifier_t[0]+"' alt='"+s.title_t[0]+"' border='1'></p></td>"}o+="<td width='40%' align='left'>";if(s.title_t!==undefined){o+="<p><strong>Title:</strong> "+s.title_t[0]+"</p>"}if(s.creator_t!==undefined){o+="<p><strong>Creator:</strong> "+s.creator_t[0]+"</p>"}o+="</td>";o+="</tr>";o+="</table>";o+="</td>";o+="<td width='28%'>";o+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+s.id+'", "search");\'>';if(p.roleID==="1"){o+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+s.id+"\"); return false;'>"}o+="</td>";o+="</tr>";m.push(o);o=""});n+="</tbody>";n+="</table>";n+="</div>";n+="</div>";l("#search").append(n);l("#search-results").show();MMS.pagination.init(m)};i=function(n){var m;l.each(n.spellcheck.suggestions,function(o,p){if(p!=="true"){if(p.suggestion!==undefined){l.each(p.suggestion,function(q,r){if(q===0){c=r.word.trim();m="<a href='#' id='didYouMeanSearch'>"+r.word.trim()+"</a>"}})}}});if(m!==undefined){l("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+m+"</h4>");l("#didYouMeanSearch").on("click",function(o){k()})}};k=function(){l("#search").empty();l("#searchActionFeedback").empty();var m=f.replace(j,c);j=c;g={type:"GET",url:MMS.configObj.search,data:m,dataType:"json",cache:true,success:function(n){if(n.error==500){l("#error").html(b)}else{l("#error").html("");a(n)}}};MMS.utils.doAjax(g)};e=function(){l("#search-forms").hide();l("form.quick_search").submit(function(m){h(m)})};return{init:function(){return e()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(a){var i,d=1,j,k=4,h,g,l,e,b,c,f;j=function(){return Math.ceil(l/k)};h=function(){a("div.pagination").empty();var m="";m+="<ul id='pagination-flickr'>";m+="<li><a href='#' onclick='MMS.pagination.previous("+d+")'>Previous</a></li>";for(var n=1;n<=j();n++){if(n!==d){if(j()<=20){m+="<li><a href='#' onclick='MMS.pagination.renderPage("+n+"); return false;'>"+n+"</a></li>"}}else{m+="<li class='active'>"+n+"</li>";d=n}}m+="<li><a href='#' onclick='MMS.pagination.next("+d+")'>Next</a></li>";m+="</ul>";a("div.pagination").append(m)};b=function(m){if(m<j()){var n=m+1;g(n)}};c=function(m){if(m>1){var n=m-1;g(n)}};g=function(m){d=m;var m=(m-1);h();a("#pages").empty();for(var n=(m)*k;n<((m)*k)+k;n++){a("#pages").append(i[n])}};f=function(m){i=m;l=m.length;g(1)};return{init:function(m){return f(m)},renderPage:function(m){return g(m)},next:function(m){return b(m)},previous:function(m){return c(m)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(a){var b,d,g,e,f,c;f={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};b=function(){MMS.utils.focusForm("#batch-ingest-forms");e={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(h){MMS.view.createView(f);d(h)}};MMS.utils.doAjax(e);return false};d=function(h){a(".current").html("Batch");if(h.length===0){a("#batch-ingest-forms").remove();a("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var i="";i+="<div>";i+="<div>";i+="<table class='tablesorter' cellspacing='0'>";i+="<thead>";i+="<tr>";i+="<th>Batch Records</th>";i+="<th>Status</th>";i+="</tr>";i+="</thead>";i+="<tbody>";a.each(h,function(j,k){if(k.object!=""){i+="<input name='pids[]' type='hidden' value='"+k.pid+"' />"}i+="<tr>";i+="<td width='85%'>";i+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";i+="<tr align='top'>";if(k.object!=""){i+="<td width='30%' align='center'><p><img src='"+k.object+"' alt='"+k.title+"' border='1'></p></td>"}else{i+="<td width='30%' align='center'><p>No Object.</p></td>"}i+="<td width='40%' align='left'>";i+="<p><strong>Pid:</strong> "+k.pid+"</p>";i+="<p><strong>Title:</strong> "+k.title+"</p>";i+="<p><strong>Creator:</strong> "+k.creator+"</p>";i+="<p><strong>Identifier:</strong> "+k.identifier+"</p>";i+="</td>";i+="</tr>";i+="</table>";i+="</td>";if(k.object!=""){i+="<td width='28%'>complete.</td>"}else{i+="<td width='28%'>incomplete.</td>"}i+="</tr>"});i+="</tbody>";i+="</table>";i+="</div>";i+="</div>";a("#batch-ingest").empty().append(i);a("#batch-ingest-forms").show()};g=function(){e={type:"POST",url:MMS.configObj.batch,data:a("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(h){if(h.success===false){a("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){a("div#actionFeedback").empty()},4000)}else{a("#batch-ingest").empty();a("#batch-ingest-forms").remove();a("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){a("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(e);return false};c=function(){a("#batch-ingest-forms").hide();a("#batch").on("click",function(h){b(a(this).attr("id"))})};return{init:function(){return c()},ingest:function(){return g()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(e){var h,d,a,c,b,f,g;b={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};h=function(){a={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(i){MMS.view.createView(b);d(i)}};MMS.utils.doAjax(a)};d=function(i){e(".current").html("Xml");var j="";j+="<div class='tab_container'>";j+="<div id='tab1' class='tab_content'>";j+="<table class='tablesorter' cellspacing='0'>";j+="<thead>";j+="<tr>";j+="<th>XML File</th>";j+="<th>Actions</th>";j+="</tr>";j+="</thead>";j+="<tbody>";e.each(i,function(k,l){j+="<input name='xmlFiles[]' type='hidden' value='"+l.fileName+"' />";j+="<tr>";j+="<td>"+l.fileName+"</td>";j+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+l.fileName+"\"); return false;'></td>";j+="</tr>"});j+="</tbody>";j+="</table>";j+="</div>";j+="</div>";e("#xml").append(j);e("#xml-forms").show()};c=function(k){var i=[];for(var j in k){i.push(k[j].name)}a={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:i},dataType:"json",cache:false,success:function(l){e("#xml-forms").remove();if(l.created==="true"){e("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){e("div#actionFeedback").empty()},5000)}else{e("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){e("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(a)};f=function(){MMS.view.createView(b);a={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(i){e("#xml").append(i)}};MMS.utils.doAjax(a)};g=function(){e("#view_xml").on("click",function(){h()})};return{init:function(){return g()},saveXml:function(i){return c(i)},createUploadArea:function(){return f()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(b){var e,c,d,a;e={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};c=function(){d={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(f){a(f)}};MMS.utils.doAjax(d);return false};a=function(f){b(".current").html("Review Queue");b("#search-results").empty();MMS.view.createView(e);if(f.length===0){b("#queue-forms").remove();b("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var g="";g+="<div class='tab_container'>";g+="<div id='tab1' class='tab_content'>";g+="<table class='tablesorter' cellspacing='0'>";g+="<thead>";g+="<tr>";g+="<th>Pid</th>";g+="<th>Title</th>";g+="<th>Created By</th>";g+="<th>Date Created</th>";g+="<th>Actions</th>";g+="</tr>";g+="</thead>";g+="<tbody>";b.each(f,function(h,i){g+="<tr>";g+="<td>"+i.pid+"</td>";g+="<td>"+i.title+"</td>";g+="<td>"+i.name+"</td>";g+="<td>"+i.timestamp+"</td>";g+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+i.pid+'", "queue");\'</td>';g+="</tr>"});g+="</tbody>";g+="</table>";g+="</div>";g+="</div>";b("#search-results").empty();b("#queue").append(g)};return{getItems:function(){c()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(b){var a;a=function(c){var d="";d+='<div id="actionFeedback"></div>';d+='<div id="error"></div>';d+='<article id="'+c.articleID+'" class="'+c.articleClass+'">';d+="<header>";if(c.h3ID!=="null"){d+='<h3 id="'+c.h3ID+'">'+c.h3Value+"</h3>"}if(c.header!=="null"){d+=c.header}d+="</header>";d+='<form id="'+c.formID+'">';d+='<div id="'+c.divID+'" class="'+c.divClass+'"></div>';d+="<footer>";if(c.footer!=="null"){d+=c.footer}d+="</footer>";d+="</form>";d+="</article>";b("#"+c.content).empty().append(d)};return{createView:function(c){a(c)}}}(jQuery));$(function(){var a={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(a))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(g){var h=g.split("."),e=MMS,f;if(h[0]==="MMS"){h=h.slice(1)}for(f=0;f<h.length;f+=1){if(typeof e[h[f]]==="undefined"){e[h[f]]={}}e=e[h[f]]}return e};MMS.namespace("MMS.utils");MMS.utils=(function(j){var k,i,g,l,h;l={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};k=function(a){a.timeout=5000;a.error=function(b,c){j("#error").html("<h4 class='alert_error'>An error has occurred ("+c+").  Please contact library-support@du.edu for assistance.</h4>")};a.statusCode={403:function(){alert("Session expired");MMS.view.createView(l);j("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};j(document).ajaxStart(function(){j.fancybox.showLoading()});j(document).ajaxStop(function(){j.fancybox.hideLoading()});j.ajax(a)};g=function(){var a={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(b){if(typeof b===null||b.isFedoraUp!==200||b.isSolrUp!=="OK"){j("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");j("#authenticate").attr("disabled","disabled")}}};k(a)};h=function(a){return a.replace(/</g,"").replace(/>/g,"")};i=function(a){if(a!=="#metadata-forms"){j(".optional_fields").hide();j("#optional_fields").hide()}j("article:not("+a+", .breadcrumbs)").hide()};return{doAjax:function(a){k(a)},focusForm:function(a){i(a)},sanitizeInput:function(a){return h(a)},pingServices:function(){g()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(R){var W,E,C,F,J,T,B,I,L,A,S,Q,N,P,K,U,z,X,O,D,G,V,M,H;H={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};Q=function(){var a="";a+='<article id="controlled-vocabulary-section" class="module width_quarter">';a+="<header><h3>Controlled Vocabularies</h3></header>";a+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';a+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';a+="<p>";a+='<select id="vocab-options" name="vocab-options">';a+='<option value="ulan" selected>ULAN</option>';a+='<option value="aat">AAT</option>';a+='<option value="locnames">LC-Names</option>';a+='<option value="locsubjects">LC-Subjects</option>';a+='<option value="aloracreators">Alora-Creators</option>';a+='<option value="alorasubjects">Alora-Subjects</option>';a+="</select>&nbsp;";a+='<input id="getVocabularies" type="submit" value="Go" />';a+="</p>";a+="</div>";a+='<div id="vocabulary-results"></div>';a+="</article>";return a};V=function(){R("#search-results").empty();MMS.view.createView(H);N();G();R(".current").html("Creator");R("#controlled-vocabulary-form").show()};M=function(){R("#search-results").empty();MMS.view.createView(H);D();G();R(".current").html("Subject");R("#controlled-vocabulary-form").show()};G=function(){R("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){X()}})};X=function(){I={type:"POST",url:MMS.configObj.creatorapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(I)};O=function(){I={type:"POST",url:MMS.configObj.subjectapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(I)};D=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Subject";a+="</label>";a+="<input id='subject' name='subject[]' type='text' class='required' />";a+="</fieldset>";a+="<label>";R("#controlledvocabulary").append(a)};N=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Creator";a+="</label>";a+="<input id='creator' name='creator[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Creator Alternative";a+="</label>";a+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Nationality";a+="</label>";a+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Role";a+="</label>";a+="<input id='description-role' name='description.role[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Biography";a+="</label>";a+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Sex";a+="</label>";a+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Source";a+="</label>";a+="<input id='source' name='source' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Earliest Date";a+="</label>";a+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Latest Date";a+="</label>";a+="<input id='latestdates' name='latestdates' type='text' class='required' />";a+="</fieldset>";R("#controlledvocabulary").append(a)};L=function(){return sessionStorage.getItem("roleID")};W=function(){var a,b=R("input#vocabTerm").val(),c=R("select#vocab-options");b=MMS.utils.sanitizeInput(b);if(c.length>0){a=c.val()}I={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+b+"&option="+a,dataType:"json",cache:true,success:function(d){F(a,d)}};MMS.utils.doAjax(I)};A=function(c,b,d){var a="id="+c+"&vocabType="+b;if(d===undefined){var d=function(e){S(c,e)}}I={type:"GET",url:MMS.configObj.vocabUrl,data:a,dataType:"json",cache:true,success:d};MMS.utils.doAjax(I)};S=function(c,b){var a="",d=R("span#"+c+"-toggle").text();if(d==="( + )"){R("span#"+c+"-toggle").text("( - )");R("div#"+c+"-vocab-data").show()}else{if(d==="( - )"){R("div#"+c+"-vocab-data").hide();R("span#"+c+"-toggle").text("( + )")}}R.each(b,function(f,e){if(e.subject_id!==undefined){a+="<p><strong>Subject id:</strong> "+e.subject_id+"</p>"}if(e.nationalities!==""){a+="<p><strong>Nationality:</strong> "+e.nationalities+"</p>"}if(e.role_id!==""){a+="<p><strong>Role:</strong> "+e.role_id+"</p>"}if(e.preferred_terms_source_id!==""){a+="<p><strong>Source:</strong> "+e.preferred_terms_source_id+"</p>"}if(e.non_preferred_terms_term_text!==""){a+="<p><strong>Alternative name:</strong> "+e.non_preferred_terms_term_text+"</p>"}if(e.preferred_biographies_biography_text!==""){a+="<p><strong>Bio:</strong> "+e.preferred_biographies_biography_text+"</p>"}if(e.preferred_biographies_birth_date!==""){a+="<p><strong>Birth date:</strong> "+e.preferred_biographies_birth_date+"</p>"}if(e.preferred_biographies_death_date!==""){a+="<p><strong>Death date:</strong> "+e.preferred_biographies_death_date+"</p>"}if(e.preferred_biographies_sex!==""){a+="<p><strong>Sex:</strong> "+e.preferred_biographies_sex+"</p>"}});R("div#"+c+"-vocab-data").empty().append(a)};B=function(c,a,b){var d;while(a<50){d=R("#"+b+"-"+a).val();if(d===""){R("#"+b+"-"+a).val(c);break}a++}return d};T=function(d,b){var c,i,h,e,a,j=1,f=function(k){z(k)},g=R("select#vocab-options");if(L()=="2"){R("#"+d).removeAttr("disabled");R("#"+d).attr("readonly","readonly")}if(g.length>0){a=g.val()}if(a==="ulan"||a==="locnames"||a==="aloracreators"){if(a!=="locnames"){A(d,a,f)}c=R("#creator-0").val();if(c===""){B(b,0,"creator")}else{i=R("#coverage-spatial-repository-0").val(b);if(i===""){B(b,0,"coverage-spatial-repository")}else{B(b,j,"coverage-spatial-repository")}}}else{if(a==="aat"||a==="locsubjects"||a==="alorasubjects"){e=R("#coverage-temporal-styleperiod-0").val();if(e===""){B(b,0,"coverage-temporal-styleperiod")}else{e=B(b,j,"coverage-temporal-styleperiod")}if(e===undefined){h=R("#subject-0").val();if(h===""){B(b,0,"subject")}else{B(b,j,"subject")}}}}};z=function(b){var a="";R.each(b,function(d,c){a+='<input name="creator.alternative[]" type="hidden" value="'+c.non_preferred_terms_term_text+'" />';a+='<input name="description.creatorbio[]" type="hidden" value="'+c.preferred_biographies_biography_text+'" />';a+='<input name="description.nationality[]" type="hidden" value="'+c.nationalities+'" />';a+='<input name="description.role[]" type="hidden" value="'+c.role_id+'" />';a+='<input name="description.lifedates[]" type="hidden" value="'+c.preferred_biographies_birth_date+"-"+c.preferred_biographies_death_date+'" />';a+='<input name="source[]" type="hidden" value="'+c.preferred_terms_source_id+'" />'});R("div#metadata").append(a)};F=function(d,c){var b,a="";if(d==="ulan"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+E+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"ulan\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="aat"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+E+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="locnames"||d==="locsubjects"){b=c.loc;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+E+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E+", $(this).text());return false;'>"+c.loc[f].title+"</a><br /><a href='#'>"+e.id+"</a></li></ul></p>"})}else{if(d==="aloracreators"||d==="alorasubjects"){b=c.local;if(b.message!==undefined){a+="<p><ul><li>No results found.</li></ul></p>";R("div#vocabulary-results").empty().append(a);return}R.each(b,function(f,e){if(d==="aloracreators"){a+="<p><ul><li><a href='#' id='"+E+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"local\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{a+="<p><ul><li><a href='#' id='"+E+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}R("div#vocabulary-results").empty().append(a)};J=function(){R("#controlled-vocabulary-section").show();var a=Q();R("#content").append(a);R("input#vocabTerm").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("select#vocab-options").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("input#getVocabularies").on("click",function(){W()})};K=function(){R("select#type-arttypes").val("");R("select#type-timeperiods").val("");R("select#type-instructors").val("")};P=function(c){var b=["arttypes","timeperiods","instructors"],d={},a;if(c===undefined){c=function(e){U(e)}}for(a=0;a<b.length;a++){d.type="GET";d.url=MMS.configObj.vocabUrl;d.data="vocabType="+b[a];d.dataType="json";d.cache=true;d.success=c;MMS.utils.doAjax(d)}};U=function(f){var f=R.parseJSON(f);var e;var c;var d=sessionStorage.getItem("arttypes");var a=sessionStorage.getItem("timeperiods");var b=sessionStorage.getItem("instructors");e="<option value=''>---Select an term---</option>";R.each(f,function(h,g){if(g.type){c=g.type}if(g.term===d||g.term===a||g.term===b){e+="<option value='"+g.term+"' selected>"+g.term+"</option>"}else{e+="<option value='"+g.term+"'>"+g.term+"</option>"}});R("select#type-"+c).html(e)};C=function(){R("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){W()},displayControlledVocabulariesBox:function(b,a){J(b,a)},selectVocabularyTerm:function(a,b){T(a,b)},getTermData:function(a,b){A(a,b)},getLists:function(){P()},resetLists:function(){K()},loadCreatorForm:function(){V()},loadSubjectForm:function(){M()},init:function(){C()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(ab){var F,ai,X,P,U,ac,H="#metadata",Y="#metadata-form",O="#metadata-forms",ad,ae,W,S,K,aa,Q,T,G,Z,N,ag,af,J,ah,I,R,M,aj,V,L;F={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};ai=function(a){var b=W(I,"displayOrder");ab.each(b,function(d,c){S=ad(c);S.appendTo(H)});ab(H).append("<input name='objectType' type='hidden' value='"+a+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};M=function(a){var c;var b;if(a==="queue"){b="Back to Review Queue"}else{if(a==="search"){ab("#search-results").hide();b="Back to Search Results"}}c="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+a+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+b+"</a>";return c};aj=function(a){if(a==="queue"){MMS.queue.getItems()}else{if(a==="search"){ab("#search-results").show();ab("#content").empty()}}ab("#clone-record").empty();ab("#controlled-vocabulary-section").hide();return};X=function(g,f,b){var i=100,d="",c,h;ab(".current").html("Edit Metadata");ab(H).empty();d+="<div id='edit-mode'></div>";d+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";d+="<fieldset id='isPid'>";d+="<label>pid</label>";d+="<input type='text' value='"+f+"'  disabled />";d+="</fieldset>";if(b==="queue"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}else{if(b==="search"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}}I=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var e=W(I,"displayOrder");ab.each(e,function(k,j){ab.each(g,function(m,l){if(j.element===m){c=m.replace(".","-");if(typeof l==="string"){d+="<fieldset class='"+c+"-0'>";if(j.repeat==="true"){d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+m+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+m+"'><span>Add</span></a></span></label>"}else{d+="<label>"+j.label+"</label>"}if(j.type==="select"){if(j.required==="true"){var n="class='required"}if(j.element==="type.arttype"){sessionStorage.setItem("arttypes",l)}else{if(j.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",l)}else{if(j.element==="instructor"){sessionStorage.setItem("instructors",l)}}}d+="<select name='"+j.element+"[]' id='"+j.id+"' "+n+"'></select>"}if(j.type==="text"){d+="<input id='"+m+"-"+i+"' name='"+m+"[]' type='text' value='"+l+"' "+n+" />"}if(j.type==="textarea"){d+="<textarea id='"+m+"-"+i+"' name='"+m+"[]' rows='7' cols='55' "+n+">"+l+"</textarea> "}d+="</fieldset>"}if(typeof l==="object"){ab.each(l,function(o,p){i++;if(i>101){d+="<fieldset class='"+c+"-"+i+"'>"}else{d+="<fieldset class='"+c+"-0'>"}if(j.repeat==="true"){if(i>101){d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+m+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+m+"'><span>Del</span></a></span></label>"}else{d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+m+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+m+"'><span>Add</span></a></span></label>"}}else{d+="<label>"+j.label+"</label>"}if(j.type==="text"){d+="<input id='"+m+"-"+i+"' name='"+m+"[]' type='text' value='"+p+"' "+n+" />"}if(j.type==="textarea"){d+="<textarea id='"+m+"-"+i+"' name='"+m+"[]' rows='7' cols='55' "+n+">"+p+"</textarea> "}d+="</fieldset>"})}}})});ab.each(g,function(k,j){if(k==="collection"){d+="<input id='"+k+"-0' name='collection' type='hidden' value='"+j+"' />"}else{if(k==="identifier.system"){d+="<input id='"+k+"' class='pid' name='pid' type='hidden' value='"+j+"' />"}else{if(k==="identifier.legacy"){d+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+j+"' />"}else{if(k==="identifier.master"){d+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+j+"' />"}else{if(k==="objectType"){h=j;d+="<input name='"+k+"' type='hidden' value='"+j+"' />"}else{if(k==="date.created"){d+="<fieldset>";d+="<label class='datecreated'>"+k+"</label>";d+="<input class='datecreated' type='text' value='"+j+"' disabled />";d+="<input class='datecreated' name='"+k+"[]' type='hidden' value='"+j+"'/>";d+="</fieldset>"}else{if(k==="date.modified"){d+="<fieldset>";d+="<label class='datemodified'>"+k+"</label>";d+="<input class='datemodified' type='text' value='"+j+"' disabled />";d+="</fieldset>"}}}}}}}});ab.each(e,function(k,j){if(j.required==="false"){d+="<fieldset class='"+j.id+"-0' style='display:none;'>";d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+j.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+j.element+"'><span>Del</span></a></span></label>";if(j.type==="text"){d+="<input id='"+j.id+"-0' name='"+j.element+"[]' type='"+j.type+"' value='' />"}else{if(j.type==="textarea"){d+="<textarea id='"+j.id+"-0' name='"+j.element+"[]' rows='7' cols='55'></textarea> "}}d+="</fieldset>"}});F.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(F);var a=M(b);ab("#pid").append(a);ab(H).append(d);G();ab(".optional_fields").show();ab("#optional_fields").show();ab(O).show();P()};ac=function(i,h){var e,a=h.split("-"),b=a[a.length-2],d,f,g,c=[];if(a[a.length-1]==="clone"){a.pop();a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");f=f.replace(".","-");e=function(){ab.each(I,function(k,j){g=j.element.replace(".","-");g=g.replace(".","-");if(f===g){U(i,j)}})};aa(e)}else{if(a[a.length-1]==="remove"){a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");if(b==="0"){e=function(){ab("#"+f).val("");ab("."+f).hide()}}else{e=function(){ab("."+h).remove()}}Q(e)}}};T=function(b,a){b.preventDefault();b.stopPropagation();a=a.replace("-remove","");ab("."+a).remove()};Q=function(a){a()};aa=function(a){a()};V=function(a){a=a.replace("-clear","");ab("#"+a).val("")};ad=function(d){var a=JSON.parse(sessionStorage.getItem("mms_profile"));var c="";var e="";if(d.type==="select"){if(d.required==="true"){var b="class='required"}c+="<fieldset class='"+d.id+"-"+MMS.counterObj.count+"'>";c+="<label for='"+d.id+"'>"+d.label+"</label>";c+="<select name='"+d.element+"[]' id='"+d.id+"' "+b+"'></select>";c+="</fieldset>"}else{if(d.vocabulary==="true"&&a.roleID=="2"){e="&nbsp;&nbsp;<a href='#' id='"+d.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}c+="<fieldset class='"+d.id+"-"+MMS.counterObj.count+"'>";c+="<label>";c+=d.label;if(d.repeat==="true"){c+="<span class='clone'><a href='#' id='"+d.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+d.element+"'><span>Add</span></a></span>"}else{if(d.repeat==="false"){c+="<a href='#' id='"+d.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(d.required==="false"){c+="<span class='remove'><a href='#' id='"+d.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+d.element+"'><span>Del</span></a></span>"}c+="</label>"+e;if(d.type==="text"){c+="<input "}else{if(d.type==="textarea"){c+="<textarea "}}c+="id='"+d.id+"-"+MMS.counterObj.count+"'";c+="name='"+d.element+"[]' ";c+="type='"+d.type+"' ";if(d.vocabulary==="true"&&a.roleID=="2"){c+="disabled='disbled'"}c+="class='";if(d.required==="true"){c+="required"}c+="'";if(d.type==="text"){c+="/>"}else{if(d.type==="textarea"){c+="rows='14' cols='45'></textarea>"}}c+="</fieldset>"}if(d.required==="true"){K=ab(c)}else{if(d.required==="false"){K=ab(c).hide()}}return K};P=function(){ab("#optional_fields").empty();ab.each(I,function(b,a){if(a.required==="false"){var c="<li class='icn_categories'><a href='#'>"+a.label+"</a></li>";ae=ab(c).on("click","a",function(d){d.preventDefault();MMS.metadata.appendOptionalField(a)});ae.appendTo("#optional_fields")}})};L=function(a){ab("."+a.id+"-0").show();location.hash="#"+a.id+"-0"};U=function(d,e){d.preventDefault();d.stopPropagation();var a=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var b="";var c="";c+="<fieldset class='"+e.id+"-"+MMS.counterObj.count+"'>";c+="<label>";c+=e.label;c+="&nbsp;<span class='remove'><a href='#' id='"+e.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+e.element+"'><span>Del</span></a></span>";if(e.vocabulary==="true"){}c+="</label>";if(e.type==="text"){c+="<input "}else{if(e.type==="textarea"){c+="<textarea "}}c+="id='"+e.id+"-"+MMS.counterObj.count+"'";c+="name='"+e.element+"[]' ";c+="type='"+e.type+"' ";if(e.vocabulary==="true"&&a.roleID=="2"){c+="disabled='disabled'"}c+="class='none ";c+="'";if(e.type==="text"){c+="/>"}else{if(e.type==="textarea"){c+="rows='10' cols='45'></textarea>"}}c+="</fieldset>";b=ab(c).insertAfter("."+e.id+"-0");return b};Z=function(){var b=JSON.parse(sessionStorage.getItem("mms_profile"));if(b.roleID==="2"){af={type:"PUT",url:MMS.configObj.queue,data:ab(Y).serialize(),dataType:"json",cache:true,success:function(d){ab("#metadata-form").find("input[type=text], textarea").val("");ab("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){ab("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(af);return}var a=ab(".pid").val();var c=ab("#type").val();af={type:"PUT",url:MMS.configObj.repository,data:ab(Y).serialize(),dataType:"json",cache:false,success:function(d){if(d.updated==="true"){af={type:"GET",url:MMS.configObj.repository,data:"pid="+a,dataType:"json",cache:true,success:function(f,e){ab("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){ab("div#actionFeedback").empty()},5000);location.hash="#header";return false;X(f,a,e)}};MMS.utils.doAjax(af)}else{if(d.created==="true"){ab("#metadata-form").find("input[type=text], textarea").val("");ab("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){ab("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(af)};J=function(c,b,a){c.preventDefault();af={type:"GET",url:MMS.configObj.repository,data:"pid="+b,dataType:"json",cache:false,success:function(d){X(d,b,a)}};MMS.utils.doAjax(af)};R=function(){var a=ab(".pid").val();ab(".pid").remove();ab("#isPid").remove();ab(".datecreated").remove();ab(".datemodified").remove();ab("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+a+".</h4>");setTimeout(function(){ab("div#actionFeedback").remove()},10000)};G=function(){ab(Y).validate({errorClass:"invalid",submitHandler:function(){Z()}})};ah=function(c,a){c.preventDefault();var b=confirm("Are you sure you want to delete this record?");if(b){af={type:"POST",url:MMS.configObj.repository,data:"pid="+a,dataType:"json",cache:true,success:function(d){if(d.deleted==="true"){ab("#search-forms").hide();ab("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){ab("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(af)}return false};W=function(b,c){var a=[];for(var d in b){a.push(b[d])}return a.sort(function(g,h){var e=g[c];var f=h[c];return((e<f)?-1:((e>f)?1:0))})};N=function(a){MMS.counterObj.count=0;ab("#search-results").empty();MMS.view.createView(F);if(a==="image"){var b=[];I=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));ai(a);P()}G();ab(".current").html(a+" metadata");ab("#clone-record").remove();ab(O).show();ab(".optional_fields").show();ab("#optional_fields").show();ab("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};ag=function(){ab(O).hide();ab(".optional_fields").hide();ab(".formType").on("click",function(a){N(ab(this).attr("id"))})};return{getMetadata:function(c,b,a){J(c,b,a)},deleteMetadata:function(a,b){ah(a,b)},removeClonedField:function(b,a){T(b,a)},constructFieldEvent:function(b,a){ac(b,a)},cloneRecord:function(a){R(a)},back:function(a){aj(a)},createMetadataEditForm:function(a,b,c){X(a,b,c)},appendOptionalField:function(a){L(a)},clearField:function(a){V(a)},loadForm:function(a){N(a)},init:function(){ag()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(M){var w="#user",C="#user-form",P="#user-forms",z,E,D,F,H,O,B,N,v,A,y,L,I,J,K,G,x;x={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};H=function(){M(C).validate({errorClass:"invalid",submitHandler:function(){N()}})};E=function(){x.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(x);var h="";var d="";var f="";var b="";var a="";var e="";var c="";d+="<fieldset>";d+="<label>";d+="* First Name";d+="</label>";d+="<input id='firstName' name='firstName' type='text' class='required' />";d+="</fieldset>";f+="<fieldset>";f+="<label>";f+="* Last Name";f+="</label>";f+="<input id='lastName' name='lastName' type='text' class='required' />";f+="</fieldset>";b+="<fieldset>";b+="<label>";b+="* DU ID";b+="</label>";b+="<input id='duID' name='duID' type='text' class='required' />";b+="</fieldset>";I={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(i){e+="<fieldset>";e+="<label for='roleID'>* Roles</label>";e+="<select name='roleID' id='roleID' class='required'>";e+="<option value=''>---Assign a role--</option>";M.each(i,function(k,j){if(k!="3"){e+="<option value='"+k+"'>"+j+"</option>"}});e+="</select>";e+="</fieldset>";M(w).append(e)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){J={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(i){c+="<strong>* Assign a Collection</strong>";M.each(i,function(k,j){c+="<p><input id='"+j.collectionID+"' name='collections[]' type='radio' value='"+j.collectionID+"' /><label for='"+j.collectionID+"'>"+j.title+"</label></p>"});M(w).append(c)}};MMS.utils.doAjax(J)}else{c+="<input id='"+g.collectionID+"' name='collections[]' type='hidden' value='"+g.collectionID+"' />";h+=c}MMS.utils.doAjax(I);h+=d;h+=f;h+=b;M(w).append(h);H()};F=function(){x.footer="null";MMS.view.createView(x);A={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>First Name</th>";a+="<th>Last Name</th>";a+="<th>Role</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";M.each(b,function(c,d){a+="<tr>";a+="<td>"+d.firstName+"</td>";a+="<td>"+d.lastName+"</td>";a+="<td>"+d.roleName+"</td>";if(d.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+d.id+");'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";M(w).append(a)}};MMS.utils.doAjax(A)};D=function(e){var b="";var c="";var a="";var d="";x.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(x);M(".current").html("Edit User");K={type:"GET",url:MMS.configObj.users,data:"id="+e,dataType:"json",cache:false,async:false,success:function(g){b+="<input name='userID' type='hidden' value='"+e+"' />";b+="<fieldset>";b+="<label>";b+="* First Name";b+="</label>";b+="<input id='firstName' name='firstName' type='text' value='"+g[0].firstName+"' class='required' />";b+="</fieldset>";b+="<fieldset>";b+="<label>";b+="* Last Name";b+="</label>";b+="<input id='lastName' name='lastName' type='text' value='"+g[0].lastName+"' class='required' />";b+="</fieldset>";M(w).append(b);I={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(h){c+="<fieldset>";c+="<label for='roleID'>* Roles</label>";c+="<select name='roleID' id='roleID' class='required'>";c+="<option value=''>---Assign a role--</option>";M.each(h,function(j,i){if(g[0].roleID===j){c+="<option value='"+j+"' selected>"+i+"</option>"}else{if(j!="3"){c+="<option value='"+j+"'>"+i+"</option>"}}});c+="</select>";c+="</fieldset>";M(w).append(c)}};var f=JSON.parse(sessionStorage.getItem("mms_profile"));if(f.roleID=="3"){J={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(h){a+="<strong>* Assigned Collection</strong>";M.each(h,function(j,i){if(g[1].collectionID===i.collectionID){a+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' checked /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}else{a+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}})}};MMS.utils.doAjax(J)}else{a+="<input name='collectionID' type='hidden' value='"+f.collectionID+"' />"}M(w).append(a);MMS.utils.doAjax(I);d+="<label>";d+="isActive";d+="</label>";if(g[0].isActive=="1"){d+="<input id='isActive' name='isActive' type='checkbox' value='"+g[0].isActive+"' checked />"}else{d+="<input id='isActive' name='isActive' type='checkbox' value='"+g[0].isActive+"' />"}M(w).append(d)}};MMS.utils.doAjax(K);H()};N=function(){y={type:"PUT",url:MMS.configObj.users,data:M(C).serialize(),dataType:"json",cache:false,success:function(a){if(a.updated==="true"){F()}else{if(a.updated==="false"){alert("Error: Update failed.")}else{M("#user-form")[0].reset()}}}};MMS.utils.doAjax(y)};v=function(a){var b=confirm("Are you sure you want to delete this user?");if(b){L={type:"POST",url:MMS.configObj.users,data:"userID="+a,dataType:"json",cache:false,success:function(c){if(c.deleted==="true"){F()}else{if(c.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(L)}};z=function(){G={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(c){sessionStorage.setItem("mms_profile",JSON.stringify(c));var b=JSON.parse(sessionStorage.getItem("mms_profile"));var a=b.firstName+" "+b.lastName+" ("+b.roleName+")";M("#user-role").append(a)}};MMS.utils.doAjax(G)};O=function(a){if(a==="addUser"){E();M("#search-results").empty();M(".current").html("Add User")}else{if(a==="viewUsers"){F();M("#search-results").empty();M(".current").html("Users")}}};B=function(){M(P).hide();M("#addUser").on("click",function(a){O(M(this).attr("id"))});M("#viewUsers").on("click",function(a){O(M(this).attr("id"))})};return{init:function(){return B()},constructUserEditForm:function(a){return D(a)},deleteUserData:function(a){return v(a)},getSessionInfo:function(){return z()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(r){var p="#collection",s="#collection-form",v="#collection-forms",t,w,o,u,m,q,x,n;n={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};t=function(){MMS.view.createView(n);var e="";var f="";var a="";var d="";var b="";f+="<fieldset>";f+="<label>";f+="* Title";f+="</label>";f+="<input id='title' name='title' type='text' class='required' />";f+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Description";a+="</label>";a+="<input id='description' name='description' type='text' class='required' />";a+="</fieldset>";b+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";e+=f;e+=a;e+=b;r(p).append(e);var c={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(g){d+="<fieldset>";d+="<label>";d+="* Object Type";d+="</label>";d+="<br />";r.each(g,function(i,h){d+="<p><input id='"+h.objectType+"' name='objectType[]' type='checkbox' value='"+h.objectTypeID+"' /> "+h.objectType+"</p>"});d+="</fieldset>";r(p).append(d)}};MMS.utils.doAjax(c)};w=function(){MMS.view.createView(n);x={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(a){var b="";b+="<div class='tab_container'>";b+="<div id='tab1' class='tab_content'>";b+="<table class='tablesorter' cellspacing='0'>";b+="<thead>";b+="<tr>";b+="<th>Collection Name</th>";b+="<th>Description</th>";b+="<th>Active</th>";b+="<th>Actions</th>";b+="</tr>";b+="</thead>";b+="<tbody>";r.each(a,function(d,c){b+="<tr>";b+="<td>"+c.title+"</td>";b+="<td>"+c.description+"</td>";if(c.isActive==="1"){b+="<td>Yes</td>"}else{b+="<td>No</td>"}b+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+c.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+c.collectionID+"\"); return false;'></td>";b+="</tr>"});b+="</tbody>";b+="</table>";b+="</div>";b+="</div>";r(p).append(b)}};MMS.utils.doAjax(x)};q=function(){x={type:"PUT",url:MMS.configObj.collections,data:r(s).serialize(),dataType:"json",cache:false,success:function(a){r(s)[0].reset()}};MMS.utils.doAjax(x)};u=function(a){if(a==="addCollection"){t();r(".current").html("Add Collection")}else{if(a==="editCollection"){}else{if(a==="deleteCollection"){}else{if(a==="viewCollections"){w();r(".current").html("Collections")}}}}};m=function(){r(v).hide();r("#addCollection").on("click",function(a){u(r(this).attr("id"))});r("#viewCollections").on("click",function(a){u(r(this).attr("id"))});o()};o=function(){r(s).validate({errorClass:"invalid",submitHandler:function(){q()}})};return{init:function(){return m()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(o){var p,m,n,r,q=".module width_full",l="#login-form",k,j;p=function(){r={type:"POST",url:MMS.configObj.authenticate,data:o(l).serialize(),dataType:"json",cache:true,success:function(a){o(q).hide();m(a)}};o("h3#message").ajaxStart(function(){o("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(r)};m=function(a){if(a.isAuthenticated==="false"){o("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");o("#authenticate").removeAttr("disabled")}else{if(a.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};n=function(){o("#login-form").validate({errorClass:"invalid",submitHandler:function(){p()}})};j=function(){o("#logout").click(function(){r={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(a){if(a.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(r)});return false};k=function(){n();j()};return{init:function(){k()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(s){var w,v,u,m,t,p,r,x,n,o,q="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";o={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};w=function(a){s("#content").empty();a.preventDefault();u=s("input#quickSearch").val();u=MMS.utils.sanitizeInput(u);if(u===""){return s("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}m=s("#search_box").serialize();s("#search").empty();s("#actionFeedback").empty();x={type:"GET",url:MMS.configObj.search,data:s("#search_box").serialize(),dataType:"json",cache:true,success:function(b){if(b.error==500){s("#error").html(q)}else{s("#error").html("");MMS.view.createView(o);r(b)}}};MMS.utils.doAjax(x);return false};r=function(c){var a="";var b=[];var e="";var d=JSON.parse(sessionStorage.getItem("mms_profile"));s("#search_box")[0].reset();s("#search-message").text("You searched for: "+u);s(".current").html("Search Results");if(c.response.numFound===0){s("#search-forms").remove();s("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}a+="<div>";a+="<div>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Records Found: "+c.response.numFound+"</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody id='pages'>";s.each(c.response.docs,function(g,f){e+="<tr>";e+="<td width='85%'>";e+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";e+="<tr align='top'>";if(f.identifier_t[0]!==undefined){e+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+f.identifier_t[0]+"' alt='"+f.title_t[0]+"' border='1'></p></td>"}e+="<td width='40%' align='left'>";if(f.title_t!==undefined){e+="<p><strong>Title:</strong> "+f.title_t[0]+"</p>"}if(f.creator_t!==undefined){e+="<p><strong>Creator:</strong> "+f.creator_t[0]+"</p>"}e+="</td>";e+="</tr>";e+="</table>";e+="</td>";e+="<td width='28%'>";e+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+f.id+'", "search");\'>';if(d.roleID==="1"){e+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+f.id+"\"); return false;'>"}e+="</td>";e+="</tr>";b.push(e);e=""});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";s("#search").append(a);s("#search-results").show();MMS.pagination.init(b)};v=function(a){var b;s.each(a.spellcheck.suggestions,function(d,c){if(c!=="true"){if(c.suggestion!==undefined){s.each(c.suggestion,function(f,e){if(f===0){p=e.word.trim();b="<a href='#' id='didYouMeanSearch'>"+e.word.trim()+"</a>"}})}}});if(b!==undefined){s("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+b+"</h4>");s("#didYouMeanSearch").on("click",function(c){t()})}};t=function(){s("#search").empty();s("#searchActionFeedback").empty();var a=m.replace(u,p);u=p;x={type:"GET",url:MMS.configObj.search,data:a,dataType:"json",cache:true,success:function(b){if(b.error==500){s("#error").html(q)}else{s("#error").html("");r(b)}}};MMS.utils.doAjax(x)};n=function(){s("#search-forms").hide();s("form.quick_search").submit(function(a){w(a)})};return{init:function(){return n()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(r){var v,o=1,u,t=4,w,x,s,n,q,p,m;u=function(){return Math.ceil(s/t)};w=function(){r("div.pagination").empty();var b="";b+="<ul id='pagination-flickr'>";b+="<li><a href='#' onclick='MMS.pagination.previous("+o+")'>Previous</a></li>";for(var a=1;a<=u();a++){if(a!==o){if(u()<=20){b+="<li><a href='#' onclick='MMS.pagination.renderPage("+a+"); return false;'>"+a+"</a></li>"}}else{b+="<li class='active'>"+a+"</li>";o=a}}b+="<li><a href='#' onclick='MMS.pagination.next("+o+")'>Next</a></li>";b+="</ul>";r("div.pagination").append(b)};q=function(b){if(b<u()){var a=b+1;x(a)}};p=function(b){if(b>1){var a=b-1;x(a)}};x=function(b){o=b;var b=(b-1);w();r("#pages").empty();for(var a=(b)*t;a<((b)*t)+t;a++){r("#pages").append(v[a])}};m=function(a){v=a;s=a.length;x(1)};return{init:function(a){return m(a)},renderPage:function(a){return x(a)},next:function(a){return q(a)},previous:function(a){return p(a)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(m){var l,j,n,i,h,k;h={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};l=function(){MMS.utils.focusForm("#batch-ingest-forms");i={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(a){MMS.view.createView(h);j(a)}};MMS.utils.doAjax(i);return false};j=function(b){m(".current").html("Batch");if(b.length===0){m("#batch-ingest-forms").remove();m("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var a="";a+="<div>";a+="<div>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Batch Records</th>";a+="<th>Status</th>";a+="</tr>";a+="</thead>";a+="<tbody>";m.each(b,function(d,c){if(c.object!=""){a+="<input name='pids[]' type='hidden' value='"+c.pid+"' />"}a+="<tr>";a+="<td width='85%'>";a+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";a+="<tr align='top'>";if(c.object!=""){a+="<td width='30%' align='center'><p><img src='"+c.object+"' alt='"+c.title+"' border='1'></p></td>"}else{a+="<td width='30%' align='center'><p>No Object.</p></td>"}a+="<td width='40%' align='left'>";a+="<p><strong>Pid:</strong> "+c.pid+"</p>";a+="<p><strong>Title:</strong> "+c.title+"</p>";a+="<p><strong>Creator:</strong> "+c.creator+"</p>";a+="<p><strong>Identifier:</strong> "+c.identifier+"</p>";a+="</td>";a+="</tr>";a+="</table>";a+="</td>";if(c.object!=""){a+="<td width='28%'>complete.</td>"}else{a+="<td width='28%'>incomplete.</td>"}a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";m("#batch-ingest").empty().append(a);m("#batch-ingest-forms").show()};n=function(){i={type:"POST",url:MMS.configObj.batch,data:m("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(a){if(a.success===false){m("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){m("div#actionFeedback").empty()},4000)}else{m("#batch-ingest").empty();m("#batch-ingest-forms").remove();m("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){m("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(i);return false};k=function(){m("#batch-ingest-forms").hide();m("#batch").on("click",function(a){l(m(this).attr("id"))})};return{init:function(){return k()},ingest:function(){return n()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(i){var n,j,m,k,l,p,o;l={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};n=function(){m={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(a){MMS.view.createView(l);j(a)}};MMS.utils.doAjax(m)};j=function(b){i(".current").html("Xml");var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>XML File</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";i.each(b,function(d,c){a+="<input name='xmlFiles[]' type='hidden' value='"+c.fileName+"' />";a+="<tr>";a+="<td>"+c.fileName+"</td>";a+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+c.fileName+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";i("#xml").append(a);i("#xml-forms").show()};k=function(c){var b=[];for(var a in c){b.push(c[a].name)}m={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:b},dataType:"json",cache:false,success:function(d){i("#xml-forms").remove();if(d.created==="true"){i("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},5000)}else{i("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(m)};p=function(){MMS.view.createView(l);m={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(a){i("#xml").append(a)}};MMS.utils.doAjax(m)};o=function(){i("#view_xml").on("click",function(){n()})};return{init:function(){return o()},saveXml:function(a){return k(a)},createUploadArea:function(){return p()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(i){var f,h,g,j;f={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};h=function(){g={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(a){j(a)}};MMS.utils.doAjax(g);return false};j=function(b){i(".current").html("Review Queue");i("#search-results").empty();MMS.view.createView(f);if(b.length===0){i("#queue-forms").remove();i("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Pid</th>";a+="<th>Title</th>";a+="<th>Created By</th>";a+="<th>Date Created</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";i.each(b,function(d,c){a+="<tr>";a+="<td>"+c.pid+"</td>";a+="<td>"+c.title+"</td>";a+="<td>"+c.name+"</td>";a+="<td>"+c.timestamp+"</td>";a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+c.pid+'", "queue");\'</td>';a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";i("#search-results").empty();i("#queue").append(a)};return{getItems:function(){h()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(c){var d;d=function(b){var a="";a+='<div id="actionFeedback"></div>';a+='<div id="error"></div>';a+='<article id="'+b.articleID+'" class="'+b.articleClass+'">';a+="<header>";if(b.h3ID!=="null"){a+='<h3 id="'+b.h3ID+'">'+b.h3Value+"</h3>"}if(b.header!=="null"){a+=b.header}a+="</header>";a+='<form id="'+b.formID+'">';a+='<div id="'+b.divID+'" class="'+b.divClass+'"></div>';a+="<footer>";if(b.footer!=="null"){a+=b.footer}a+="</footer>";a+="</form>";a+="</article>";c("#"+b.content).empty().append(a)};return{createView:function(a){d(a)}}}(jQuery));$(function(){var b={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(b))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(d){var c=d.split("."),b=MMS,a;if(c[0]==="MMS"){c=c.slice(1)}for(a=0;a<c.length;a+=1){if(typeof b[c[a]]==="undefined"){b[c[a]]={}}b=b[c[a]]}return b};MMS.namespace("MMS.utils");MMS.utils=(function(e){var d,f,b,c,a;c={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};d=function(g){g.timeout=5000;g.error=function(i,h){e("#error").html("<h4 class='alert_error'>An error has occurred ("+h+").  Please contact library-support@du.edu for assistance.</h4>")};g.statusCode={403:function(){alert("Session expired");MMS.view.createView(c);e("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};e(document).ajaxStart(function(){e.fancybox.showLoading()});e(document).ajaxStop(function(){e.fancybox.hideLoading()});e.ajax(g)};b=function(){var g={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(h){if(typeof h===null||h.isFedoraUp!==200||h.isSolrUp!=="OK"){e("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");e("#authenticate").attr("disabled","disabled")}}};d(g)};a=function(g){return g.replace(/</g,"").replace(/>/g,"")};f=function(g){if(g!=="#metadata-forms"){e(".optional_fields").hide();e("#optional_fields").hide()}e("article:not("+g+", .breadcrumbs)").hide()};return{doAjax:function(g){d(g)},focusForm:function(g){f(g)},sanitizeInput:function(g){return a(g)},pingServices:function(){b()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(g){var b,t,v,s,o,e,w,p,m,x,f,h,k,i,n,d,y,a,j,u,r,c,l,q;q={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};h=function(){var z="";z+='<article id="controlled-vocabulary-section" class="module width_quarter">';z+="<header><h3>Controlled Vocabularies</h3></header>";z+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';z+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';z+="<p>";z+='<select id="vocab-options" name="vocab-options">';z+='<option value="ulan" selected>ULAN</option>';z+='<option value="aat">AAT</option>';z+='<option value="locnames">LC-Names</option>';z+='<option value="locsubjects">LC-Subjects</option>';z+='<option value="aloracreators">Alora-Creators</option>';z+='<option value="alorasubjects">Alora-Subjects</option>';z+="</select>&nbsp;";z+='<input id="getVocabularies" type="submit" value="Go" />';z+="</p>";z+="</div>";z+='<div id="vocabulary-results"></div>';z+="</article>";return z};c=function(){g("#search-results").empty();MMS.view.createView(q);k();r();g(".current").html("Creator");g("#controlled-vocabulary-form").show()};l=function(){g("#search-results").empty();MMS.view.createView(q);u();r();g(".current").html("Subject");g("#controlled-vocabulary-form").show()};r=function(){g("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){a()}})};a=function(){p={type:"POST",url:MMS.configObj.creatorapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(p)};j=function(){p={type:"POST",url:MMS.configObj.subjectapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(p)};u=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Subject";z+="</label>";z+="<input id='subject' name='subject[]' type='text' class='required' />";z+="</fieldset>";z+="<label>";g("#controlledvocabulary").append(z)};k=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Creator";z+="</label>";z+="<input id='creator' name='creator[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Creator Alternative";z+="</label>";z+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Nationality";z+="</label>";z+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Role";z+="</label>";z+="<input id='description-role' name='description.role[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Biography";z+="</label>";z+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Sex";z+="</label>";z+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Source";z+="</label>";z+="<input id='source' name='source' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Earliest Date";z+="</label>";z+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Latest Date";z+="</label>";z+="<input id='latestdates' name='latestdates' type='text' class='required' />";z+="</fieldset>";g("#controlledvocabulary").append(z)};m=function(){return sessionStorage.getItem("roleID")};b=function(){var A,z=g("input#vocabTerm").val(),B=g("select#vocab-options");z=MMS.utils.sanitizeInput(z);if(B.length>0){A=B.val()}p={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+z+"&option="+A,dataType:"json",cache:true,success:function(C){s(A,C)}};MMS.utils.doAjax(p)};x=function(C,z,B){var A="id="+C+"&vocabType="+z;if(B===undefined){var B=function(D){f(C,D)}}p={type:"GET",url:MMS.configObj.vocabUrl,data:A,dataType:"json",cache:true,success:B};MMS.utils.doAjax(p)};f=function(C,z){var A="",B=g("span#"+C+"-toggle").text();if(B==="( + )"){g("span#"+C+"-toggle").text("( - )");g("div#"+C+"-vocab-data").show()}else{if(B==="( - )"){g("div#"+C+"-vocab-data").hide();g("span#"+C+"-toggle").text("( + )")}}g.each(z,function(D,E){if(E.subject_id!==undefined){A+="<p><strong>Subject id:</strong> "+E.subject_id+"</p>"}if(E.nationalities!==""){A+="<p><strong>Nationality:</strong> "+E.nationalities+"</p>"}if(E.role_id!==""){A+="<p><strong>Role:</strong> "+E.role_id+"</p>"}if(E.preferred_terms_source_id!==""){A+="<p><strong>Source:</strong> "+E.preferred_terms_source_id+"</p>"}if(E.non_preferred_terms_term_text!==""){A+="<p><strong>Alternative name:</strong> "+E.non_preferred_terms_term_text+"</p>"}if(E.preferred_biographies_biography_text!==""){A+="<p><strong>Bio:</strong> "+E.preferred_biographies_biography_text+"</p>"}if(E.preferred_biographies_birth_date!==""){A+="<p><strong>Birth date:</strong> "+E.preferred_biographies_birth_date+"</p>"}if(E.preferred_biographies_death_date!==""){A+="<p><strong>Death date:</strong> "+E.preferred_biographies_death_date+"</p>"}if(E.preferred_biographies_sex!==""){A+="<p><strong>Sex:</strong> "+E.preferred_biographies_sex+"</p>"}});g("div#"+C+"-vocab-data").empty().append(A)};w=function(C,A,z){var B;while(A<50){B=g("#"+z+"-"+A).val();if(B===""){g("#"+z+"-"+A).val(C);break}A++}return B};e=function(A,C){var B,F,G,z,D,E=1,I=function(J){y(J)},H=g("select#vocab-options");if(m()=="2"){g("#"+A).removeAttr("disabled");g("#"+A).attr("readonly","readonly")}if(H.length>0){D=H.val()}if(D==="ulan"||D==="locnames"||D==="aloracreators"){if(D!=="locnames"){x(A,D,I)}B=g("#creator-0").val();if(B===""){w(C,0,"creator")}else{F=g("#coverage-spatial-repository-0").val(C);if(F===""){w(C,0,"coverage-spatial-repository")}else{w(C,E,"coverage-spatial-repository")}}}else{if(D==="aat"||D==="locsubjects"||D==="alorasubjects"){z=g("#coverage-temporal-styleperiod-0").val();if(z===""){w(C,0,"coverage-temporal-styleperiod")}else{z=w(C,E,"coverage-temporal-styleperiod")}if(z===undefined){G=g("#subject-0").val();if(G===""){w(C,0,"subject")}else{w(C,E,"subject")}}}}};y=function(z){var A="";g.each(z,function(B,C){A+='<input name="creator.alternative[]" type="hidden" value="'+C.non_preferred_terms_term_text+'" />';A+='<input name="description.creatorbio[]" type="hidden" value="'+C.preferred_biographies_biography_text+'" />';A+='<input name="description.nationality[]" type="hidden" value="'+C.nationalities+'" />';A+='<input name="description.role[]" type="hidden" value="'+C.role_id+'" />';A+='<input name="description.lifedates[]" type="hidden" value="'+C.preferred_biographies_birth_date+"-"+C.preferred_biographies_death_date+'" />';A+='<input name="source[]" type="hidden" value="'+C.preferred_terms_source_id+'" />'});g("div#metadata").append(A)};s=function(B,C){var z,A="";if(B==="ulan"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+t+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"ulan\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="aat"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+t+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="locnames"||B==="locsubjects"){z=C.loc;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+t+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+t+", $(this).text());return false;'>"+C.loc[D].title+"</a><br /><a href='#'>"+E.id+"</a></li></ul></p>"})}else{if(B==="aloracreators"||B==="alorasubjects"){z=C.local;if(z.message!==undefined){A+="<p><ul><li>No results found.</li></ul></p>";g("div#vocabulary-results").empty().append(A);return}g.each(z,function(D,E){if(B==="aloracreators"){A+="<p><ul><li><a href='#' id='"+t+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"local\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{A+="<p><ul><li><a href='#' id='"+t+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}g("div#vocabulary-results").empty().append(A)};o=function(){g("#controlled-vocabulary-section").show();var z=h();g("#content").append(z);g("input#vocabTerm").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("select#vocab-options").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("input#getVocabularies").on("click",function(){b()})};n=function(){g("select#type-arttypes").val("");g("select#type-timeperiods").val("");g("select#type-instructors").val("")};i=function(C){var z=["arttypes","timeperiods","instructors"],B={},A;if(C===undefined){C=function(D){d(D)}}for(A=0;A<z.length;A++){B.type="GET";B.url=MMS.configObj.vocabUrl;B.data="vocabType="+z[A];B.dataType="json";B.cache=true;B.success=C;MMS.utils.doAjax(B)}};d=function(B){var B=g.parseJSON(B);var C;var D;var z=sessionStorage.getItem("arttypes");var A=sessionStorage.getItem("timeperiods");var E=sessionStorage.getItem("instructors");C="<option value=''>---Select an term---</option>";g.each(B,function(F,G){if(G.type){D=G.type}if(G.term===z||G.term===A||G.term===E){C+="<option value='"+G.term+"' selected>"+G.term+"</option>"}else{C+="<option value='"+G.term+"'>"+G.term+"</option>"}});g("select#type-"+D).html(C)};v=function(){g("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){b()},displayControlledVocabulariesBox:function(z,A){o(z,A)},selectVocabularyTerm:function(A,z){e(A,z)},getTermData:function(A,z){x(A,z)},getLists:function(){i()},resetLists:function(){n()},loadCreatorForm:function(){c()},loadSubjectForm:function(){l()},init:function(){v()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(i){var z,b,m,C,p,h,x="#metadata",l="#metadata-form",D="#metadata-forms",g,f,n,q,u,j,r,A,y,k,s,d,e,v,c,w,B,E,a,o,t;z={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};b=function(G){var F=n(w,"displayOrder");i.each(F,function(H,I){q=g(I);q.appendTo(x)});i(x).append("<input name='objectType' type='hidden' value='"+G+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};E=function(H){var F;var G;if(H==="queue"){G="Back to Review Queue"}else{if(H==="search"){i("#search-results").hide();G="Back to Search Results"}}F="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+H+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+G+"</a>";return F};a=function(F){if(F==="queue"){MMS.queue.getItems()}else{if(F==="search"){i("#search-results").show();i("#content").empty()}}i("#clone-record").empty();i("#controlled-vocabulary-section").hide();return};m=function(H,I,M){var F=100,K="",L,G;i(".current").html("Edit Metadata");i(x).empty();K+="<div id='edit-mode'></div>";K+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";K+="<fieldset id='isPid'>";K+="<label>pid</label>";K+="<input type='text' value='"+I+"'  disabled />";K+="</fieldset>";if(M==="queue"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}else{if(M==="search"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}}w=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var J=n(w,"displayOrder");i.each(J,function(O,P){i.each(H,function(R,S){if(P.element===R){L=R.replace(".","-");if(typeof S==="string"){K+="<fieldset class='"+L+"-0'>";if(P.repeat==="true"){K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+R+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+R+"'><span>Add</span></a></span></label>"}else{K+="<label>"+P.label+"</label>"}if(P.type==="select"){if(P.required==="true"){var Q="class='required"}if(P.element==="type.arttype"){sessionStorage.setItem("arttypes",S)}else{if(P.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",S)}else{if(P.element==="instructor"){sessionStorage.setItem("instructors",S)}}}K+="<select name='"+P.element+"[]' id='"+P.id+"' "+Q+"'></select>"}if(P.type==="text"){K+="<input id='"+R+"-"+F+"' name='"+R+"[]' type='text' value='"+S+"' "+Q+" />"}if(P.type==="textarea"){K+="<textarea id='"+R+"-"+F+"' name='"+R+"[]' rows='7' cols='55' "+Q+">"+S+"</textarea> "}K+="</fieldset>"}if(typeof S==="object"){i.each(S,function(U,T){F++;if(F>101){K+="<fieldset class='"+L+"-"+F+"'>"}else{K+="<fieldset class='"+L+"-0'>"}if(P.repeat==="true"){if(F>101){K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+R+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+R+"'><span>Del</span></a></span></label>"}else{K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+R+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+R+"'><span>Add</span></a></span></label>"}}else{K+="<label>"+P.label+"</label>"}if(P.type==="text"){K+="<input id='"+R+"-"+F+"' name='"+R+"[]' type='text' value='"+T+"' "+Q+" />"}if(P.type==="textarea"){K+="<textarea id='"+R+"-"+F+"' name='"+R+"[]' rows='7' cols='55' "+Q+">"+T+"</textarea> "}K+="</fieldset>"})}}})});i.each(H,function(O,P){if(O==="collection"){K+="<input id='"+O+"-0' name='collection' type='hidden' value='"+P+"' />"}else{if(O==="identifier.system"){K+="<input id='"+O+"' class='pid' name='pid' type='hidden' value='"+P+"' />"}else{if(O==="identifier.legacy"){K+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+P+"' />"}else{if(O==="identifier.master"){K+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+P+"' />"}else{if(O==="objectType"){G=P;K+="<input name='"+O+"' type='hidden' value='"+P+"' />"}else{if(O==="date.created"){K+="<fieldset>";K+="<label class='datecreated'>"+O+"</label>";K+="<input class='datecreated' type='text' value='"+P+"' disabled />";K+="<input class='datecreated' name='"+O+"[]' type='hidden' value='"+P+"'/>";K+="</fieldset>"}else{if(O==="date.modified"){K+="<fieldset>";K+="<label class='datemodified'>"+O+"</label>";K+="<input class='datemodified' type='text' value='"+P+"' disabled />";K+="</fieldset>"}}}}}}}});i.each(J,function(O,P){if(P.required==="false"){K+="<fieldset class='"+P.id+"-0' style='display:none;'>";K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+P.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+P.element+"'><span>Del</span></a></span></label>";if(P.type==="text"){K+="<input id='"+P.id+"-0' name='"+P.element+"[]' type='"+P.type+"' value='' />"}else{if(P.type==="textarea"){K+="<textarea id='"+P.id+"-0' name='"+P.element+"[]' rows='7' cols='55'></textarea> "}}K+="</fieldset>"}});z.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(z);var N=E(M);i("#pid").append(N);i(x).append(K);y();i(".optional_fields").show();i("#optional_fields").show();i(D).show();C()};h=function(F,G){var J,N=G.split("-"),M=N[N.length-2],K,I,H,L=[];if(N[N.length-1]==="clone"){N.pop();N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");I=I.replace(".","-");J=function(){i.each(w,function(O,P){H=P.element.replace(".","-");H=H.replace(".","-");if(I===H){p(F,P)}})};j(J)}else{if(N[N.length-1]==="remove"){N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");if(M==="0"){J=function(){i("#"+I).val("");i("."+I).hide()}}else{J=function(){i("."+G).remove()}}r(J)}}};A=function(F,G){F.preventDefault();F.stopPropagation();G=G.replace("-remove","");i("."+G).remove()};r=function(F){F()};j=function(F){F()};o=function(F){F=F.replace("-clear","");i("#"+F).val("")};g=function(G){var J=JSON.parse(sessionStorage.getItem("mms_profile"));var H="";var F="";if(G.type==="select"){if(G.required==="true"){var I="class='required"}H+="<fieldset class='"+G.id+"-"+MMS.counterObj.count+"'>";H+="<label for='"+G.id+"'>"+G.label+"</label>";H+="<select name='"+G.element+"[]' id='"+G.id+"' "+I+"'></select>";H+="</fieldset>"}else{if(G.vocabulary==="true"&&J.roleID=="2"){F="&nbsp;&nbsp;<a href='#' id='"+G.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}H+="<fieldset class='"+G.id+"-"+MMS.counterObj.count+"'>";H+="<label>";H+=G.label;if(G.repeat==="true"){H+="<span class='clone'><a href='#' id='"+G.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+G.element+"'><span>Add</span></a></span>"}else{if(G.repeat==="false"){H+="<a href='#' id='"+G.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(G.required==="false"){H+="<span class='remove'><a href='#' id='"+G.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+G.element+"'><span>Del</span></a></span>"}H+="</label>"+F;if(G.type==="text"){H+="<input "}else{if(G.type==="textarea"){H+="<textarea "}}H+="id='"+G.id+"-"+MMS.counterObj.count+"'";H+="name='"+G.element+"[]' ";H+="type='"+G.type+"' ";if(G.vocabulary==="true"&&J.roleID=="2"){H+="disabled='disbled'"}H+="class='";if(G.required==="true"){H+="required"}H+="'";if(G.type==="text"){H+="/>"}else{if(G.type==="textarea"){H+="rows='14' cols='45'></textarea>"}}H+="</fieldset>"}if(G.required==="true"){u=i(H)}else{if(G.required==="false"){u=i(H).hide()}}return u};C=function(){i("#optional_fields").empty();i.each(w,function(G,H){if(H.required==="false"){var F="<li class='icn_categories'><a href='#'>"+H.label+"</a></li>";f=i(F).on("click","a",function(I){I.preventDefault();MMS.metadata.appendOptionalField(H)});f.appendTo("#optional_fields")}})};t=function(F){i("."+F.id+"-0").show();location.hash="#"+F.id+"-0"};p=function(G,F){G.preventDefault();G.stopPropagation();var J=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var I="";var H="";H+="<fieldset class='"+F.id+"-"+MMS.counterObj.count+"'>";H+="<label>";H+=F.label;H+="&nbsp;<span class='remove'><a href='#' id='"+F.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+F.element+"'><span>Del</span></a></span>";if(F.vocabulary==="true"){}H+="</label>";if(F.type==="text"){H+="<input "}else{if(F.type==="textarea"){H+="<textarea "}}H+="id='"+F.id+"-"+MMS.counterObj.count+"'";H+="name='"+F.element+"[]' ";H+="type='"+F.type+"' ";if(F.vocabulary==="true"&&J.roleID=="2"){H+="disabled='disabled'"}H+="class='none ";H+="'";if(F.type==="text"){H+="/>"}else{if(F.type==="textarea"){H+="rows='10' cols='45'></textarea>"}}H+="</fieldset>";I=i(H).insertAfter("."+F.id+"-0");return I};k=function(){var G=JSON.parse(sessionStorage.getItem("mms_profile"));if(G.roleID==="2"){e={type:"PUT",url:MMS.configObj.queue,data:i(l).serialize(),dataType:"json",cache:true,success:function(I){i("#metadata-form").find("input[type=text], textarea").val("");i("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(e);return}var H=i(".pid").val();var F=i("#type").val();e={type:"PUT",url:MMS.configObj.repository,data:i(l).serialize(),dataType:"json",cache:false,success:function(I){if(I.updated==="true"){e={type:"GET",url:MMS.configObj.repository,data:"pid="+H,dataType:"json",cache:true,success:function(J,K){i("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},5000);location.hash="#header";return false;m(J,H,K)}};MMS.utils.doAjax(e)}else{if(I.created==="true"){i("#metadata-form").find("input[type=text], textarea").val("");i("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(e)};v=function(F,G,H){F.preventDefault();e={type:"GET",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:false,success:function(I){m(I,G,H)}};MMS.utils.doAjax(e)};B=function(){var F=i(".pid").val();i(".pid").remove();i("#isPid").remove();i(".datecreated").remove();i(".datemodified").remove();i("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+F+".</h4>");setTimeout(function(){i("div#actionFeedback").remove()},10000)};y=function(){i(l).validate({errorClass:"invalid",submitHandler:function(){k()}})};c=function(F,H){F.preventDefault();var G=confirm("Are you sure you want to delete this record?");if(G){e={type:"POST",url:MMS.configObj.repository,data:"pid="+H,dataType:"json",cache:true,success:function(I){if(I.deleted==="true"){i("#search-forms").hide();i("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){i("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(e)}return false};n=function(H,G){var I=[];for(var F in H){I.push(H[F])}return I.sort(function(J,M){var L=J[G];var K=M[G];return((L<K)?-1:((L>K)?1:0))})};s=function(G){MMS.counterObj.count=0;i("#search-results").empty();MMS.view.createView(z);if(G==="image"){var F=[];w=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));b(G);C()}y();i(".current").html(G+" metadata");i("#clone-record").remove();i(D).show();i(".optional_fields").show();i("#optional_fields").show();i("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};d=function(){i(D).hide();i(".optional_fields").hide();i(".formType").on("click",function(F){s(i(this).attr("id"))})};return{getMetadata:function(F,G,H){v(F,G,H)},deleteMetadata:function(G,F){c(G,F)},removeClonedField:function(F,G){A(F,G)},constructFieldEvent:function(F,G){h(F,G)},cloneRecord:function(F){B(F)},back:function(F){a(F)},createMetadataEditForm:function(H,G,F){m(H,G,F)},appendOptionalField:function(F){t(F)},clearField:function(F){o(F)},loadForm:function(F){s(F)},init:function(){d()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(d){var t="#user",n="#user-form",a="#user-forms",q,l,m,k,i,b,o,c,u,p,r,e,h,g,f,j,s;s={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};i=function(){d(n).validate({errorClass:"invalid",submitHandler:function(){c()}})};l=function(){s.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(s);var B="";var v="";var z="";var x="";var A="";var C="";var w="";v+="<fieldset>";v+="<label>";v+="* First Name";v+="</label>";v+="<input id='firstName' name='firstName' type='text' class='required' />";v+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' class='required' />";z+="</fieldset>";x+="<fieldset>";x+="<label>";x+="* DU ID";x+="</label>";x+="<input id='duID' name='duID' type='text' class='required' />";x+="</fieldset>";h={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(D){C+="<fieldset>";C+="<label for='roleID'>* Roles</label>";C+="<select name='roleID' id='roleID' class='required'>";C+="<option value=''>---Assign a role--</option>";d.each(D,function(E,F){if(E!="3"){C+="<option value='"+E+"'>"+F+"</option>"}});C+="</select>";C+="</fieldset>";d(t).append(C)}};var y=JSON.parse(sessionStorage.getItem("mms_profile"));if(y.roleID=="3"){g={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(D){w+="<strong>* Assign a Collection</strong>";d.each(D,function(E,F){w+="<p><input id='"+F.collectionID+"' name='collections[]' type='radio' value='"+F.collectionID+"' /><label for='"+F.collectionID+"'>"+F.title+"</label></p>"});d(t).append(w)}};MMS.utils.doAjax(g)}else{w+="<input id='"+y.collectionID+"' name='collections[]' type='hidden' value='"+y.collectionID+"' />";B+=w}MMS.utils.doAjax(h);B+=v;B+=z;B+=x;d(t).append(B);i()};k=function(){s.footer="null";MMS.view.createView(s);p={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(v){var w="";w+="<div class='tab_container'>";w+="<div id='tab1' class='tab_content'>";w+="<table class='tablesorter' cellspacing='0'>";w+="<thead>";w+="<tr>";w+="<th>First Name</th>";w+="<th>Last Name</th>";w+="<th>Role</th>";w+="<th>Active</th>";w+="<th>Actions</th>";w+="</tr>";w+="</thead>";w+="<tbody>";d.each(v,function(x,y){w+="<tr>";w+="<td>"+y.firstName+"</td>";w+="<td>"+y.lastName+"</td>";w+="<td>"+y.roleName+"</td>";if(y.isActive==="1"){w+="<td>Yes</td>"}else{w+="<td>No</td>"}w+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+y.id+");'></td>";w+="</tr>"});w+="</tbody>";w+="</table>";w+="</div>";w+="</div>";d(t).append(w)}};MMS.utils.doAjax(p)};m=function(y){var w="";var v="";var x="";var z="";s.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(s);d(".current").html("Edit User");f={type:"GET",url:MMS.configObj.users,data:"id="+y,dataType:"json",cache:false,async:false,success:function(B){w+="<input name='userID' type='hidden' value='"+y+"' />";w+="<fieldset>";w+="<label>";w+="* First Name";w+="</label>";w+="<input id='firstName' name='firstName' type='text' value='"+B[0].firstName+"' class='required' />";w+="</fieldset>";w+="<fieldset>";w+="<label>";w+="* Last Name";w+="</label>";w+="<input id='lastName' name='lastName' type='text' value='"+B[0].lastName+"' class='required' />";w+="</fieldset>";d(t).append(w);h={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(C){v+="<fieldset>";v+="<label for='roleID'>* Roles</label>";v+="<select name='roleID' id='roleID' class='required'>";v+="<option value=''>---Assign a role--</option>";d.each(C,function(D,E){if(B[0].roleID===D){v+="<option value='"+D+"' selected>"+E+"</option>"}else{if(D!="3"){v+="<option value='"+D+"'>"+E+"</option>"}}});v+="</select>";v+="</fieldset>";d(t).append(v)}};var A=JSON.parse(sessionStorage.getItem("mms_profile"));if(A.roleID=="3"){g={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(C){x+="<strong>* Assigned Collection</strong>";d.each(C,function(D,E){if(B[1].collectionID===E.collectionID){x+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' checked /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}else{x+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}})}};MMS.utils.doAjax(g)}else{x+="<input name='collectionID' type='hidden' value='"+A.collectionID+"' />"}d(t).append(x);MMS.utils.doAjax(h);z+="<label>";z+="isActive";z+="</label>";if(B[0].isActive=="1"){z+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' checked />"}else{z+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' />"}d(t).append(z)}};MMS.utils.doAjax(f);i()};c=function(){r={type:"PUT",url:MMS.configObj.users,data:d(n).serialize(),dataType:"json",cache:false,success:function(v){if(v.updated==="true"){k()}else{if(v.updated==="false"){alert("Error: Update failed.")}else{d("#user-form")[0].reset()}}}};MMS.utils.doAjax(r)};u=function(w){var v=confirm("Are you sure you want to delete this user?");if(v){e={type:"POST",url:MMS.configObj.users,data:"userID="+w,dataType:"json",cache:false,success:function(x){if(x.deleted==="true"){k()}else{if(x.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(e)}};q=function(){j={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(v){sessionStorage.setItem("mms_profile",JSON.stringify(v));var w=JSON.parse(sessionStorage.getItem("mms_profile"));var x=w.firstName+" "+w.lastName+" ("+w.roleName+")";d("#user-role").append(x)}};MMS.utils.doAjax(j)};b=function(v){if(v==="addUser"){l();d("#search-results").empty();d(".current").html("Add User")}else{if(v==="viewUsers"){k();d("#search-results").empty();d(".current").html("Users")}}};o=function(){d(a).hide();d("#addUser").on("click",function(v){b(d(this).attr("id"))});d("#viewUsers").on("click",function(v){b(d(this).attr("id"))})};return{init:function(){return o()},constructUserEditForm:function(v){return m(v)},deleteUserData:function(v){return u(v)},getSessionInfo:function(){return q()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(g){var i="#collection",f="#collection-form",c="#collection-forms",e,b,j,d,l,h,a,k;k={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};e=function(){MMS.view.createView(k);var o="";var n="";var m="";var p="";var r="";n+="<fieldset>";n+="<label>";n+="* Title";n+="</label>";n+="<input id='title' name='title' type='text' class='required' />";n+="</fieldset>";m+="<fieldset>";m+="<label>";m+="* Description";m+="</label>";m+="<input id='description' name='description' type='text' class='required' />";m+="</fieldset>";r+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";o+=n;o+=m;o+=r;g(i).append(o);var q={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(s){p+="<fieldset>";p+="<label>";p+="* Object Type";p+="</label>";p+="<br />";g.each(s,function(t,u){p+="<p><input id='"+u.objectType+"' name='objectType[]' type='checkbox' value='"+u.objectTypeID+"' /> "+u.objectType+"</p>"});p+="</fieldset>";g(i).append(p)}};MMS.utils.doAjax(q)};b=function(){MMS.view.createView(k);a={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(m){var n="";n+="<div class='tab_container'>";n+="<div id='tab1' class='tab_content'>";n+="<table class='tablesorter' cellspacing='0'>";n+="<thead>";n+="<tr>";n+="<th>Collection Name</th>";n+="<th>Description</th>";n+="<th>Active</th>";n+="<th>Actions</th>";n+="</tr>";n+="</thead>";n+="<tbody>";g.each(m,function(o,p){n+="<tr>";n+="<td>"+p.title+"</td>";n+="<td>"+p.description+"</td>";if(p.isActive==="1"){n+="<td>Yes</td>"}else{n+="<td>No</td>"}n+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+p.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+p.collectionID+"\"); return false;'></td>";n+="</tr>"});n+="</tbody>";n+="</table>";n+="</div>";n+="</div>";g(i).append(n)}};MMS.utils.doAjax(a)};h=function(){a={type:"PUT",url:MMS.configObj.collections,data:g(f).serialize(),dataType:"json",cache:false,success:function(m){g(f)[0].reset()}};MMS.utils.doAjax(a)};d=function(m){if(m==="addCollection"){e();g(".current").html("Add Collection")}else{if(m==="editCollection"){}else{if(m==="deleteCollection"){}else{if(m==="viewCollections"){b();g(".current").html("Collections")}}}}};l=function(){g(c).hide();g("#addCollection").on("click",function(m){d(g(this).attr("id"))});g("#viewCollections").on("click",function(m){d(g(this).attr("id"))});j()};j=function(){g(f).validate({errorClass:"invalid",submitHandler:function(){h()}})};return{init:function(){return l()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(d){var c,f,e,a,b=".module width_full",g="#login-form",h,i;c=function(){a={type:"POST",url:MMS.configObj.authenticate,data:d(g).serialize(),dataType:"json",cache:true,success:function(j){d(b).hide();f(j)}};d("h3#message").ajaxStart(function(){d("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(a)};f=function(j){if(j.isAuthenticated==="false"){d("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");d("#authenticate").removeAttr("disabled")}else{if(j.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};e=function(){d("#login-form").validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){d("#logout").click(function(){a={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(j){if(j.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(a)});return false};h=function(){e();i()};return{init:function(){h()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(f){var b,c,d,l,e,i,g,a,k,j,h="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";j={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};b=function(m){f("#content").empty();m.preventDefault();d=f("input#quickSearch").val();d=MMS.utils.sanitizeInput(d);if(d===""){return f("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}l=f("#search_box").serialize();f("#search").empty();f("#actionFeedback").empty();a={type:"GET",url:MMS.configObj.search,data:f("#search_box").serialize(),dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");MMS.view.createView(j);g(n)}}};MMS.utils.doAjax(a);return false};g=function(p){var m="";var q=[];var n="";var o=JSON.parse(sessionStorage.getItem("mms_profile"));f("#search_box")[0].reset();f("#search-message").text("You searched for: "+d);f(".current").html("Search Results");if(p.response.numFound===0){f("#search-forms").remove();f("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}m+="<div>";m+="<div>";m+="<table class='tablesorter' cellspacing='0'>";m+="<thead>";m+="<tr>";m+="<th>Records Found: "+p.response.numFound+"</th>";m+="<th>Actions</th>";m+="</tr>";m+="</thead>";m+="<tbody id='pages'>";f.each(p.response.docs,function(r,s){n+="<tr>";n+="<td width='85%'>";n+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";n+="<tr align='top'>";if(s.identifier_t[0]!==undefined){n+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+s.identifier_t[0]+"' alt='"+s.title_t[0]+"' border='1'></p></td>"}n+="<td width='40%' align='left'>";if(s.title_t!==undefined){n+="<p><strong>Title:</strong> "+s.title_t[0]+"</p>"}if(s.creator_t!==undefined){n+="<p><strong>Creator:</strong> "+s.creator_t[0]+"</p>"}n+="</td>";n+="</tr>";n+="</table>";n+="</td>";n+="<td width='28%'>";n+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+s.id+'", "search");\'>';if(o.roleID==="1"){n+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+s.id+"\"); return false;'>"}n+="</td>";n+="</tr>";q.push(n);n=""});m+="</tbody>";m+="</table>";m+="</div>";m+="</div>";f("#search").append(m);f("#search-results").show();MMS.pagination.init(q)};c=function(m){var n;f.each(m.spellcheck.suggestions,function(o,p){if(p!=="true"){if(p.suggestion!==undefined){f.each(p.suggestion,function(q,r){if(q===0){i=r.word.trim();n="<a href='#' id='didYouMeanSearch'>"+r.word.trim()+"</a>"}})}}});if(n!==undefined){f("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+n+"</h4>");f("#didYouMeanSearch").on("click",function(o){e()})}};e=function(){f("#search").empty();f("#searchActionFeedback").empty();var m=l.replace(d,i);d=i;a={type:"GET",url:MMS.configObj.search,data:m,dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");g(n)}}};MMS.utils.doAjax(a)};k=function(){f("#search-forms").hide();f("form.quick_search").submit(function(m){b(m)})};return{init:function(){return k()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(g){var c,j=1,d,e=4,b,a,f,k,h,i,l;d=function(){return Math.ceil(f/e)};b=function(){g("div.pagination").empty();var n="";n+="<ul id='pagination-flickr'>";n+="<li><a href='#' onclick='MMS.pagination.previous("+j+")'>Previous</a></li>";for(var m=1;m<=d();m++){if(m!==j){if(d()<=20){n+="<li><a href='#' onclick='MMS.pagination.renderPage("+m+"); return false;'>"+m+"</a></li>"}}else{n+="<li class='active'>"+m+"</li>";j=m}}n+="<li><a href='#' onclick='MMS.pagination.next("+j+")'>Next</a></li>";n+="</ul>";g("div.pagination").append(n)};h=function(n){if(n<d()){var m=n+1;a(m)}};i=function(n){if(n>1){var m=n-1;a(m)}};a=function(n){j=n;var n=(n-1);b();g("#pages").empty();for(var m=(n)*e;m<((n)*e)+e;m++){g("#pages").append(c[m])}};l=function(m){c=m;f=m.length;a(1)};return{init:function(m){return l(m)},renderPage:function(m){return a(m)},next:function(m){return h(m)},previous:function(m){return i(m)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(d){var e,g,c,a,b,f;b={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};e=function(){MMS.utils.focusForm("#batch-ingest-forms");a={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(h){MMS.view.createView(b);g(h)}};MMS.utils.doAjax(a);return false};g=function(h){d(".current").html("Batch");if(h.length===0){d("#batch-ingest-forms").remove();d("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var i="";i+="<div>";i+="<div>";i+="<table class='tablesorter' cellspacing='0'>";i+="<thead>";i+="<tr>";i+="<th>Batch Records</th>";i+="<th>Status</th>";i+="</tr>";i+="</thead>";i+="<tbody>";d.each(h,function(j,k){if(k.object!=""){i+="<input name='pids[]' type='hidden' value='"+k.pid+"' />"}i+="<tr>";i+="<td width='85%'>";i+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";i+="<tr align='top'>";if(k.object!=""){i+="<td width='30%' align='center'><p><img src='"+k.object+"' alt='"+k.title+"' border='1'></p></td>"}else{i+="<td width='30%' align='center'><p>No Object.</p></td>"}i+="<td width='40%' align='left'>";i+="<p><strong>Pid:</strong> "+k.pid+"</p>";i+="<p><strong>Title:</strong> "+k.title+"</p>";i+="<p><strong>Creator:</strong> "+k.creator+"</p>";i+="<p><strong>Identifier:</strong> "+k.identifier+"</p>";i+="</td>";i+="</tr>";i+="</table>";i+="</td>";if(k.object!=""){i+="<td width='28%'>complete.</td>"}else{i+="<td width='28%'>incomplete.</td>"}i+="</tr>"});i+="</tbody>";i+="</table>";i+="</div>";i+="</div>";d("#batch-ingest").empty().append(i);d("#batch-ingest-forms").show()};c=function(){a={type:"POST",url:MMS.configObj.batch,data:d("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(h){if(h.success===false){d("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){d("div#actionFeedback").empty()},4000)}else{d("#batch-ingest").empty();d("#batch-ingest-forms").remove();d("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){d("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(a);return false};f=function(){d("#batch-ingest-forms").hide();d("#batch").on("click",function(h){e(d(this).attr("id"))})};return{init:function(){return f()},ingest:function(){return c()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(b){var e,a,f,h,g,c,d;g={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};e=function(){f={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(i){MMS.view.createView(g);a(i)}};MMS.utils.doAjax(f)};a=function(i){b(".current").html("Xml");var j="";j+="<div class='tab_container'>";j+="<div id='tab1' class='tab_content'>";j+="<table class='tablesorter' cellspacing='0'>";j+="<thead>";j+="<tr>";j+="<th>XML File</th>";j+="<th>Actions</th>";j+="</tr>";j+="</thead>";j+="<tbody>";b.each(i,function(k,l){j+="<input name='xmlFiles[]' type='hidden' value='"+l.fileName+"' />";j+="<tr>";j+="<td>"+l.fileName+"</td>";j+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+l.fileName+"\"); return false;'></td>";j+="</tr>"});j+="</tbody>";j+="</table>";j+="</div>";j+="</div>";b("#xml").append(j);b("#xml-forms").show()};h=function(i){var j=[];for(var k in i){j.push(i[k].name)}f={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:j},dataType:"json",cache:false,success:function(l){b("#xml-forms").remove();if(l.created==="true"){b("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},5000)}else{b("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){b("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(f)};c=function(){MMS.view.createView(g);f={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(i){b("#xml").append(i)}};MMS.utils.doAjax(f)};d=function(){b("#view_xml").on("click",function(){e()})};return{init:function(){return d()},saveXml:function(i){return h(i)},createUploadArea:function(){return c()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(d){var b,e,a,c;b={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};e=function(){a={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(f){c(f)}};MMS.utils.doAjax(a);return false};c=function(f){d(".current").html("Review Queue");d("#search-results").empty();MMS.view.createView(b);if(f.length===0){d("#queue-forms").remove();d("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var g="";g+="<div class='tab_container'>";g+="<div id='tab1' class='tab_content'>";g+="<table class='tablesorter' cellspacing='0'>";g+="<thead>";g+="<tr>";g+="<th>Pid</th>";g+="<th>Title</th>";g+="<th>Created By</th>";g+="<th>Date Created</th>";g+="<th>Actions</th>";g+="</tr>";g+="</thead>";g+="<tbody>";d.each(f,function(h,i){g+="<tr>";g+="<td>"+i.pid+"</td>";g+="<td>"+i.title+"</td>";g+="<td>"+i.name+"</td>";g+="<td>"+i.timestamp+"</td>";g+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+i.pid+'", "queue");\'</td>';g+="</tr>"});g+="</tbody>";g+="</table>";g+="</div>";g+="</div>";d("#search-results").empty();d("#queue").append(g)};return{getItems:function(){e()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(b){var a;a=function(c){var d="";d+='<div id="actionFeedback"></div>';d+='<div id="error"></div>';d+='<article id="'+c.articleID+'" class="'+c.articleClass+'">';d+="<header>";if(c.h3ID!=="null"){d+='<h3 id="'+c.h3ID+'">'+c.h3Value+"</h3>"}if(c.header!=="null"){d+=c.header}d+="</header>";d+='<form id="'+c.formID+'">';d+='<div id="'+c.divID+'" class="'+c.divClass+'"></div>';d+="<footer>";if(c.footer!=="null"){d+=c.footer}d+="</footer>";d+="</form>";d+="</article>";b("#"+c.content).empty().append(d)};return{createView:function(c){a(c)}}}(jQuery));$(function(){var a={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(a))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(e){var f=e.split("."),g=MMS,h;if(f[0]==="MMS"){f=f.slice(1)}for(h=0;h<f.length;h+=1){if(typeof g[f[h]]==="undefined"){g[f[h]]={}}g=g[f[h]]}return g};MMS.namespace("MMS.utils");MMS.utils=(function(h){var i,g,k,j,l;j={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};i=function(a){a.timeout=5000;a.error=function(c,b){h("#error").html("<h4 class='alert_error'>An error has occurred ("+b+").  Please contact library-support@du.edu for assistance.</h4>")};a.statusCode={403:function(){alert("Session expired");MMS.view.createView(j);h("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};h(document).ajaxStart(function(){h.fancybox.showLoading()});h(document).ajaxStop(function(){h.fancybox.hideLoading()});h.ajax(a)};k=function(){var a={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(b){if(typeof b===null||b.isFedoraUp!==200||b.isSolrUp!=="OK"){h("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");h("#authenticate").attr("disabled","disabled")}}};i(a)};l=function(a){return a.replace(/</g,"").replace(/>/g,"")};g=function(a){if(a!=="#metadata-forms"){h(".optional_fields").hide();h("#optional_fields").hide()}h("article:not("+a+", .breadcrumbs)").hide()};return{doAjax:function(a){i(a)},focusForm:function(a){g(a)},sanitizeInput:function(a){return l(a)},pingServices:function(){k()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(R){var W,F,D,G,z,T,C,J,L,B,S,Q,N,P,K,U,A,X,O,E,H,V,M,I;I={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};Q=function(){var a="";a+='<article id="controlled-vocabulary-section" class="module width_quarter">';a+="<header><h3>Controlled Vocabularies</h3></header>";a+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';a+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';a+="<p>";a+='<select id="vocab-options" name="vocab-options">';a+='<option value="ulan" selected>ULAN</option>';a+='<option value="aat">AAT</option>';a+='<option value="locnames">LC-Names</option>';a+='<option value="locsubjects">LC-Subjects</option>';a+='<option value="aloracreators">Alora-Creators</option>';a+='<option value="alorasubjects">Alora-Subjects</option>';a+="</select>&nbsp;";a+='<input id="getVocabularies" type="submit" value="Go" />';a+="</p>";a+="</div>";a+='<div id="vocabulary-results"></div>';a+="</article>";return a};V=function(){R("#search-results").empty();MMS.view.createView(I);N();H();R(".current").html("Creator");R("#controlled-vocabulary-form").show()};M=function(){R("#search-results").empty();MMS.view.createView(I);E();H();R(".current").html("Subject");R("#controlled-vocabulary-form").show()};H=function(){R("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){X()}})};X=function(){J={type:"POST",url:MMS.configObj.creatorapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(J)};O=function(){J={type:"POST",url:MMS.configObj.subjectapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(J)};E=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Subject";a+="</label>";a+="<input id='subject' name='subject[]' type='text' class='required' />";a+="</fieldset>";a+="<label>";R("#controlledvocabulary").append(a)};N=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Creator";a+="</label>";a+="<input id='creator' name='creator[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Creator Alternative";a+="</label>";a+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Nationality";a+="</label>";a+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Role";a+="</label>";a+="<input id='description-role' name='description.role[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Biography";a+="</label>";a+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Sex";a+="</label>";a+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Source";a+="</label>";a+="<input id='source' name='source' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Earliest Date";a+="</label>";a+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Latest Date";a+="</label>";a+="<input id='latestdates' name='latestdates' type='text' class='required' />";a+="</fieldset>";R("#controlledvocabulary").append(a)};L=function(){return sessionStorage.getItem("roleID")};W=function(){var a,b=R("input#vocabTerm").val(),c=R("select#vocab-options");b=MMS.utils.sanitizeInput(b);if(c.length>0){a=c.val()}J={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+b+"&option="+a,dataType:"json",cache:true,success:function(d){G(a,d)}};MMS.utils.doAjax(J)};B=function(c,b,d){var a="id="+c+"&vocabType="+b;if(d===undefined){var d=function(e){S(c,e)}}J={type:"GET",url:MMS.configObj.vocabUrl,data:a,dataType:"json",cache:true,success:d};MMS.utils.doAjax(J)};S=function(c,b){var a="",d=R("span#"+c+"-toggle").text();if(d==="( + )"){R("span#"+c+"-toggle").text("( - )");R("div#"+c+"-vocab-data").show()}else{if(d==="( - )"){R("div#"+c+"-vocab-data").hide();R("span#"+c+"-toggle").text("( + )")}}R.each(b,function(f,e){if(e.subject_id!==undefined){a+="<p><strong>Subject id:</strong> "+e.subject_id+"</p>"}if(e.nationalities!==""){a+="<p><strong>Nationality:</strong> "+e.nationalities+"</p>"}if(e.role_id!==""){a+="<p><strong>Role:</strong> "+e.role_id+"</p>"}if(e.preferred_terms_source_id!==""){a+="<p><strong>Source:</strong> "+e.preferred_terms_source_id+"</p>"}if(e.non_preferred_terms_term_text!==""){a+="<p><strong>Alternative name:</strong> "+e.non_preferred_terms_term_text+"</p>"}if(e.preferred_biographies_biography_text!==""){a+="<p><strong>Bio:</strong> "+e.preferred_biographies_biography_text+"</p>"}if(e.preferred_biographies_birth_date!==""){a+="<p><strong>Birth date:</strong> "+e.preferred_biographies_birth_date+"</p>"}if(e.preferred_biographies_death_date!==""){a+="<p><strong>Death date:</strong> "+e.preferred_biographies_death_date+"</p>"}if(e.preferred_biographies_sex!==""){a+="<p><strong>Sex:</strong> "+e.preferred_biographies_sex+"</p>"}});R("div#"+c+"-vocab-data").empty().append(a)};C=function(c,a,b){var d;while(a<50){d=R("#"+b+"-"+a).val();if(d===""){R("#"+b+"-"+a).val(c);break}a++}return d};T=function(i,g){var h,d,c,j,f,e=1,a=function(k){A(k)},b=R("select#vocab-options");if(L()=="2"){R("#"+i).removeAttr("disabled");R("#"+i).attr("readonly","readonly")}if(b.length>0){f=b.val()}if(f==="ulan"||f==="locnames"||f==="aloracreators"){if(f!=="locnames"){B(i,f,a)}h=R("#creator-0").val();if(h===""){C(g,0,"creator")}else{d=R("#coverage-spatial-repository-0").val(g);if(d===""){C(g,0,"coverage-spatial-repository")}else{C(g,e,"coverage-spatial-repository")}}}else{if(f==="aat"||f==="locsubjects"||f==="alorasubjects"){j=R("#coverage-temporal-styleperiod-0").val();if(j===""){C(g,0,"coverage-temporal-styleperiod")}else{j=C(g,e,"coverage-temporal-styleperiod")}if(j===undefined){c=R("#subject-0").val();if(c===""){C(g,0,"subject")}else{C(g,e,"subject")}}}}};A=function(b){var a="";R.each(b,function(d,c){a+='<input name="creator.alternative[]" type="hidden" value="'+c.non_preferred_terms_term_text+'" />';a+='<input name="description.creatorbio[]" type="hidden" value="'+c.preferred_biographies_biography_text+'" />';a+='<input name="description.nationality[]" type="hidden" value="'+c.nationalities+'" />';a+='<input name="description.role[]" type="hidden" value="'+c.role_id+'" />';a+='<input name="description.lifedates[]" type="hidden" value="'+c.preferred_biographies_birth_date+"-"+c.preferred_biographies_death_date+'" />';a+='<input name="source[]" type="hidden" value="'+c.preferred_terms_source_id+'" />'});R("div#metadata").append(a)};G=function(d,c){var b,a="";if(d==="ulan"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+F+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"ulan\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="aat"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+F+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="locnames"||d==="locsubjects"){b=c.loc;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+F+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+F+", $(this).text());return false;'>"+c.loc[f].title+"</a><br /><a href='#'>"+e.id+"</a></li></ul></p>"})}else{if(d==="aloracreators"||d==="alorasubjects"){b=c.local;if(b.message!==undefined){a+="<p><ul><li>No results found.</li></ul></p>";R("div#vocabulary-results").empty().append(a);return}R.each(b,function(f,e){if(d==="aloracreators"){a+="<p><ul><li><a href='#' id='"+F+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"local\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{a+="<p><ul><li><a href='#' id='"+F+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}R("div#vocabulary-results").empty().append(a)};z=function(){R("#controlled-vocabulary-section").show();var a=Q();R("#content").append(a);R("input#vocabTerm").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("select#vocab-options").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("input#getVocabularies").on("click",function(){W()})};K=function(){R("select#type-arttypes").val("");R("select#type-timeperiods").val("");R("select#type-instructors").val("")};P=function(c){var b=["arttypes","timeperiods","instructors"],d={},a;if(c===undefined){c=function(e){U(e)}}for(a=0;a<b.length;a++){d.type="GET";d.url=MMS.configObj.vocabUrl;d.data="vocabType="+b[a];d.dataType="json";d.cache=true;d.success=c;MMS.utils.doAjax(d)}};U=function(f){var f=R.parseJSON(f);var e;var d;var b=sessionStorage.getItem("arttypes");var a=sessionStorage.getItem("timeperiods");var c=sessionStorage.getItem("instructors");e="<option value=''>---Select an term---</option>";R.each(f,function(h,g){if(g.type){d=g.type}if(g.term===b||g.term===a||g.term===c){e+="<option value='"+g.term+"' selected>"+g.term+"</option>"}else{e+="<option value='"+g.term+"'>"+g.term+"</option>"}});R("select#type-"+d).html(e)};D=function(){R("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){W()},displayControlledVocabulariesBox:function(b,a){z(b,a)},selectVocabularyTerm:function(a,b){T(a,b)},getTermData:function(a,b){B(a,b)},getLists:function(){P()},resetLists:function(){K()},loadCreatorForm:function(){V()},loadSubjectForm:function(){M()},init:function(){D()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(R){var af,Y,N,ac,K,S,ah="#metadata",O="#metadata-form",ab="#metadata-forms",T,U,M,J,F,Q,I,ae,ag,P,H,W,V,aj,X,ai,ad,aa,Z,L,G;af={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};Y=function(a){var b=M(ai,"displayOrder");R.each(b,function(d,c){J=T(c);J.appendTo(ah)});R(ah).append("<input name='objectType' type='hidden' value='"+a+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};aa=function(c){var b;var a;if(c==="queue"){a="Back to Review Queue"}else{if(c==="search"){R("#search-results").hide();a="Back to Search Results"}}b="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+c+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+a+"</a>";return b};Z=function(a){if(a==="queue"){MMS.queue.getItems()}else{if(a==="search"){R("#search-results").show();R("#content").empty()}}R("#clone-record").empty();R("#controlled-vocabulary-section").hide();return};N=function(g,f,b){var i=100,d="",c,h;R(".current").html("Edit Metadata");R(ah).empty();d+="<div id='edit-mode'></div>";d+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";d+="<fieldset id='isPid'>";d+="<label>pid</label>";d+="<input type='text' value='"+f+"'  disabled />";d+="</fieldset>";if(b==="queue"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}else{if(b==="search"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}}ai=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var e=M(ai,"displayOrder");R.each(e,function(k,j){R.each(g,function(l,n){if(j.element===l){c=l.replace(".","-");if(typeof n==="string"){d+="<fieldset class='"+c+"-0'>";if(j.repeat==="true"){d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+l+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+l+"'><span>Add</span></a></span></label>"}else{d+="<label>"+j.label+"</label>"}if(j.type==="select"){if(j.required==="true"){var m="class='required"}if(j.element==="type.arttype"){sessionStorage.setItem("arttypes",n)}else{if(j.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",n)}else{if(j.element==="instructor"){sessionStorage.setItem("instructors",n)}}}d+="<select name='"+j.element+"[]' id='"+j.id+"' "+m+"'></select>"}if(j.type==="text"){d+="<input id='"+l+"-"+i+"' name='"+l+"[]' type='text' value='"+n+"' "+m+" />"}if(j.type==="textarea"){d+="<textarea id='"+l+"-"+i+"' name='"+l+"[]' rows='7' cols='55' "+m+">"+n+"</textarea> "}d+="</fieldset>"}if(typeof n==="object"){R.each(n,function(o,p){i++;if(i>101){d+="<fieldset class='"+c+"-"+i+"'>"}else{d+="<fieldset class='"+c+"-0'>"}if(j.repeat==="true"){if(i>101){d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+l+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+l+"'><span>Del</span></a></span></label>"}else{d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+l+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+l+"'><span>Add</span></a></span></label>"}}else{d+="<label>"+j.label+"</label>"}if(j.type==="text"){d+="<input id='"+l+"-"+i+"' name='"+l+"[]' type='text' value='"+p+"' "+m+" />"}if(j.type==="textarea"){d+="<textarea id='"+l+"-"+i+"' name='"+l+"[]' rows='7' cols='55' "+m+">"+p+"</textarea> "}d+="</fieldset>"})}}})});R.each(g,function(k,j){if(k==="collection"){d+="<input id='"+k+"-0' name='collection' type='hidden' value='"+j+"' />"}else{if(k==="identifier.system"){d+="<input id='"+k+"' class='pid' name='pid' type='hidden' value='"+j+"' />"}else{if(k==="identifier.legacy"){d+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+j+"' />"}else{if(k==="identifier.master"){d+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+j+"' />"}else{if(k==="objectType"){h=j;d+="<input name='"+k+"' type='hidden' value='"+j+"' />"}else{if(k==="date.created"){d+="<fieldset>";d+="<label class='datecreated'>"+k+"</label>";d+="<input class='datecreated' type='text' value='"+j+"' disabled />";d+="<input class='datecreated' name='"+k+"[]' type='hidden' value='"+j+"'/>";d+="</fieldset>"}else{if(k==="date.modified"){d+="<fieldset>";d+="<label class='datemodified'>"+k+"</label>";d+="<input class='datemodified' type='text' value='"+j+"' disabled />";d+="</fieldset>"}}}}}}}});R.each(e,function(k,j){if(j.required==="false"){d+="<fieldset class='"+j.id+"-0' style='display:none;'>";d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+j.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+j.element+"'><span>Del</span></a></span></label>";if(j.type==="text"){d+="<input id='"+j.id+"-0' name='"+j.element+"[]' type='"+j.type+"' value='' />"}else{if(j.type==="textarea"){d+="<textarea id='"+j.id+"-0' name='"+j.element+"[]' rows='7' cols='55'></textarea> "}}d+="</fieldset>"}});af.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(af);var a=aa(b);R("#pid").append(a);R(ah).append(d);ag();R(".optional_fields").show();R("#optional_fields").show();R(ab).show();ac()};S=function(i,h){var e,a=h.split("-"),b=a[a.length-2],d,f,g,c=[];if(a[a.length-1]==="clone"){a.pop();a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");f=f.replace(".","-");e=function(){R.each(ai,function(k,j){g=j.element.replace(".","-");g=g.replace(".","-");if(f===g){K(i,j)}})};Q(e)}else{if(a[a.length-1]==="remove"){a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");if(b==="0"){e=function(){R("#"+f).val("");R("."+f).hide()}}else{e=function(){R("."+h).remove()}}I(e)}}};ae=function(b,a){b.preventDefault();b.stopPropagation();a=a.replace("-remove","");R("."+a).remove()};I=function(a){a()};Q=function(a){a()};L=function(a){a=a.replace("-clear","");R("#"+a).val("")};T=function(a){var c=JSON.parse(sessionStorage.getItem("mms_profile"));var e="";var b="";if(a.type==="select"){if(a.required==="true"){var d="class='required"}e+="<fieldset class='"+a.id+"-"+MMS.counterObj.count+"'>";e+="<label for='"+a.id+"'>"+a.label+"</label>";e+="<select name='"+a.element+"[]' id='"+a.id+"' "+d+"'></select>";e+="</fieldset>"}else{if(a.vocabulary==="true"&&c.roleID=="2"){b="&nbsp;&nbsp;<a href='#' id='"+a.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}e+="<fieldset class='"+a.id+"-"+MMS.counterObj.count+"'>";e+="<label>";e+=a.label;if(a.repeat==="true"){e+="<span class='clone'><a href='#' id='"+a.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+a.element+"'><span>Add</span></a></span>"}else{if(a.repeat==="false"){e+="<a href='#' id='"+a.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(a.required==="false"){e+="<span class='remove'><a href='#' id='"+a.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+a.element+"'><span>Del</span></a></span>"}e+="</label>"+b;if(a.type==="text"){e+="<input "}else{if(a.type==="textarea"){e+="<textarea "}}e+="id='"+a.id+"-"+MMS.counterObj.count+"'";e+="name='"+a.element+"[]' ";e+="type='"+a.type+"' ";if(a.vocabulary==="true"&&c.roleID=="2"){e+="disabled='disbled'"}e+="class='";if(a.required==="true"){e+="required"}e+="'";if(a.type==="text"){e+="/>"}else{if(a.type==="textarea"){e+="rows='14' cols='45'></textarea>"}}e+="</fieldset>"}if(a.required==="true"){F=R(e)}else{if(a.required==="false"){F=R(e).hide()}}return F};ac=function(){R("#optional_fields").empty();R.each(ai,function(a,c){if(c.required==="false"){var b="<li class='icn_categories'><a href='#'>"+c.label+"</a></li>";U=R(b).on("click","a",function(d){d.preventDefault();MMS.metadata.appendOptionalField(c)});U.appendTo("#optional_fields")}})};G=function(a){R("."+a.id+"-0").show();location.hash="#"+a.id+"-0"};K=function(a,b){a.preventDefault();a.stopPropagation();var c=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var d="";var e="";e+="<fieldset class='"+b.id+"-"+MMS.counterObj.count+"'>";e+="<label>";e+=b.label;e+="&nbsp;<span class='remove'><a href='#' id='"+b.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+b.element+"'><span>Del</span></a></span>";if(b.vocabulary==="true"){}e+="</label>";if(b.type==="text"){e+="<input "}else{if(b.type==="textarea"){e+="<textarea "}}e+="id='"+b.id+"-"+MMS.counterObj.count+"'";e+="name='"+b.element+"[]' ";e+="type='"+b.type+"' ";if(b.vocabulary==="true"&&c.roleID=="2"){e+="disabled='disabled'"}e+="class='none ";e+="'";if(b.type==="text"){e+="/>"}else{if(b.type==="textarea"){e+="rows='10' cols='45'></textarea>"}}e+="</fieldset>";d=R(e).insertAfter("."+b.id+"-0");return d};P=function(){var a=JSON.parse(sessionStorage.getItem("mms_profile"));if(a.roleID==="2"){V={type:"PUT",url:MMS.configObj.queue,data:R(O).serialize(),dataType:"json",cache:true,success:function(d){R("#metadata-form").find("input[type=text], textarea").val("");R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(V);return}var c=R(".pid").val();var b=R("#type").val();V={type:"PUT",url:MMS.configObj.repository,data:R(O).serialize(),dataType:"json",cache:false,success:function(d){if(d.updated==="true"){V={type:"GET",url:MMS.configObj.repository,data:"pid="+c,dataType:"json",cache:true,success:function(f,e){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false;N(f,c,e)}};MMS.utils.doAjax(V)}else{if(d.created==="true"){R("#metadata-form").find("input[type=text], textarea").val("");R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){R("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(V)};aj=function(b,a,c){b.preventDefault();V={type:"GET",url:MMS.configObj.repository,data:"pid="+a,dataType:"json",cache:false,success:function(d){N(d,a,c)}};MMS.utils.doAjax(V)};ad=function(){var a=R(".pid").val();R(".pid").remove();R("#isPid").remove();R(".datecreated").remove();R(".datemodified").remove();R("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+a+".</h4>");setTimeout(function(){R("div#actionFeedback").remove()},10000)};ag=function(){R(O).validate({errorClass:"invalid",submitHandler:function(){P()}})};X=function(b,c){b.preventDefault();var a=confirm("Are you sure you want to delete this record?");if(a){V={type:"POST",url:MMS.configObj.repository,data:"pid="+c,dataType:"json",cache:true,success:function(d){if(d.deleted==="true"){R("#search-forms").hide();R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(V)}return false};M=function(d,a){var c=[];for(var b in d){c.push(d[b])}return c.sort(function(h,e){var f=h[a];var g=e[a];return((f<g)?-1:((f>g)?1:0))})};H=function(a){MMS.counterObj.count=0;R("#search-results").empty();MMS.view.createView(af);if(a==="image"){var b=[];ai=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));Y(a);ac()}ag();R(".current").html(a+" metadata");R("#clone-record").remove();R(ab).show();R(".optional_fields").show();R("#optional_fields").show();R("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};W=function(){R(ab).hide();R(".optional_fields").hide();R(".formType").on("click",function(a){H(R(this).attr("id"))})};return{getMetadata:function(b,a,c){aj(b,a,c)},deleteMetadata:function(a,b){X(a,b)},removeClonedField:function(b,a){ae(b,a)},constructFieldEvent:function(b,a){S(b,a)},cloneRecord:function(a){ad(a)},back:function(a){Z(a)},createMetadataEditForm:function(c,a,b){N(c,a,b)},appendOptionalField:function(a){G(a)},clearField:function(a){L(a)},loadForm:function(a){H(a)},init:function(){W()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(M){var B="#user",G="#user-form",P="#user-forms",E,H,w,I,y,O,v,N,A,F,D,L,J,K,z,x,C;C={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};y=function(){M(G).validate({errorClass:"invalid",submitHandler:function(){N()}})};H=function(){C.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(C);var d="";var b="";var f="";var h="";var e="";var c="";var a="";b+="<fieldset>";b+="<label>";b+="* First Name";b+="</label>";b+="<input id='firstName' name='firstName' type='text' class='required' />";b+="</fieldset>";f+="<fieldset>";f+="<label>";f+="* Last Name";f+="</label>";f+="<input id='lastName' name='lastName' type='text' class='required' />";f+="</fieldset>";h+="<fieldset>";h+="<label>";h+="* DU ID";h+="</label>";h+="<input id='duID' name='duID' type='text' class='required' />";h+="</fieldset>";J={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(i){c+="<fieldset>";c+="<label for='roleID'>* Roles</label>";c+="<select name='roleID' id='roleID' class='required'>";c+="<option value=''>---Assign a role--</option>";M.each(i,function(k,j){if(k!="3"){c+="<option value='"+k+"'>"+j+"</option>"}});c+="</select>";c+="</fieldset>";M(B).append(c)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){K={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(i){a+="<strong>* Assign a Collection</strong>";M.each(i,function(k,j){a+="<p><input id='"+j.collectionID+"' name='collections[]' type='radio' value='"+j.collectionID+"' /><label for='"+j.collectionID+"'>"+j.title+"</label></p>"});M(B).append(a)}};MMS.utils.doAjax(K)}else{a+="<input id='"+g.collectionID+"' name='collections[]' type='hidden' value='"+g.collectionID+"' />";d+=a}MMS.utils.doAjax(J);d+=b;d+=f;d+=h;M(B).append(d);y()};I=function(){C.footer="null";MMS.view.createView(C);F={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>First Name</th>";a+="<th>Last Name</th>";a+="<th>Role</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";M.each(b,function(d,c){a+="<tr>";a+="<td>"+c.firstName+"</td>";a+="<td>"+c.lastName+"</td>";a+="<td>"+c.roleName+"</td>";if(c.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+c.id+");'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";M(B).append(a)}};MMS.utils.doAjax(F)};w=function(d){var a="";var b="";var e="";var c="";C.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(C);M(".current").html("Edit User");z={type:"GET",url:MMS.configObj.users,data:"id="+d,dataType:"json",cache:false,async:false,success:function(f){a+="<input name='userID' type='hidden' value='"+d+"' />";a+="<fieldset>";a+="<label>";a+="* First Name";a+="</label>";a+="<input id='firstName' name='firstName' type='text' value='"+f[0].firstName+"' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Last Name";a+="</label>";a+="<input id='lastName' name='lastName' type='text' value='"+f[0].lastName+"' class='required' />";a+="</fieldset>";M(B).append(a);J={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(h){b+="<fieldset>";b+="<label for='roleID'>* Roles</label>";b+="<select name='roleID' id='roleID' class='required'>";b+="<option value=''>---Assign a role--</option>";M.each(h,function(j,i){if(f[0].roleID===j){b+="<option value='"+j+"' selected>"+i+"</option>"}else{if(j!="3"){b+="<option value='"+j+"'>"+i+"</option>"}}});b+="</select>";b+="</fieldset>";M(B).append(b)}};var g=JSON.parse(sessionStorage.getItem("mms_profile"));if(g.roleID=="3"){K={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(h){e+="<strong>* Assigned Collection</strong>";M.each(h,function(j,i){if(f[1].collectionID===i.collectionID){e+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' checked /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}else{e+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}})}};MMS.utils.doAjax(K)}else{e+="<input name='collectionID' type='hidden' value='"+g.collectionID+"' />"}M(B).append(e);MMS.utils.doAjax(J);c+="<label>";c+="isActive";c+="</label>";if(f[0].isActive=="1"){c+="<input id='isActive' name='isActive' type='checkbox' value='"+f[0].isActive+"' checked />"}else{c+="<input id='isActive' name='isActive' type='checkbox' value='"+f[0].isActive+"' />"}M(B).append(c)}};MMS.utils.doAjax(z);y()};N=function(){D={type:"PUT",url:MMS.configObj.users,data:M(G).serialize(),dataType:"json",cache:false,success:function(a){if(a.updated==="true"){I()}else{if(a.updated==="false"){alert("Error: Update failed.")}else{M("#user-form")[0].reset()}}}};MMS.utils.doAjax(D)};A=function(a){var b=confirm("Are you sure you want to delete this user?");if(b){L={type:"POST",url:MMS.configObj.users,data:"userID="+a,dataType:"json",cache:false,success:function(c){if(c.deleted==="true"){I()}else{if(c.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(L)}};E=function(){x={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(b){sessionStorage.setItem("mms_profile",JSON.stringify(b));var a=JSON.parse(sessionStorage.getItem("mms_profile"));var c=a.firstName+" "+a.lastName+" ("+a.roleName+")";M("#user-role").append(c)}};MMS.utils.doAjax(x)};O=function(a){if(a==="addUser"){H();M("#search-results").empty();M(".current").html("Add User")}else{if(a==="viewUsers"){I();M("#search-results").empty();M(".current").html("Users")}}};v=function(){M(P).hide();M("#addUser").on("click",function(a){O(M(this).attr("id"))});M("#viewUsers").on("click",function(a){O(M(this).attr("id"))})};return{init:function(){return v()},constructUserEditForm:function(a){return w(a)},deleteUserData:function(a){return A(a)},getSessionInfo:function(){return E()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(x){var v="#collection",m="#collection-form",p="#collection-forms",n,q,u,o,s,w,r,t;t={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};n=function(){MMS.view.createView(t);var f="";var a="";var b="";var e="";var c="";a+="<fieldset>";a+="<label>";a+="* Title";a+="</label>";a+="<input id='title' name='title' type='text' class='required' />";a+="</fieldset>";b+="<fieldset>";b+="<label>";b+="* Description";b+="</label>";b+="<input id='description' name='description' type='text' class='required' />";b+="</fieldset>";c+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";f+=a;f+=b;f+=c;x(v).append(f);var d={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(g){e+="<fieldset>";e+="<label>";e+="* Object Type";e+="</label>";e+="<br />";x.each(g,function(i,h){e+="<p><input id='"+h.objectType+"' name='objectType[]' type='checkbox' value='"+h.objectTypeID+"' /> "+h.objectType+"</p>"});e+="</fieldset>";x(v).append(e)}};MMS.utils.doAjax(d)};q=function(){MMS.view.createView(t);r={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Collection Name</th>";a+="<th>Description</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";x.each(b,function(d,c){a+="<tr>";a+="<td>"+c.title+"</td>";a+="<td>"+c.description+"</td>";if(c.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+c.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+c.collectionID+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";x(v).append(a)}};MMS.utils.doAjax(r)};w=function(){r={type:"PUT",url:MMS.configObj.collections,data:x(m).serialize(),dataType:"json",cache:false,success:function(a){x(m)[0].reset()}};MMS.utils.doAjax(r)};o=function(a){if(a==="addCollection"){n();x(".current").html("Add Collection")}else{if(a==="editCollection"){}else{if(a==="deleteCollection"){}else{if(a==="viewCollections"){q();x(".current").html("Collections")}}}}};s=function(){x(p).hide();x("#addCollection").on("click",function(a){o(x(this).attr("id"))});x("#viewCollections").on("click",function(a){o(x(this).attr("id"))});u()};u=function(){x(m).validate({errorClass:"invalid",submitHandler:function(){w()}})};return{init:function(){return s()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(o){var p,m,n,r,q=".module width_full",l="#login-form",k,j;p=function(){r={type:"POST",url:MMS.configObj.authenticate,data:o(l).serialize(),dataType:"json",cache:true,success:function(a){o(q).hide();m(a)}};o("h3#message").ajaxStart(function(){o("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(r)};m=function(a){if(a.isAuthenticated==="false"){o("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");o("#authenticate").removeAttr("disabled")}else{if(a.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};n=function(){o("#login-form").validate({errorClass:"invalid",submitHandler:function(){p()}})};j=function(){o("#logout").click(function(){r={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(a){if(a.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(r)});return false};k=function(){n();j()};return{init:function(){k()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(m){var q,p,o,s,n,v,x,r,t,u,w="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";u={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};q=function(a){m("#content").empty();a.preventDefault();o=m("input#quickSearch").val();o=MMS.utils.sanitizeInput(o);if(o===""){return m("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}s=m("#search_box").serialize();m("#search").empty();m("#actionFeedback").empty();r={type:"GET",url:MMS.configObj.search,data:m("#search_box").serialize(),dataType:"json",cache:true,success:function(b){if(b.error==500){m("#error").html(w)}else{m("#error").html("");MMS.view.createView(u);x(b)}}};MMS.utils.doAjax(r);return false};x=function(d){var b="";var c=[];var a="";var e=JSON.parse(sessionStorage.getItem("mms_profile"));m("#search_box")[0].reset();m("#search-message").text("You searched for: "+o);m(".current").html("Search Results");if(d.response.numFound===0){m("#search-forms").remove();m("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}b+="<div>";b+="<div>";b+="<table class='tablesorter' cellspacing='0'>";b+="<thead>";b+="<tr>";b+="<th>Records Found: "+d.response.numFound+"</th>";b+="<th>Actions</th>";b+="</tr>";b+="</thead>";b+="<tbody id='pages'>";m.each(d.response.docs,function(g,f){a+="<tr>";a+="<td width='85%'>";a+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";a+="<tr align='top'>";if(f.identifier_t[0]!==undefined){a+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+f.identifier_t[0]+"' alt='"+f.title_t[0]+"' border='1'></p></td>"}a+="<td width='40%' align='left'>";if(f.title_t!==undefined){a+="<p><strong>Title:</strong> "+f.title_t[0]+"</p>"}if(f.creator_t!==undefined){a+="<p><strong>Creator:</strong> "+f.creator_t[0]+"</p>"}a+="</td>";a+="</tr>";a+="</table>";a+="</td>";a+="<td width='28%'>";a+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+f.id+'", "search");\'>';if(e.roleID==="1"){a+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+f.id+"\"); return false;'>"}a+="</td>";a+="</tr>";c.push(a);a=""});b+="</tbody>";b+="</table>";b+="</div>";b+="</div>";m("#search").append(b);m("#search-results").show();MMS.pagination.init(c)};p=function(b){var a;m.each(b.spellcheck.suggestions,function(d,c){if(c!=="true"){if(c.suggestion!==undefined){m.each(c.suggestion,function(f,e){if(f===0){v=e.word.trim();a="<a href='#' id='didYouMeanSearch'>"+e.word.trim()+"</a>"}})}}});if(a!==undefined){m("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+a+"</h4>");m("#didYouMeanSearch").on("click",function(c){n()})}};n=function(){m("#search").empty();m("#searchActionFeedback").empty();var a=s.replace(o,v);o=v;r={type:"GET",url:MMS.configObj.search,data:a,dataType:"json",cache:true,success:function(b){if(b.error==500){m("#error").html(w)}else{m("#error").html("");x(b)}}};MMS.utils.doAjax(r)};t=function(){m("#search-forms").hide();m("form.quick_search").submit(function(a){q(a)})};return{init:function(){return t()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(x){var p,u=1,o,n=4,q,r,m,t,w,v,s;o=function(){return Math.ceil(m/n)};q=function(){x("div.pagination").empty();var a="";a+="<ul id='pagination-flickr'>";a+="<li><a href='#' onclick='MMS.pagination.previous("+u+")'>Previous</a></li>";for(var b=1;b<=o();b++){if(b!==u){if(o()<=20){a+="<li><a href='#' onclick='MMS.pagination.renderPage("+b+"); return false;'>"+b+"</a></li>"}}else{a+="<li class='active'>"+b+"</li>";u=b}}a+="<li><a href='#' onclick='MMS.pagination.next("+u+")'>Next</a></li>";a+="</ul>";x("div.pagination").append(a)};w=function(a){if(a<o()){var b=a+1;r(b)}};v=function(a){if(a>1){var b=a-1;r(b)}};r=function(a){u=a;var a=(a-1);q();x("#pages").empty();for(var b=(a)*n;b<((a)*n)+n;b++){x("#pages").append(p[b])}};s=function(a){p=a;m=a.length;r(1)};return{init:function(a){return s(a)},renderPage:function(a){return r(a)},next:function(a){return w(a)},previous:function(a){return v(a)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(j){var i,n,k,m,l,h;l={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};i=function(){MMS.utils.focusForm("#batch-ingest-forms");m={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(a){MMS.view.createView(l);n(a)}};MMS.utils.doAjax(m);return false};n=function(b){j(".current").html("Batch");if(b.length===0){j("#batch-ingest-forms").remove();j("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var a="";a+="<div>";a+="<div>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Batch Records</th>";a+="<th>Status</th>";a+="</tr>";a+="</thead>";a+="<tbody>";j.each(b,function(d,c){if(c.object!=""){a+="<input name='pids[]' type='hidden' value='"+c.pid+"' />"}a+="<tr>";a+="<td width='85%'>";a+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";a+="<tr align='top'>";if(c.object!=""){a+="<td width='30%' align='center'><p><img src='"+c.object+"' alt='"+c.title+"' border='1'></p></td>"}else{a+="<td width='30%' align='center'><p>No Object.</p></td>"}a+="<td width='40%' align='left'>";a+="<p><strong>Pid:</strong> "+c.pid+"</p>";a+="<p><strong>Title:</strong> "+c.title+"</p>";a+="<p><strong>Creator:</strong> "+c.creator+"</p>";a+="<p><strong>Identifier:</strong> "+c.identifier+"</p>";a+="</td>";a+="</tr>";a+="</table>";a+="</td>";if(c.object!=""){a+="<td width='28%'>complete.</td>"}else{a+="<td width='28%'>incomplete.</td>"}a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";j("#batch-ingest").empty().append(a);j("#batch-ingest-forms").show()};k=function(){m={type:"POST",url:MMS.configObj.batch,data:j("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(a){if(a.success===false){j("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){j("div#actionFeedback").empty()},4000)}else{j("#batch-ingest").empty();j("#batch-ingest-forms").remove();j("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){j("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(m);return false};h=function(){j("#batch-ingest-forms").hide();j("#batch").on("click",function(a){i(j(this).attr("id"))})};return{init:function(){return h()},ingest:function(){return k()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(l){var i,m,p,n,o,k,j;o={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};i=function(){p={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(a){MMS.view.createView(o);m(a)}};MMS.utils.doAjax(p)};m=function(b){l(".current").html("Xml");var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>XML File</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";l.each(b,function(d,c){a+="<input name='xmlFiles[]' type='hidden' value='"+c.fileName+"' />";a+="<tr>";a+="<td>"+c.fileName+"</td>";a+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+c.fileName+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";l("#xml").append(a);l("#xml-forms").show()};n=function(b){var a=[];for(var c in b){a.push(b[c].name)}p={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:a},dataType:"json",cache:false,success:function(d){l("#xml-forms").remove();if(d.created==="true"){l("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},5000)}else{l("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){l("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(p)};k=function(){MMS.view.createView(o);p={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(a){l("#xml").append(a)}};MMS.utils.doAjax(p)};j=function(){l("#view_xml").on("click",function(){i()})};return{init:function(){return j()},saveXml:function(a){return n(a)},createUploadArea:function(){return k()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(g){var i,f,j,h;i={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};f=function(){j={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(a){h(a)}};MMS.utils.doAjax(j);return false};h=function(b){g(".current").html("Review Queue");g("#search-results").empty();MMS.view.createView(i);if(b.length===0){g("#queue-forms").remove();g("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Pid</th>";a+="<th>Title</th>";a+="<th>Created By</th>";a+="<th>Date Created</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";g.each(b,function(d,c){a+="<tr>";a+="<td>"+c.pid+"</td>";a+="<td>"+c.title+"</td>";a+="<td>"+c.name+"</td>";a+="<td>"+c.timestamp+"</td>";a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+c.pid+'", "queue");\'</td>';a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";g("#search-results").empty();g("#queue").append(a)};return{getItems:function(){f()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(c){var d;d=function(b){var a="";a+='<div id="actionFeedback"></div>';a+='<div id="error"></div>';a+='<article id="'+b.articleID+'" class="'+b.articleClass+'">';a+="<header>";if(b.h3ID!=="null"){a+='<h3 id="'+b.h3ID+'">'+b.h3Value+"</h3>"}if(b.header!=="null"){a+=b.header}a+="</header>";a+='<form id="'+b.formID+'">';a+='<div id="'+b.divID+'" class="'+b.divClass+'"></div>';a+="<footer>";if(b.footer!=="null"){a+=b.footer}a+="</footer>";a+="</form>";a+="</article>";c("#"+b.content).empty().append(a)};return{createView:function(a){d(a)}}}(jQuery));$(function(){var b={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(b))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(b){var a=b.split("."),d=MMS,c;if(a[0]==="MMS"){a=a.slice(1)}for(c=0;c<a.length;c+=1){if(typeof d[a[c]]==="undefined"){d[a[c]]={}}d=d[a[c]]}return d};MMS.namespace("MMS.utils");MMS.utils=(function(a){var f,b,d,e,c;e={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};f=function(g){g.timeout=5000;g.error=function(h,i){a("#error").html("<h4 class='alert_error'>An error has occurred ("+i+").  Please contact library-support@du.edu for assistance.</h4>")};g.statusCode={403:function(){alert("Session expired");MMS.view.createView(e);a("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};a(document).ajaxStart(function(){a.fancybox.showLoading()});a(document).ajaxStop(function(){a.fancybox.hideLoading()});a.ajax(g)};d=function(){var g={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(h){if(typeof h===null||h.isFedoraUp!==200||h.isSolrUp!=="OK"){a("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");a("#authenticate").attr("disabled","disabled")}}};f(g)};c=function(g){return g.replace(/</g,"").replace(/>/g,"")};b=function(g){if(g!=="#metadata-forms"){a(".optional_fields").hide();a("#optional_fields").hide()}a("article:not("+g+", .breadcrumbs)").hide()};return{doAjax:function(g){f(g)},focusForm:function(g){b(g)},sanitizeInput:function(g){return c(g)},pingServices:function(){d()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(g){var b,s,u,r,y,e,v,o,m,w,f,h,k,i,n,d,x,a,j,t,q,c,l,p;p={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};h=function(){var z="";z+='<article id="controlled-vocabulary-section" class="module width_quarter">';z+="<header><h3>Controlled Vocabularies</h3></header>";z+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';z+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';z+="<p>";z+='<select id="vocab-options" name="vocab-options">';z+='<option value="ulan" selected>ULAN</option>';z+='<option value="aat">AAT</option>';z+='<option value="locnames">LC-Names</option>';z+='<option value="locsubjects">LC-Subjects</option>';z+='<option value="aloracreators">Alora-Creators</option>';z+='<option value="alorasubjects">Alora-Subjects</option>';z+="</select>&nbsp;";z+='<input id="getVocabularies" type="submit" value="Go" />';z+="</p>";z+="</div>";z+='<div id="vocabulary-results"></div>';z+="</article>";return z};c=function(){g("#search-results").empty();MMS.view.createView(p);k();q();g(".current").html("Creator");g("#controlled-vocabulary-form").show()};l=function(){g("#search-results").empty();MMS.view.createView(p);t();q();g(".current").html("Subject");g("#controlled-vocabulary-form").show()};q=function(){g("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){a()}})};a=function(){o={type:"POST",url:MMS.configObj.creatorapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(o)};j=function(){o={type:"POST",url:MMS.configObj.subjectapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(o)};t=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Subject";z+="</label>";z+="<input id='subject' name='subject[]' type='text' class='required' />";z+="</fieldset>";z+="<label>";g("#controlledvocabulary").append(z)};k=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Creator";z+="</label>";z+="<input id='creator' name='creator[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Creator Alternative";z+="</label>";z+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Nationality";z+="</label>";z+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Role";z+="</label>";z+="<input id='description-role' name='description.role[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Biography";z+="</label>";z+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Sex";z+="</label>";z+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Source";z+="</label>";z+="<input id='source' name='source' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Earliest Date";z+="</label>";z+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Latest Date";z+="</label>";z+="<input id='latestdates' name='latestdates' type='text' class='required' />";z+="</fieldset>";g("#controlledvocabulary").append(z)};m=function(){return sessionStorage.getItem("roleID")};b=function(){var A,z=g("input#vocabTerm").val(),B=g("select#vocab-options");z=MMS.utils.sanitizeInput(z);if(B.length>0){A=B.val()}o={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+z+"&option="+A,dataType:"json",cache:true,success:function(C){r(A,C)}};MMS.utils.doAjax(o)};w=function(C,z,B){var A="id="+C+"&vocabType="+z;if(B===undefined){var B=function(D){f(C,D)}}o={type:"GET",url:MMS.configObj.vocabUrl,data:A,dataType:"json",cache:true,success:B};MMS.utils.doAjax(o)};f=function(C,z){var A="",B=g("span#"+C+"-toggle").text();if(B==="( + )"){g("span#"+C+"-toggle").text("( - )");g("div#"+C+"-vocab-data").show()}else{if(B==="( - )"){g("div#"+C+"-vocab-data").hide();g("span#"+C+"-toggle").text("( + )")}}g.each(z,function(D,E){if(E.subject_id!==undefined){A+="<p><strong>Subject id:</strong> "+E.subject_id+"</p>"}if(E.nationalities!==""){A+="<p><strong>Nationality:</strong> "+E.nationalities+"</p>"}if(E.role_id!==""){A+="<p><strong>Role:</strong> "+E.role_id+"</p>"}if(E.preferred_terms_source_id!==""){A+="<p><strong>Source:</strong> "+E.preferred_terms_source_id+"</p>"}if(E.non_preferred_terms_term_text!==""){A+="<p><strong>Alternative name:</strong> "+E.non_preferred_terms_term_text+"</p>"}if(E.preferred_biographies_biography_text!==""){A+="<p><strong>Bio:</strong> "+E.preferred_biographies_biography_text+"</p>"}if(E.preferred_biographies_birth_date!==""){A+="<p><strong>Birth date:</strong> "+E.preferred_biographies_birth_date+"</p>"}if(E.preferred_biographies_death_date!==""){A+="<p><strong>Death date:</strong> "+E.preferred_biographies_death_date+"</p>"}if(E.preferred_biographies_sex!==""){A+="<p><strong>Sex:</strong> "+E.preferred_biographies_sex+"</p>"}});g("div#"+C+"-vocab-data").empty().append(A)};v=function(C,A,z){var B;while(A<50){B=g("#"+z+"-"+A).val();if(B===""){g("#"+z+"-"+A).val(C);break}A++}return B};e=function(F,H){var G,A,B,E,I,z=1,D=function(J){x(J)},C=g("select#vocab-options");if(m()=="2"){g("#"+F).removeAttr("disabled");g("#"+F).attr("readonly","readonly")}if(C.length>0){I=C.val()}if(I==="ulan"||I==="locnames"||I==="aloracreators"){if(I!=="locnames"){w(F,I,D)}G=g("#creator-0").val();if(G===""){v(H,0,"creator")}else{A=g("#coverage-spatial-repository-0").val(H);if(A===""){v(H,0,"coverage-spatial-repository")}else{v(H,z,"coverage-spatial-repository")}}}else{if(I==="aat"||I==="locsubjects"||I==="alorasubjects"){E=g("#coverage-temporal-styleperiod-0").val();if(E===""){v(H,0,"coverage-temporal-styleperiod")}else{E=v(H,z,"coverage-temporal-styleperiod")}if(E===undefined){B=g("#subject-0").val();if(B===""){v(H,0,"subject")}else{v(H,z,"subject")}}}}};x=function(z){var A="";g.each(z,function(B,C){A+='<input name="creator.alternative[]" type="hidden" value="'+C.non_preferred_terms_term_text+'" />';A+='<input name="description.creatorbio[]" type="hidden" value="'+C.preferred_biographies_biography_text+'" />';A+='<input name="description.nationality[]" type="hidden" value="'+C.nationalities+'" />';A+='<input name="description.role[]" type="hidden" value="'+C.role_id+'" />';A+='<input name="description.lifedates[]" type="hidden" value="'+C.preferred_biographies_birth_date+"-"+C.preferred_biographies_death_date+'" />';A+='<input name="source[]" type="hidden" value="'+C.preferred_terms_source_id+'" />'});g("div#metadata").append(A)};r=function(B,C){var z,A="";if(B==="ulan"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+s+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"ulan\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="aat"){z=C.getty.response.docs;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+s+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="locnames"||B==="locsubjects"){z=C.loc;g.each(z,function(D,E){A+="<p><ul><li><a href='#' id='"+s+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+s+", $(this).text());return false;'>"+C.loc[D].title+"</a><br /><a href='#'>"+E.id+"</a></li></ul></p>"})}else{if(B==="aloracreators"||B==="alorasubjects"){z=C.local;if(z.message!==undefined){A+="<p><ul><li>No results found.</li></ul></p>";g("div#vocabulary-results").empty().append(A);return}g.each(z,function(D,E){if(B==="aloracreators"){A+="<p><ul><li><a href='#' id='"+s+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"local\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{A+="<p><ul><li><a href='#' id='"+s+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}g("div#vocabulary-results").empty().append(A)};y=function(){g("#controlled-vocabulary-section").show();var z=h();g("#content").append(z);g("input#vocabTerm").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("select#vocab-options").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("input#getVocabularies").on("click",function(){b()})};n=function(){g("select#type-arttypes").val("");g("select#type-timeperiods").val("");g("select#type-instructors").val("")};i=function(C){var z=["arttypes","timeperiods","instructors"],B={},A;if(C===undefined){C=function(D){d(D)}}for(A=0;A<z.length;A++){B.type="GET";B.url=MMS.configObj.vocabUrl;B.data="vocabType="+z[A];B.dataType="json";B.cache=true;B.success=C;MMS.utils.doAjax(B)}};d=function(B){var B=g.parseJSON(B);var z;var C;var E=sessionStorage.getItem("arttypes");var A=sessionStorage.getItem("timeperiods");var D=sessionStorage.getItem("instructors");z="<option value=''>---Select an term---</option>";g.each(B,function(F,G){if(G.type){C=G.type}if(G.term===E||G.term===A||G.term===D){z+="<option value='"+G.term+"' selected>"+G.term+"</option>"}else{z+="<option value='"+G.term+"'>"+G.term+"</option>"}});g("select#type-"+C).html(z)};u=function(){g("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){b()},displayControlledVocabulariesBox:function(z,A){y(z,A)},selectVocabularyTerm:function(A,z){e(A,z)},getTermData:function(A,z){w(A,z)},getLists:function(){i()},resetLists:function(){n()},loadCreatorForm:function(){c()},loadSubjectForm:function(){l()},init:function(){u()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(B){var e,l,s,h,u,q,c="#metadata",D="#metadata-form",i="#metadata-forms",A,p,t,v,z,r,w,f,d,C,x,n,o,a,m,b,g,j,k,E,y;e={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};l=function(G){var F=t(b,"displayOrder");B.each(F,function(H,I){v=A(I);v.appendTo(c)});B(c).append("<input name='objectType' type='hidden' value='"+G+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};j=function(F){var G;var H;if(F==="queue"){H="Back to Review Queue"}else{if(F==="search"){B("#search-results").hide();H="Back to Search Results"}}G="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+F+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+H+"</a>";return G};k=function(F){if(F==="queue"){MMS.queue.getItems()}else{if(F==="search"){B("#search-results").show();B("#content").empty()}}B("#clone-record").empty();B("#controlled-vocabulary-section").hide();return};s=function(H,I,M){var F=100,K="",L,G;B(".current").html("Edit Metadata");B(c).empty();K+="<div id='edit-mode'></div>";K+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";K+="<fieldset id='isPid'>";K+="<label>pid</label>";K+="<input type='text' value='"+I+"'  disabled />";K+="</fieldset>";if(M==="queue"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}else{if(M==="search"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}}b=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var J=t(b,"displayOrder");B.each(J,function(O,P){B.each(H,function(S,Q){if(P.element===S){L=S.replace(".","-");if(typeof Q==="string"){K+="<fieldset class='"+L+"-0'>";if(P.repeat==="true"){K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+S+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+S+"'><span>Add</span></a></span></label>"}else{K+="<label>"+P.label+"</label>"}if(P.type==="select"){if(P.required==="true"){var R="class='required"}if(P.element==="type.arttype"){sessionStorage.setItem("arttypes",Q)}else{if(P.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",Q)}else{if(P.element==="instructor"){sessionStorage.setItem("instructors",Q)}}}K+="<select name='"+P.element+"[]' id='"+P.id+"' "+R+"'></select>"}if(P.type==="text"){K+="<input id='"+S+"-"+F+"' name='"+S+"[]' type='text' value='"+Q+"' "+R+" />"}if(P.type==="textarea"){K+="<textarea id='"+S+"-"+F+"' name='"+S+"[]' rows='7' cols='55' "+R+">"+Q+"</textarea> "}K+="</fieldset>"}if(typeof Q==="object"){B.each(Q,function(U,T){F++;if(F>101){K+="<fieldset class='"+L+"-"+F+"'>"}else{K+="<fieldset class='"+L+"-0'>"}if(P.repeat==="true"){if(F>101){K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+S+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+S+"'><span>Del</span></a></span></label>"}else{K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+S+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+S+"'><span>Add</span></a></span></label>"}}else{K+="<label>"+P.label+"</label>"}if(P.type==="text"){K+="<input id='"+S+"-"+F+"' name='"+S+"[]' type='text' value='"+T+"' "+R+" />"}if(P.type==="textarea"){K+="<textarea id='"+S+"-"+F+"' name='"+S+"[]' rows='7' cols='55' "+R+">"+T+"</textarea> "}K+="</fieldset>"})}}})});B.each(H,function(O,P){if(O==="collection"){K+="<input id='"+O+"-0' name='collection' type='hidden' value='"+P+"' />"}else{if(O==="identifier.system"){K+="<input id='"+O+"' class='pid' name='pid' type='hidden' value='"+P+"' />"}else{if(O==="identifier.legacy"){K+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+P+"' />"}else{if(O==="identifier.master"){K+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+P+"' />"}else{if(O==="objectType"){G=P;K+="<input name='"+O+"' type='hidden' value='"+P+"' />"}else{if(O==="date.created"){K+="<fieldset>";K+="<label class='datecreated'>"+O+"</label>";K+="<input class='datecreated' type='text' value='"+P+"' disabled />";K+="<input class='datecreated' name='"+O+"[]' type='hidden' value='"+P+"'/>";K+="</fieldset>"}else{if(O==="date.modified"){K+="<fieldset>";K+="<label class='datemodified'>"+O+"</label>";K+="<input class='datemodified' type='text' value='"+P+"' disabled />";K+="</fieldset>"}}}}}}}});B.each(J,function(O,P){if(P.required==="false"){K+="<fieldset class='"+P.id+"-0' style='display:none;'>";K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+P.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+P.element+"'><span>Del</span></a></span></label>";if(P.type==="text"){K+="<input id='"+P.id+"-0' name='"+P.element+"[]' type='"+P.type+"' value='' />"}else{if(P.type==="textarea"){K+="<textarea id='"+P.id+"-0' name='"+P.element+"[]' rows='7' cols='55'></textarea> "}}K+="</fieldset>"}});e.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(e);var N=j(M);B("#pid").append(N);B(c).append(K);d();B(".optional_fields").show();B("#optional_fields").show();B(i).show();h()};q=function(F,G){var J,N=G.split("-"),M=N[N.length-2],K,I,H,L=[];if(N[N.length-1]==="clone"){N.pop();N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");I=I.replace(".","-");J=function(){B.each(b,function(O,P){H=P.element.replace(".","-");H=H.replace(".","-");if(I===H){u(F,P)}})};r(J)}else{if(N[N.length-1]==="remove"){N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");if(M==="0"){J=function(){B("#"+I).val("");B("."+I).hide()}}else{J=function(){B("."+G).remove()}}w(J)}}};f=function(F,G){F.preventDefault();F.stopPropagation();G=G.replace("-remove","");B("."+G).remove()};w=function(F){F()};r=function(F){F()};E=function(F){F=F.replace("-clear","");B("#"+F).val("")};A=function(J){var H=JSON.parse(sessionStorage.getItem("mms_profile"));var F="";var I="";if(J.type==="select"){if(J.required==="true"){var G="class='required"}F+="<fieldset class='"+J.id+"-"+MMS.counterObj.count+"'>";F+="<label for='"+J.id+"'>"+J.label+"</label>";F+="<select name='"+J.element+"[]' id='"+J.id+"' "+G+"'></select>";F+="</fieldset>"}else{if(J.vocabulary==="true"&&H.roleID=="2"){I="&nbsp;&nbsp;<a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}F+="<fieldset class='"+J.id+"-"+MMS.counterObj.count+"'>";F+="<label>";F+=J.label;if(J.repeat==="true"){F+="<span class='clone'><a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+J.element+"'><span>Add</span></a></span>"}else{if(J.repeat==="false"){F+="<a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(J.required==="false"){F+="<span class='remove'><a href='#' id='"+J.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+J.element+"'><span>Del</span></a></span>"}F+="</label>"+I;if(J.type==="text"){F+="<input "}else{if(J.type==="textarea"){F+="<textarea "}}F+="id='"+J.id+"-"+MMS.counterObj.count+"'";F+="name='"+J.element+"[]' ";F+="type='"+J.type+"' ";if(J.vocabulary==="true"&&H.roleID=="2"){F+="disabled='disbled'"}F+="class='";if(J.required==="true"){F+="required"}F+="'";if(J.type==="text"){F+="/>"}else{if(J.type==="textarea"){F+="rows='14' cols='45'></textarea>"}}F+="</fieldset>"}if(J.required==="true"){z=B(F)}else{if(J.required==="false"){z=B(F).hide()}}return z};h=function(){B("#optional_fields").empty();B.each(b,function(H,F){if(F.required==="false"){var G="<li class='icn_categories'><a href='#'>"+F.label+"</a></li>";p=B(G).on("click","a",function(I){I.preventDefault();MMS.metadata.appendOptionalField(F)});p.appendTo("#optional_fields")}})};y=function(F){B("."+F.id+"-0").show();location.hash="#"+F.id+"-0"};u=function(J,I){J.preventDefault();J.stopPropagation();var H=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var G="";var F="";F+="<fieldset class='"+I.id+"-"+MMS.counterObj.count+"'>";F+="<label>";F+=I.label;F+="&nbsp;<span class='remove'><a href='#' id='"+I.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+I.element+"'><span>Del</span></a></span>";if(I.vocabulary==="true"){}F+="</label>";if(I.type==="text"){F+="<input "}else{if(I.type==="textarea"){F+="<textarea "}}F+="id='"+I.id+"-"+MMS.counterObj.count+"'";F+="name='"+I.element+"[]' ";F+="type='"+I.type+"' ";if(I.vocabulary==="true"&&H.roleID=="2"){F+="disabled='disabled'"}F+="class='none ";F+="'";if(I.type==="text"){F+="/>"}else{if(I.type==="textarea"){F+="rows='10' cols='45'></textarea>"}}F+="</fieldset>";G=B(F).insertAfter("."+I.id+"-0");return G};C=function(){var H=JSON.parse(sessionStorage.getItem("mms_profile"));if(H.roleID==="2"){o={type:"PUT",url:MMS.configObj.queue,data:B(D).serialize(),dataType:"json",cache:true,success:function(I){B("#metadata-form").find("input[type=text], textarea").val("");B("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){B("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(o);return}var F=B(".pid").val();var G=B("#type").val();o={type:"PUT",url:MMS.configObj.repository,data:B(D).serialize(),dataType:"json",cache:false,success:function(I){if(I.updated==="true"){o={type:"GET",url:MMS.configObj.repository,data:"pid="+F,dataType:"json",cache:true,success:function(J,K){B("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){B("div#actionFeedback").empty()},5000);location.hash="#header";return false;s(J,F,K)}};MMS.utils.doAjax(o)}else{if(I.created==="true"){B("#metadata-form").find("input[type=text], textarea").val("");B("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){B("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(o)};a=function(G,H,F){G.preventDefault();o={type:"GET",url:MMS.configObj.repository,data:"pid="+H,dataType:"json",cache:false,success:function(I){s(I,H,F)}};MMS.utils.doAjax(o)};g=function(){var F=B(".pid").val();B(".pid").remove();B("#isPid").remove();B(".datecreated").remove();B(".datemodified").remove();B("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+F+".</h4>");setTimeout(function(){B("div#actionFeedback").remove()},10000)};d=function(){B(D).validate({errorClass:"invalid",submitHandler:function(){C()}})};m=function(G,F){G.preventDefault();var H=confirm("Are you sure you want to delete this record?");if(H){o={type:"POST",url:MMS.configObj.repository,data:"pid="+F,dataType:"json",cache:true,success:function(I){if(I.deleted==="true"){B("#search-forms").hide();B("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){B("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(o)}return false};t=function(F,I){var G=[];for(var H in F){G.push(F[H])}return G.sort(function(M,L){var K=M[I];var J=L[I];return((K<J)?-1:((K>J)?1:0))})};x=function(G){MMS.counterObj.count=0;B("#search-results").empty();MMS.view.createView(e);if(G==="image"){var F=[];b=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));l(G);h()}d();B(".current").html(G+" metadata");B("#clone-record").remove();B(i).show();B(".optional_fields").show();B("#optional_fields").show();B("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};n=function(){B(i).hide();B(".optional_fields").hide();B(".formType").on("click",function(F){x(B(this).attr("id"))})};return{getMetadata:function(G,H,F){a(G,H,F)},deleteMetadata:function(G,F){m(G,F)},removeClonedField:function(F,G){f(F,G)},constructFieldEvent:function(F,G){q(F,G)},cloneRecord:function(F){g(F)},back:function(F){k(F)},createMetadataEditForm:function(F,H,G){s(F,H,G)},appendOptionalField:function(F){y(F)},clearField:function(F){E(F)},loadForm:function(F){x(F)},init:function(){n()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(d){var o="#user",j="#user-form",a="#user-forms",l,i,t,h,r,b,u,c,p,k,m,e,g,f,q,s,n;n={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};r=function(){d(j).validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){n.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(n);var v="";var x="";var z="";var y="";var C="";var w="";var A="";x+="<fieldset>";x+="<label>";x+="* First Name";x+="</label>";x+="<input id='firstName' name='firstName' type='text' class='required' />";x+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' class='required' />";z+="</fieldset>";y+="<fieldset>";y+="<label>";y+="* DU ID";y+="</label>";y+="<input id='duID' name='duID' type='text' class='required' />";y+="</fieldset>";g={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(D){w+="<fieldset>";w+="<label for='roleID'>* Roles</label>";w+="<select name='roleID' id='roleID' class='required'>";w+="<option value=''>---Assign a role--</option>";d.each(D,function(E,F){if(E!="3"){w+="<option value='"+E+"'>"+F+"</option>"}});w+="</select>";w+="</fieldset>";d(o).append(w)}};var B=JSON.parse(sessionStorage.getItem("mms_profile"));if(B.roleID=="3"){f={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(D){A+="<strong>* Assign a Collection</strong>";d.each(D,function(E,F){A+="<p><input id='"+F.collectionID+"' name='collections[]' type='radio' value='"+F.collectionID+"' /><label for='"+F.collectionID+"'>"+F.title+"</label></p>"});d(o).append(A)}};MMS.utils.doAjax(f)}else{A+="<input id='"+B.collectionID+"' name='collections[]' type='hidden' value='"+B.collectionID+"' />";v+=A}MMS.utils.doAjax(g);v+=x;v+=z;v+=y;d(o).append(v);r()};h=function(){n.footer="null";MMS.view.createView(n);k={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(v){var w="";w+="<div class='tab_container'>";w+="<div id='tab1' class='tab_content'>";w+="<table class='tablesorter' cellspacing='0'>";w+="<thead>";w+="<tr>";w+="<th>First Name</th>";w+="<th>Last Name</th>";w+="<th>Role</th>";w+="<th>Active</th>";w+="<th>Actions</th>";w+="</tr>";w+="</thead>";w+="<tbody>";d.each(v,function(y,x){w+="<tr>";w+="<td>"+x.firstName+"</td>";w+="<td>"+x.lastName+"</td>";w+="<td>"+x.roleName+"</td>";if(x.isActive==="1"){w+="<td>Yes</td>"}else{w+="<td>No</td>"}w+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+x.id+");'></td>";w+="</tr>"});w+="</tbody>";w+="</table>";w+="</div>";w+="</div>";d(o).append(w)}};MMS.utils.doAjax(k)};t=function(z){var x="";var w="";var y="";var v="";n.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(n);d(".current").html("Edit User");q={type:"GET",url:MMS.configObj.users,data:"id="+z,dataType:"json",cache:false,async:false,success:function(A){x+="<input name='userID' type='hidden' value='"+z+"' />";x+="<fieldset>";x+="<label>";x+="* First Name";x+="</label>";x+="<input id='firstName' name='firstName' type='text' value='"+A[0].firstName+"' class='required' />";x+="</fieldset>";x+="<fieldset>";x+="<label>";x+="* Last Name";x+="</label>";x+="<input id='lastName' name='lastName' type='text' value='"+A[0].lastName+"' class='required' />";x+="</fieldset>";d(o).append(x);g={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(C){w+="<fieldset>";w+="<label for='roleID'>* Roles</label>";w+="<select name='roleID' id='roleID' class='required'>";w+="<option value=''>---Assign a role--</option>";d.each(C,function(D,E){if(A[0].roleID===D){w+="<option value='"+D+"' selected>"+E+"</option>"}else{if(D!="3"){w+="<option value='"+D+"'>"+E+"</option>"}}});w+="</select>";w+="</fieldset>";d(o).append(w)}};var B=JSON.parse(sessionStorage.getItem("mms_profile"));if(B.roleID=="3"){f={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(C){y+="<strong>* Assigned Collection</strong>";d.each(C,function(D,E){if(A[1].collectionID===E.collectionID){y+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' checked /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}else{y+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}})}};MMS.utils.doAjax(f)}else{y+="<input name='collectionID' type='hidden' value='"+B.collectionID+"' />"}d(o).append(y);MMS.utils.doAjax(g);v+="<label>";v+="isActive";v+="</label>";if(A[0].isActive=="1"){v+="<input id='isActive' name='isActive' type='checkbox' value='"+A[0].isActive+"' checked />"}else{v+="<input id='isActive' name='isActive' type='checkbox' value='"+A[0].isActive+"' />"}d(o).append(v)}};MMS.utils.doAjax(q);r()};c=function(){m={type:"PUT",url:MMS.configObj.users,data:d(j).serialize(),dataType:"json",cache:false,success:function(v){if(v.updated==="true"){h()}else{if(v.updated==="false"){alert("Error: Update failed.")}else{d("#user-form")[0].reset()}}}};MMS.utils.doAjax(m)};p=function(w){var v=confirm("Are you sure you want to delete this user?");if(v){e={type:"POST",url:MMS.configObj.users,data:"userID="+w,dataType:"json",cache:false,success:function(x){if(x.deleted==="true"){h()}else{if(x.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(e)}};l=function(){s={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(w){sessionStorage.setItem("mms_profile",JSON.stringify(w));var x=JSON.parse(sessionStorage.getItem("mms_profile"));var v=x.firstName+" "+x.lastName+" ("+x.roleName+")";d("#user-role").append(v)}};MMS.utils.doAjax(s)};b=function(v){if(v==="addUser"){i();d("#search-results").empty();d(".current").html("Add User")}else{if(v==="viewUsers"){h();d("#search-results").empty();d(".current").html("Users")}}};u=function(){d(a).hide();d("#addUser").on("click",function(v){b(d(this).attr("id"))});d("#viewUsers").on("click",function(v){b(d(this).attr("id"))})};return{init:function(){return u()},constructUserEditForm:function(v){return t(v)},deleteUserData:function(v){return p(v)},getSessionInfo:function(){return l()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(a){var c="#collection",l="#collection-form",i="#collection-forms",k,h,d,j,f,b,g,e;e={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};k=function(){MMS.view.createView(e);var n="";var m="";var r="";var o="";var q="";m+="<fieldset>";m+="<label>";m+="* Title";m+="</label>";m+="<input id='title' name='title' type='text' class='required' />";m+="</fieldset>";r+="<fieldset>";r+="<label>";r+="* Description";r+="</label>";r+="<input id='description' name='description' type='text' class='required' />";r+="</fieldset>";q+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";n+=m;n+=r;n+=q;a(c).append(n);var p={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(s){o+="<fieldset>";o+="<label>";o+="* Object Type";o+="</label>";o+="<br />";a.each(s,function(t,u){o+="<p><input id='"+u.objectType+"' name='objectType[]' type='checkbox' value='"+u.objectTypeID+"' /> "+u.objectType+"</p>"});o+="</fieldset>";a(c).append(o)}};MMS.utils.doAjax(p)};h=function(){MMS.view.createView(e);g={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(n){var m="";m+="<div class='tab_container'>";m+="<div id='tab1' class='tab_content'>";m+="<table class='tablesorter' cellspacing='0'>";m+="<thead>";m+="<tr>";m+="<th>Collection Name</th>";m+="<th>Description</th>";m+="<th>Active</th>";m+="<th>Actions</th>";m+="</tr>";m+="</thead>";m+="<tbody>";a.each(n,function(o,p){m+="<tr>";m+="<td>"+p.title+"</td>";m+="<td>"+p.description+"</td>";if(p.isActive==="1"){m+="<td>Yes</td>"}else{m+="<td>No</td>"}m+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+p.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+p.collectionID+"\"); return false;'></td>";m+="</tr>"});m+="</tbody>";m+="</table>";m+="</div>";m+="</div>";a(c).append(m)}};MMS.utils.doAjax(g)};b=function(){g={type:"PUT",url:MMS.configObj.collections,data:a(l).serialize(),dataType:"json",cache:false,success:function(m){a(l)[0].reset()}};MMS.utils.doAjax(g)};j=function(m){if(m==="addCollection"){k();a(".current").html("Add Collection")}else{if(m==="editCollection"){}else{if(m==="deleteCollection"){}else{if(m==="viewCollections"){h();a(".current").html("Collections")}}}}};f=function(){a(i).hide();a("#addCollection").on("click",function(m){j(a(this).attr("id"))});a("#viewCollections").on("click",function(m){j(a(this).attr("id"))});d()};d=function(){a(l).validate({errorClass:"invalid",submitHandler:function(){b()}})};return{init:function(){return f()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(d){var c,f,e,a,b=".module width_full",g="#login-form",h,i;c=function(){a={type:"POST",url:MMS.configObj.authenticate,data:d(g).serialize(),dataType:"json",cache:true,success:function(j){d(b).hide();f(j)}};d("h3#message").ajaxStart(function(){d("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(a)};f=function(j){if(j.isAuthenticated==="false"){d("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");d("#authenticate").removeAttr("disabled")}else{if(j.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};e=function(){d("#login-form").validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){d("#logout").click(function(){a={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(j){if(j.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(a)});return false};h=function(){e();i()};return{init:function(){h()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(l){var h,i,j,f,k,c,a,g,e,d,b="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";d={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};h=function(m){l("#content").empty();m.preventDefault();j=l("input#quickSearch").val();j=MMS.utils.sanitizeInput(j);if(j===""){return l("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}f=l("#search_box").serialize();l("#search").empty();l("#actionFeedback").empty();g={type:"GET",url:MMS.configObj.search,data:l("#search_box").serialize(),dataType:"json",cache:true,success:function(n){if(n.error==500){l("#error").html(b)}else{l("#error").html("");MMS.view.createView(d);a(n)}}};MMS.utils.doAjax(g);return false};a=function(o){var q="";var p=[];var m="";var n=JSON.parse(sessionStorage.getItem("mms_profile"));l("#search_box")[0].reset();l("#search-message").text("You searched for: "+j);l(".current").html("Search Results");if(o.response.numFound===0){l("#search-forms").remove();l("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}q+="<div>";q+="<div>";q+="<table class='tablesorter' cellspacing='0'>";q+="<thead>";q+="<tr>";q+="<th>Records Found: "+o.response.numFound+"</th>";q+="<th>Actions</th>";q+="</tr>";q+="</thead>";q+="<tbody id='pages'>";l.each(o.response.docs,function(r,s){m+="<tr>";m+="<td width='85%'>";m+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";m+="<tr align='top'>";if(s.identifier_t[0]!==undefined){m+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+s.identifier_t[0]+"' alt='"+s.title_t[0]+"' border='1'></p></td>"}m+="<td width='40%' align='left'>";if(s.title_t!==undefined){m+="<p><strong>Title:</strong> "+s.title_t[0]+"</p>"}if(s.creator_t!==undefined){m+="<p><strong>Creator:</strong> "+s.creator_t[0]+"</p>"}m+="</td>";m+="</tr>";m+="</table>";m+="</td>";m+="<td width='28%'>";m+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+s.id+'", "search");\'>';if(n.roleID==="1"){m+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+s.id+"\"); return false;'>"}m+="</td>";m+="</tr>";p.push(m);m=""});q+="</tbody>";q+="</table>";q+="</div>";q+="</div>";l("#search").append(q);l("#search-results").show();MMS.pagination.init(p)};i=function(n){var m;l.each(n.spellcheck.suggestions,function(o,p){if(p!=="true"){if(p.suggestion!==undefined){l.each(p.suggestion,function(q,r){if(q===0){c=r.word.trim();m="<a href='#' id='didYouMeanSearch'>"+r.word.trim()+"</a>"}})}}});if(m!==undefined){l("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+m+"</h4>");l("#didYouMeanSearch").on("click",function(o){k()})}};k=function(){l("#search").empty();l("#searchActionFeedback").empty();var m=f.replace(j,c);j=c;g={type:"GET",url:MMS.configObj.search,data:m,dataType:"json",cache:true,success:function(n){if(n.error==500){l("#error").html(b)}else{l("#error").html("");a(n)}}};MMS.utils.doAjax(g)};e=function(){l("#search-forms").hide();l("form.quick_search").submit(function(m){h(m)})};return{init:function(){return e()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(a){var i,d=1,j,k=4,h,g,l,e,b,c,f;j=function(){return Math.ceil(l/k)};h=function(){a("div.pagination").empty();var m="";m+="<ul id='pagination-flickr'>";m+="<li><a href='#' onclick='MMS.pagination.previous("+d+")'>Previous</a></li>";for(var n=1;n<=j();n++){if(n!==d){if(j()<=20){m+="<li><a href='#' onclick='MMS.pagination.renderPage("+n+"); return false;'>"+n+"</a></li>"}}else{m+="<li class='active'>"+n+"</li>";d=n}}m+="<li><a href='#' onclick='MMS.pagination.next("+d+")'>Next</a></li>";m+="</ul>";a("div.pagination").append(m)};b=function(m){if(m<j()){var n=m+1;g(n)}};c=function(m){if(m>1){var n=m-1;g(n)}};g=function(m){d=m;var m=(m-1);h();a("#pages").empty();for(var n=(m)*k;n<((m)*k)+k;n++){a("#pages").append(i[n])}};f=function(m){i=m;l=m.length;g(1)};return{init:function(m){return f(m)},renderPage:function(m){return g(m)},next:function(m){return b(m)},previous:function(m){return c(m)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(g){var a,c,f,d,e,b;e={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};a=function(){MMS.utils.focusForm("#batch-ingest-forms");d={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(h){MMS.view.createView(e);c(h)}};MMS.utils.doAjax(d);return false};c=function(h){g(".current").html("Batch");if(h.length===0){g("#batch-ingest-forms").remove();g("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var i="";i+="<div>";i+="<div>";i+="<table class='tablesorter' cellspacing='0'>";i+="<thead>";i+="<tr>";i+="<th>Batch Records</th>";i+="<th>Status</th>";i+="</tr>";i+="</thead>";i+="<tbody>";g.each(h,function(j,k){if(k.object!=""){i+="<input name='pids[]' type='hidden' value='"+k.pid+"' />"}i+="<tr>";i+="<td width='85%'>";i+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";i+="<tr align='top'>";if(k.object!=""){i+="<td width='30%' align='center'><p><img src='"+k.object+"' alt='"+k.title+"' border='1'></p></td>"}else{i+="<td width='30%' align='center'><p>No Object.</p></td>"}i+="<td width='40%' align='left'>";i+="<p><strong>Pid:</strong> "+k.pid+"</p>";i+="<p><strong>Title:</strong> "+k.title+"</p>";i+="<p><strong>Creator:</strong> "+k.creator+"</p>";i+="<p><strong>Identifier:</strong> "+k.identifier+"</p>";i+="</td>";i+="</tr>";i+="</table>";i+="</td>";if(k.object!=""){i+="<td width='28%'>complete.</td>"}else{i+="<td width='28%'>incomplete.</td>"}i+="</tr>"});i+="</tbody>";i+="</table>";i+="</div>";i+="</div>";g("#batch-ingest").empty().append(i);g("#batch-ingest-forms").show()};f=function(){d={type:"POST",url:MMS.configObj.batch,data:g("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(h){if(h.success===false){g("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},4000)}else{g("#batch-ingest").empty();g("#batch-ingest-forms").remove();g("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(d);return false};b=function(){g("#batch-ingest-forms").hide();g("#batch").on("click",function(h){a(g(this).attr("id"))})};return{init:function(){return b()},ingest:function(){return f()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(g){var b,f,c,e,d,h,a;d={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};b=function(){c={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(i){MMS.view.createView(d);f(i)}};MMS.utils.doAjax(c)};f=function(i){g(".current").html("Xml");var j="";j+="<div class='tab_container'>";j+="<div id='tab1' class='tab_content'>";j+="<table class='tablesorter' cellspacing='0'>";j+="<thead>";j+="<tr>";j+="<th>XML File</th>";j+="<th>Actions</th>";j+="</tr>";j+="</thead>";j+="<tbody>";g.each(i,function(k,l){j+="<input name='xmlFiles[]' type='hidden' value='"+l.fileName+"' />";j+="<tr>";j+="<td>"+l.fileName+"</td>";j+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+l.fileName+"\"); return false;'></td>";j+="</tr>"});j+="</tbody>";j+="</table>";j+="</div>";j+="</div>";g("#xml").append(j);g("#xml-forms").show()};e=function(j){var k=[];for(var i in j){k.push(j[i].name)}c={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:k},dataType:"json",cache:false,success:function(l){g("#xml-forms").remove();if(l.created==="true"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},5000)}else{g("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(c)};h=function(){MMS.view.createView(d);c={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(i){g("#xml").append(i)}};MMS.utils.doAjax(c)};a=function(){g("#view_xml").on("click",function(){b()})};return{init:function(){return a()},saveXml:function(i){return e(i)},createUploadArea:function(){return h()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(a){var d,b,c,e;d={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};b=function(){c={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(f){e(f)}};MMS.utils.doAjax(c);return false};e=function(f){a(".current").html("Review Queue");a("#search-results").empty();MMS.view.createView(d);if(f.length===0){a("#queue-forms").remove();a("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var g="";g+="<div class='tab_container'>";g+="<div id='tab1' class='tab_content'>";g+="<table class='tablesorter' cellspacing='0'>";g+="<thead>";g+="<tr>";g+="<th>Pid</th>";g+="<th>Title</th>";g+="<th>Created By</th>";g+="<th>Date Created</th>";g+="<th>Actions</th>";g+="</tr>";g+="</thead>";g+="<tbody>";a.each(f,function(h,i){g+="<tr>";g+="<td>"+i.pid+"</td>";g+="<td>"+i.title+"</td>";g+="<td>"+i.name+"</td>";g+="<td>"+i.timestamp+"</td>";g+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+i.pid+'", "queue");\'</td>';g+="</tr>"});g+="</tbody>";g+="</table>";g+="</div>";g+="</div>";a("#search-results").empty();a("#queue").append(g)};return{getItems:function(){b()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(b){var a;a=function(c){var d="";d+='<div id="actionFeedback"></div>';d+='<div id="error"></div>';d+='<article id="'+c.articleID+'" class="'+c.articleClass+'">';d+="<header>";if(c.h3ID!=="null"){d+='<h3 id="'+c.h3ID+'">'+c.h3Value+"</h3>"}if(c.header!=="null"){d+=c.header}d+="</header>";d+='<form id="'+c.formID+'">';d+='<div id="'+c.divID+'" class="'+c.divClass+'"></div>';d+="<footer>";if(c.footer!=="null"){d+=c.footer}d+="</footer>";d+="</form>";d+="</article>";b("#"+c.content).empty().append(d)};return{createView:function(c){a(c)}}}(jQuery));$(function(){var a={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(a))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(g){var h=g.split("."),e=MMS,f;if(h[0]==="MMS"){h=h.slice(1)}for(f=0;f<h.length;f+=1){if(typeof e[h[f]]==="undefined"){e[h[f]]={}}e=e[h[f]]}return e};MMS.namespace("MMS.utils");MMS.utils=(function(l){var g,k,i,h,j;h={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};g=function(a){a.timeout=5000;a.error=function(b,c){l("#error").html("<h4 class='alert_error'>An error has occurred ("+c+").  Please contact library-support@du.edu for assistance.</h4>")};a.statusCode={403:function(){alert("Session expired");MMS.view.createView(h);l("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};l(document).ajaxStart(function(){l.fancybox.showLoading()});l(document).ajaxStop(function(){l.fancybox.hideLoading()});l.ajax(a)};i=function(){var a={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(b){if(typeof b===null||b.isFedoraUp!==200||b.isSolrUp!=="OK"){l("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");l("#authenticate").attr("disabled","disabled")}}};g(a)};j=function(a){return a.replace(/</g,"").replace(/>/g,"")};k=function(a){if(a!=="#metadata-forms"){l(".optional_fields").hide();l("#optional_fields").hide()}l("article:not("+a+", .breadcrumbs)").hide()};return{doAjax:function(a){g(a)},focusForm:function(a){k(a)},sanitizeInput:function(a){return j(a)},pingServices:function(){i()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(R){var W,G,E,H,A,T,D,z,L,C,S,Q,N,P,K,U,B,X,O,F,I,V,M,J;J={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};Q=function(){var a="";a+='<article id="controlled-vocabulary-section" class="module width_quarter">';a+="<header><h3>Controlled Vocabularies</h3></header>";a+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';a+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';a+="<p>";a+='<select id="vocab-options" name="vocab-options">';a+='<option value="ulan" selected>ULAN</option>';a+='<option value="aat">AAT</option>';a+='<option value="locnames">LC-Names</option>';a+='<option value="locsubjects">LC-Subjects</option>';a+='<option value="aloracreators">Alora-Creators</option>';a+='<option value="alorasubjects">Alora-Subjects</option>';a+="</select>&nbsp;";a+='<input id="getVocabularies" type="submit" value="Go" />';a+="</p>";a+="</div>";a+='<div id="vocabulary-results"></div>';a+="</article>";return a};V=function(){R("#search-results").empty();MMS.view.createView(J);N();I();R(".current").html("Creator");R("#controlled-vocabulary-form").show()};M=function(){R("#search-results").empty();MMS.view.createView(J);F();I();R(".current").html("Subject");R("#controlled-vocabulary-form").show()};I=function(){R("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){X()}})};X=function(){z={type:"POST",url:MMS.configObj.creatorapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(z)};O=function(){z={type:"POST",url:MMS.configObj.subjectapi,data:R("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(a){if(a==="success"){R("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");R("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){R("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(z)};F=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Subject";a+="</label>";a+="<input id='subject' name='subject[]' type='text' class='required' />";a+="</fieldset>";a+="<label>";R("#controlledvocabulary").append(a)};N=function(){var a="";a+="<fieldset>";a+="<label>";a+="* Creator";a+="</label>";a+="<input id='creator' name='creator[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Creator Alternative";a+="</label>";a+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Nationality";a+="</label>";a+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Role";a+="</label>";a+="<input id='description-role' name='description.role[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Biography";a+="</label>";a+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Sex";a+="</label>";a+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Source";a+="</label>";a+="<input id='source' name='source' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Earliest Date";a+="</label>";a+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";a+="</fieldset>";a+="<fieldset>";a+="<label>";a+="* Latest Date";a+="</label>";a+="<input id='latestdates' name='latestdates' type='text' class='required' />";a+="</fieldset>";R("#controlledvocabulary").append(a)};L=function(){return sessionStorage.getItem("roleID")};W=function(){var a,b=R("input#vocabTerm").val(),c=R("select#vocab-options");b=MMS.utils.sanitizeInput(b);if(c.length>0){a=c.val()}z={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+b+"&option="+a,dataType:"json",cache:true,success:function(d){H(a,d)}};MMS.utils.doAjax(z)};C=function(c,b,d){var a="id="+c+"&vocabType="+b;if(d===undefined){var d=function(e){S(c,e)}}z={type:"GET",url:MMS.configObj.vocabUrl,data:a,dataType:"json",cache:true,success:d};MMS.utils.doAjax(z)};S=function(c,b){var a="",d=R("span#"+c+"-toggle").text();if(d==="( + )"){R("span#"+c+"-toggle").text("( - )");R("div#"+c+"-vocab-data").show()}else{if(d==="( - )"){R("div#"+c+"-vocab-data").hide();R("span#"+c+"-toggle").text("( + )")}}R.each(b,function(f,e){if(e.subject_id!==undefined){a+="<p><strong>Subject id:</strong> "+e.subject_id+"</p>"}if(e.nationalities!==""){a+="<p><strong>Nationality:</strong> "+e.nationalities+"</p>"}if(e.role_id!==""){a+="<p><strong>Role:</strong> "+e.role_id+"</p>"}if(e.preferred_terms_source_id!==""){a+="<p><strong>Source:</strong> "+e.preferred_terms_source_id+"</p>"}if(e.non_preferred_terms_term_text!==""){a+="<p><strong>Alternative name:</strong> "+e.non_preferred_terms_term_text+"</p>"}if(e.preferred_biographies_biography_text!==""){a+="<p><strong>Bio:</strong> "+e.preferred_biographies_biography_text+"</p>"}if(e.preferred_biographies_birth_date!==""){a+="<p><strong>Birth date:</strong> "+e.preferred_biographies_birth_date+"</p>"}if(e.preferred_biographies_death_date!==""){a+="<p><strong>Death date:</strong> "+e.preferred_biographies_death_date+"</p>"}if(e.preferred_biographies_sex!==""){a+="<p><strong>Sex:</strong> "+e.preferred_biographies_sex+"</p>"}});R("div#"+c+"-vocab-data").empty().append(a)};D=function(c,a,b){var d;while(a<50){d=R("#"+b+"-"+a).val();if(d===""){R("#"+b+"-"+a).val(c);break}a++}return d};T=function(d,b){var c,i,h,e,a,j=1,f=function(k){B(k)},g=R("select#vocab-options");if(L()=="2"){R("#"+d).removeAttr("disabled");R("#"+d).attr("readonly","readonly")}if(g.length>0){a=g.val()}if(a==="ulan"||a==="locnames"||a==="aloracreators"){if(a!=="locnames"){C(d,a,f)}c=R("#creator-0").val();if(c===""){D(b,0,"creator")}else{i=R("#coverage-spatial-repository-0").val(b);if(i===""){D(b,0,"coverage-spatial-repository")}else{D(b,j,"coverage-spatial-repository")}}}else{if(a==="aat"||a==="locsubjects"||a==="alorasubjects"){e=R("#coverage-temporal-styleperiod-0").val();if(e===""){D(b,0,"coverage-temporal-styleperiod")}else{e=D(b,j,"coverage-temporal-styleperiod")}if(e===undefined){h=R("#subject-0").val();if(h===""){D(b,0,"subject")}else{D(b,j,"subject")}}}}};B=function(b){var a="";R.each(b,function(d,c){a+='<input name="creator.alternative[]" type="hidden" value="'+c.non_preferred_terms_term_text+'" />';a+='<input name="description.creatorbio[]" type="hidden" value="'+c.preferred_biographies_biography_text+'" />';a+='<input name="description.nationality[]" type="hidden" value="'+c.nationalities+'" />';a+='<input name="description.role[]" type="hidden" value="'+c.role_id+'" />';a+='<input name="description.lifedates[]" type="hidden" value="'+c.preferred_biographies_birth_date+"-"+c.preferred_biographies_death_date+'" />';a+='<input name="source[]" type="hidden" value="'+c.preferred_terms_source_id+'" />'});R("div#metadata").append(a)};H=function(d,c){var b,a="";if(d==="ulan"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+G+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"ulan\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="aat"){b=c.getty.response.docs;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+G+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text_t+"</a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(d==="locnames"||d==="locsubjects"){b=c.loc;R.each(b,function(f,e){a+="<p><ul><li><a href='#' id='"+G+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+G+", $(this).text());return false;'>"+c.loc[f].title+"</a><br /><a href='#'>"+e.id+"</a></li></ul></p>"})}else{if(d==="aloracreators"||d==="alorasubjects"){b=c.local;if(b.message!==undefined){a+="<p><ul><li>No results found.</li></ul></p>";R("div#vocabulary-results").empty().append(a);return}R.each(b,function(f,e){if(d==="aloracreators"){a+="<p><ul><li><a href='#' id='"+G+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+e.id+", \"local\");return false;'><span id='"+e.id+"-toggle'>( + )</span></a><div id='"+e.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{a+="<p><ul><li><a href='#' id='"+G+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+e.id+", $(this).text());return false;'>"+e.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}R("div#vocabulary-results").empty().append(a)};A=function(){R("#controlled-vocabulary-section").show();var a=Q();R("#content").append(a);R("input#vocabTerm").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("select#vocab-options").keyup(function(b){if(b.keyCode==13){R("input#getVocabularies").click()}});R("input#getVocabularies").on("click",function(){W()})};K=function(){R("select#type-arttypes").val("");R("select#type-timeperiods").val("");R("select#type-instructors").val("")};P=function(c){var b=["arttypes","timeperiods","instructors"],d={},a;if(c===undefined){c=function(e){U(e)}}for(a=0;a<b.length;a++){d.type="GET";d.url=MMS.configObj.vocabUrl;d.data="vocabType="+b[a];d.dataType="json";d.cache=true;d.success=c;MMS.utils.doAjax(d)}};U=function(f){var f=R.parseJSON(f);var b;var e;var c=sessionStorage.getItem("arttypes");var a=sessionStorage.getItem("timeperiods");var d=sessionStorage.getItem("instructors");b="<option value=''>---Select an term---</option>";R.each(f,function(h,g){if(g.type){e=g.type}if(g.term===c||g.term===a||g.term===d){b+="<option value='"+g.term+"' selected>"+g.term+"</option>"}else{b+="<option value='"+g.term+"'>"+g.term+"</option>"}});R("select#type-"+e).html(b)};E=function(){R("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){W()},displayControlledVocabulariesBox:function(b,a){A(b,a)},selectVocabularyTerm:function(a,b){T(a,b)},getTermData:function(a,b){C(a,b)},getLists:function(){P()},resetLists:function(){K()},loadCreatorForm:function(){V()},loadSubjectForm:function(){M()},init:function(){E()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(ad){var V,O,H,S,F,J,X="#metadata",ab="#metadata-form",R="#metadata-forms",ae,K,G,aj,af,I,ai,U,W,ac,ah,M,L,Z,N,Y,T,Q,P,aa,ag;V={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};O=function(a){var b=G(Y,"displayOrder");ad.each(b,function(d,c){aj=ae(c);aj.appendTo(X)});ad(X).append("<input name='objectType' type='hidden' value='"+a+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};Q=function(b){var a;var c;if(b==="queue"){c="Back to Review Queue"}else{if(b==="search"){ad("#search-results").hide();c="Back to Search Results"}}a="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+b+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+c+"</a>";return a};P=function(a){if(a==="queue"){MMS.queue.getItems()}else{if(a==="search"){ad("#search-results").show();ad("#content").empty()}}ad("#clone-record").empty();ad("#controlled-vocabulary-section").hide();return};H=function(g,f,b){var i=100,d="",c,h;ad(".current").html("Edit Metadata");ad(X).empty();d+="<div id='edit-mode'></div>";d+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";d+="<fieldset id='isPid'>";d+="<label>pid</label>";d+="<input type='text' value='"+f+"'  disabled />";d+="</fieldset>";if(b==="queue"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}else{if(b==="search"){d+="<input id='type' name='type' type='hidden' value='"+b+"' />"}}Y=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var e=G(Y,"displayOrder");ad.each(e,function(k,j){ad.each(g,function(n,m){if(j.element===n){c=n.replace(".","-");if(typeof m==="string"){d+="<fieldset class='"+c+"-0'>";if(j.repeat==="true"){d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+n+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+n+"'><span>Add</span></a></span></label>"}else{d+="<label>"+j.label+"</label>"}if(j.type==="select"){if(j.required==="true"){var l="class='required"}if(j.element==="type.arttype"){sessionStorage.setItem("arttypes",m)}else{if(j.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",m)}else{if(j.element==="instructor"){sessionStorage.setItem("instructors",m)}}}d+="<select name='"+j.element+"[]' id='"+j.id+"' "+l+"'></select>"}if(j.type==="text"){d+="<input id='"+n+"-"+i+"' name='"+n+"[]' type='text' value='"+m+"' "+l+" />"}if(j.type==="textarea"){d+="<textarea id='"+n+"-"+i+"' name='"+n+"[]' rows='7' cols='55' "+l+">"+m+"</textarea> "}d+="</fieldset>"}if(typeof m==="object"){ad.each(m,function(o,p){i++;if(i>101){d+="<fieldset class='"+c+"-"+i+"'>"}else{d+="<fieldset class='"+c+"-0'>"}if(j.repeat==="true"){if(i>101){d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+n+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+n+"'><span>Del</span></a></span></label>"}else{d+="<label>"+j.label+"&nbsp;<span class='clone'><a href='#' id='"+n+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+n+"'><span>Add</span></a></span></label>"}}else{d+="<label>"+j.label+"</label>"}if(j.type==="text"){d+="<input id='"+n+"-"+i+"' name='"+n+"[]' type='text' value='"+p+"' "+l+" />"}if(j.type==="textarea"){d+="<textarea id='"+n+"-"+i+"' name='"+n+"[]' rows='7' cols='55' "+l+">"+p+"</textarea> "}d+="</fieldset>"})}}})});ad.each(g,function(k,j){if(k==="collection"){d+="<input id='"+k+"-0' name='collection' type='hidden' value='"+j+"' />"}else{if(k==="identifier.system"){d+="<input id='"+k+"' class='pid' name='pid' type='hidden' value='"+j+"' />"}else{if(k==="identifier.legacy"){d+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+j+"' />"}else{if(k==="identifier.master"){d+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+j+"' />"}else{if(k==="objectType"){h=j;d+="<input name='"+k+"' type='hidden' value='"+j+"' />"}else{if(k==="date.created"){d+="<fieldset>";d+="<label class='datecreated'>"+k+"</label>";d+="<input class='datecreated' type='text' value='"+j+"' disabled />";d+="<input class='datecreated' name='"+k+"[]' type='hidden' value='"+j+"'/>";d+="</fieldset>"}else{if(k==="date.modified"){d+="<fieldset>";d+="<label class='datemodified'>"+k+"</label>";d+="<input class='datemodified' type='text' value='"+j+"' disabled />";d+="</fieldset>"}}}}}}}});ad.each(e,function(k,j){if(j.required==="false"){d+="<fieldset class='"+j.id+"-0' style='display:none;'>";d+="<label>"+j.label+"&nbsp;<span class='remove'><a href='#' id='"+j.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+j.element+"'><span>Del</span></a></span></label>";if(j.type==="text"){d+="<input id='"+j.id+"-0' name='"+j.element+"[]' type='"+j.type+"' value='' />"}else{if(j.type==="textarea"){d+="<textarea id='"+j.id+"-0' name='"+j.element+"[]' rows='7' cols='55'></textarea> "}}d+="</fieldset>"}});V.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(V);var a=Q(b);ad("#pid").append(a);ad(X).append(d);W();ad(".optional_fields").show();ad("#optional_fields").show();ad(R).show();S()};J=function(i,h){var e,a=h.split("-"),b=a[a.length-2],d,f,g,c=[];if(a[a.length-1]==="clone"){a.pop();a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");f=f.replace(".","-");e=function(){ad.each(Y,function(k,j){g=j.element.replace(".","-");g=g.replace(".","-");if(f===g){F(i,j)}})};I(e)}else{if(a[a.length-1]==="remove"){a.pop();for(d=0;d<a.length;d++){c.push(a[d])}f=c.join("-");if(b==="0"){e=function(){ad("#"+f).val("");ad("."+f).hide()}}else{e=function(){ad("."+h).remove()}}ai(e)}}};U=function(b,a){b.preventDefault();b.stopPropagation();a=a.replace("-remove","");ad("."+a).remove()};ai=function(a){a()};I=function(a){a()};aa=function(a){a=a.replace("-clear","");ad("#"+a).val("")};ae=function(c){var e=JSON.parse(sessionStorage.getItem("mms_profile"));var b="";var d="";if(c.type==="select"){if(c.required==="true"){var a="class='required"}b+="<fieldset class='"+c.id+"-"+MMS.counterObj.count+"'>";b+="<label for='"+c.id+"'>"+c.label+"</label>";b+="<select name='"+c.element+"[]' id='"+c.id+"' "+a+"'></select>";b+="</fieldset>"}else{if(c.vocabulary==="true"&&e.roleID=="2"){d="&nbsp;&nbsp;<a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}b+="<fieldset class='"+c.id+"-"+MMS.counterObj.count+"'>";b+="<label>";b+=c.label;if(c.repeat==="true"){b+="<span class='clone'><a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+c.element+"'><span>Add</span></a></span>"}else{if(c.repeat==="false"){b+="<a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(c.required==="false"){b+="<span class='remove'><a href='#' id='"+c.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+c.element+"'><span>Del</span></a></span>"}b+="</label>"+d;if(c.type==="text"){b+="<input "}else{if(c.type==="textarea"){b+="<textarea "}}b+="id='"+c.id+"-"+MMS.counterObj.count+"'";b+="name='"+c.element+"[]' ";b+="type='"+c.type+"' ";if(c.vocabulary==="true"&&e.roleID=="2"){b+="disabled='disbled'"}b+="class='";if(c.required==="true"){b+="required"}b+="'";if(c.type==="text"){b+="/>"}else{if(c.type==="textarea"){b+="rows='14' cols='45'></textarea>"}}b+="</fieldset>"}if(c.required==="true"){af=ad(b)}else{if(c.required==="false"){af=ad(b).hide()}}return af};S=function(){ad("#optional_fields").empty();ad.each(Y,function(c,b){if(b.required==="false"){var a="<li class='icn_categories'><a href='#'>"+b.label+"</a></li>";K=ad(a).on("click","a",function(d){d.preventDefault();MMS.metadata.appendOptionalField(b)});K.appendTo("#optional_fields")}})};ag=function(a){ad("."+a.id+"-0").show();location.hash="#"+a.id+"-0"};F=function(c,d){c.preventDefault();c.stopPropagation();var e=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var a="";var b="";b+="<fieldset class='"+d.id+"-"+MMS.counterObj.count+"'>";b+="<label>";b+=d.label;b+="&nbsp;<span class='remove'><a href='#' id='"+d.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+d.element+"'><span>Del</span></a></span>";if(d.vocabulary==="true"){}b+="</label>";if(d.type==="text"){b+="<input "}else{if(d.type==="textarea"){b+="<textarea "}}b+="id='"+d.id+"-"+MMS.counterObj.count+"'";b+="name='"+d.element+"[]' ";b+="type='"+d.type+"' ";if(d.vocabulary==="true"&&e.roleID=="2"){b+="disabled='disabled'"}b+="class='none ";b+="'";if(d.type==="text"){b+="/>"}else{if(d.type==="textarea"){b+="rows='10' cols='45'></textarea>"}}b+="</fieldset>";a=ad(b).insertAfter("."+d.id+"-0");return a};ac=function(){var c=JSON.parse(sessionStorage.getItem("mms_profile"));if(c.roleID==="2"){L={type:"PUT",url:MMS.configObj.queue,data:ad(ab).serialize(),dataType:"json",cache:true,success:function(d){ad("#metadata-form").find("input[type=text], textarea").val("");ad("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){ad("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(L);return}var b=ad(".pid").val();var a=ad("#type").val();L={type:"PUT",url:MMS.configObj.repository,data:ad(ab).serialize(),dataType:"json",cache:false,success:function(d){if(d.updated==="true"){L={type:"GET",url:MMS.configObj.repository,data:"pid="+b,dataType:"json",cache:true,success:function(f,e){ad("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){ad("div#actionFeedback").empty()},5000);location.hash="#header";return false;H(f,b,e)}};MMS.utils.doAjax(L)}else{if(d.created==="true"){ad("#metadata-form").find("input[type=text], textarea").val("");ad("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){ad("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(L)};Z=function(a,c,b){a.preventDefault();L={type:"GET",url:MMS.configObj.repository,data:"pid="+c,dataType:"json",cache:false,success:function(d){H(d,c,b)}};MMS.utils.doAjax(L)};T=function(){var a=ad(".pid").val();ad(".pid").remove();ad("#isPid").remove();ad(".datecreated").remove();ad(".datemodified").remove();ad("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+a+".</h4>");setTimeout(function(){ad("div#actionFeedback").remove()},10000)};W=function(){ad(ab).validate({errorClass:"invalid",submitHandler:function(){ac()}})};N=function(a,b){a.preventDefault();var c=confirm("Are you sure you want to delete this record?");if(c){L={type:"POST",url:MMS.configObj.repository,data:"pid="+b,dataType:"json",cache:true,success:function(d){if(d.deleted==="true"){ad("#search-forms").hide();ad("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){ad("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(L)}return false};G=function(b,c){var a=[];for(var d in b){a.push(b[d])}return a.sort(function(e,f){var g=e[c];var h=f[c];return((g<h)?-1:((g>h)?1:0))})};ah=function(a){MMS.counterObj.count=0;ad("#search-results").empty();MMS.view.createView(V);if(a==="image"){var b=[];Y=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));O(a);S()}W();ad(".current").html(a+" metadata");ad("#clone-record").remove();ad(R).show();ad(".optional_fields").show();ad("#optional_fields").show();ad("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};M=function(){ad(R).hide();ad(".optional_fields").hide();ad(".formType").on("click",function(a){ah(ad(this).attr("id"))})};return{getMetadata:function(a,c,b){Z(a,c,b)},deleteMetadata:function(a,b){N(a,b)},removeClonedField:function(b,a){U(b,a)},constructFieldEvent:function(b,a){J(b,a)},cloneRecord:function(a){T(a)},back:function(a){P(a)},createMetadataEditForm:function(b,c,a){H(b,c,a)},appendOptionalField:function(a){ag(a)},clearField:function(a){aa(a)},loadForm:function(a){ah(a)},init:function(){M()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(M){var v="#user",I="#user-form",P="#user-forms",H,y,B,J,D,O,A,N,F,x,w,L,z,K,E,C,G;G={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};D=function(){M(I).validate({errorClass:"invalid",submitHandler:function(){N()}})};y=function(){G.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(G);var b="";var h="";var f="";var g="";var c="";var a="";var e="";h+="<fieldset>";h+="<label>";h+="* First Name";h+="</label>";h+="<input id='firstName' name='firstName' type='text' class='required' />";h+="</fieldset>";f+="<fieldset>";f+="<label>";f+="* Last Name";f+="</label>";f+="<input id='lastName' name='lastName' type='text' class='required' />";f+="</fieldset>";g+="<fieldset>";g+="<label>";g+="* DU ID";g+="</label>";g+="<input id='duID' name='duID' type='text' class='required' />";g+="</fieldset>";z={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(i){a+="<fieldset>";a+="<label for='roleID'>* Roles</label>";a+="<select name='roleID' id='roleID' class='required'>";a+="<option value=''>---Assign a role--</option>";M.each(i,function(k,j){if(k!="3"){a+="<option value='"+k+"'>"+j+"</option>"}});a+="</select>";a+="</fieldset>";M(v).append(a)}};var d=JSON.parse(sessionStorage.getItem("mms_profile"));if(d.roleID=="3"){K={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(i){e+="<strong>* Assign a Collection</strong>";M.each(i,function(k,j){e+="<p><input id='"+j.collectionID+"' name='collections[]' type='radio' value='"+j.collectionID+"' /><label for='"+j.collectionID+"'>"+j.title+"</label></p>"});M(v).append(e)}};MMS.utils.doAjax(K)}else{e+="<input id='"+d.collectionID+"' name='collections[]' type='hidden' value='"+d.collectionID+"' />";b+=e}MMS.utils.doAjax(z);b+=h;b+=f;b+=g;M(v).append(b);D()};J=function(){G.footer="null";MMS.view.createView(G);x={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(b){var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>First Name</th>";a+="<th>Last Name</th>";a+="<th>Role</th>";a+="<th>Active</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";M.each(b,function(c,d){a+="<tr>";a+="<td>"+d.firstName+"</td>";a+="<td>"+d.lastName+"</td>";a+="<td>"+d.roleName+"</td>";if(d.isActive==="1"){a+="<td>Yes</td>"}else{a+="<td>No</td>"}a+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+d.id+");'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";M(v).append(a)}};MMS.utils.doAjax(x)};B=function(c){var e="";var a="";var d="";var b="";G.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(G);M(".current").html("Edit User");E={type:"GET",url:MMS.configObj.users,data:"id="+c,dataType:"json",cache:false,async:false,success:function(g){e+="<input name='userID' type='hidden' value='"+c+"' />";e+="<fieldset>";e+="<label>";e+="* First Name";e+="</label>";e+="<input id='firstName' name='firstName' type='text' value='"+g[0].firstName+"' class='required' />";e+="</fieldset>";e+="<fieldset>";e+="<label>";e+="* Last Name";e+="</label>";e+="<input id='lastName' name='lastName' type='text' value='"+g[0].lastName+"' class='required' />";e+="</fieldset>";M(v).append(e);z={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(h){a+="<fieldset>";a+="<label for='roleID'>* Roles</label>";a+="<select name='roleID' id='roleID' class='required'>";a+="<option value=''>---Assign a role--</option>";M.each(h,function(j,i){if(g[0].roleID===j){a+="<option value='"+j+"' selected>"+i+"</option>"}else{if(j!="3"){a+="<option value='"+j+"'>"+i+"</option>"}}});a+="</select>";a+="</fieldset>";M(v).append(a)}};var f=JSON.parse(sessionStorage.getItem("mms_profile"));if(f.roleID=="3"){K={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(h){d+="<strong>* Assigned Collection</strong>";M.each(h,function(j,i){if(g[1].collectionID===i.collectionID){d+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' checked /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}else{d+="<p><input id='"+i.collectionID+"' name='collectionID' type='radio' value='"+i.collectionID+"' /><label for='"+i.collectionID+"'>"+i.title+"</label></p>"}})}};MMS.utils.doAjax(K)}else{d+="<input name='collectionID' type='hidden' value='"+f.collectionID+"' />"}M(v).append(d);MMS.utils.doAjax(z);b+="<label>";b+="isActive";b+="</label>";if(g[0].isActive=="1"){b+="<input id='isActive' name='isActive' type='checkbox' value='"+g[0].isActive+"' checked />"}else{b+="<input id='isActive' name='isActive' type='checkbox' value='"+g[0].isActive+"' />"}M(v).append(b)}};MMS.utils.doAjax(E);D()};N=function(){w={type:"PUT",url:MMS.configObj.users,data:M(I).serialize(),dataType:"json",cache:false,success:function(a){if(a.updated==="true"){J()}else{if(a.updated==="false"){alert("Error: Update failed.")}else{M("#user-form")[0].reset()}}}};MMS.utils.doAjax(w)};F=function(a){var b=confirm("Are you sure you want to delete this user?");if(b){L={type:"POST",url:MMS.configObj.users,data:"userID="+a,dataType:"json",cache:false,success:function(c){if(c.deleted==="true"){J()}else{if(c.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(L)}};H=function(){C={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(a){sessionStorage.setItem("mms_profile",JSON.stringify(a));var c=JSON.parse(sessionStorage.getItem("mms_profile"));var b=c.firstName+" "+c.lastName+" ("+c.roleName+")";M("#user-role").append(b)}};MMS.utils.doAjax(C)};O=function(a){if(a==="addUser"){y();M("#search-results").empty();M(".current").html("Add User")}else{if(a==="viewUsers"){J();M("#search-results").empty();M(".current").html("Users")}}};A=function(){M(P).hide();M("#addUser").on("click",function(a){O(M(this).attr("id"))});M("#viewUsers").on("click",function(a){O(M(this).attr("id"))})};return{init:function(){return A()},constructUserEditForm:function(a){return B(a)},deleteUserData:function(a){return F(a)},getSessionInfo:function(){return H()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(r){var p="#collection",s="#collection-form",v="#collection-forms",t,w,o,u,m,q,x,n;n={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};t=function(){MMS.view.createView(n);var a="";var b="";var c="";var f="";var d="";b+="<fieldset>";b+="<label>";b+="* Title";b+="</label>";b+="<input id='title' name='title' type='text' class='required' />";b+="</fieldset>";c+="<fieldset>";c+="<label>";c+="* Description";c+="</label>";c+="<input id='description' name='description' type='text' class='required' />";c+="</fieldset>";d+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";a+=b;a+=c;a+=d;r(p).append(a);var e={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(g){f+="<fieldset>";f+="<label>";f+="* Object Type";f+="</label>";f+="<br />";r.each(g,function(i,h){f+="<p><input id='"+h.objectType+"' name='objectType[]' type='checkbox' value='"+h.objectTypeID+"' /> "+h.objectType+"</p>"});f+="</fieldset>";r(p).append(f)}};MMS.utils.doAjax(e)};w=function(){MMS.view.createView(n);x={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(a){var b="";b+="<div class='tab_container'>";b+="<div id='tab1' class='tab_content'>";b+="<table class='tablesorter' cellspacing='0'>";b+="<thead>";b+="<tr>";b+="<th>Collection Name</th>";b+="<th>Description</th>";b+="<th>Active</th>";b+="<th>Actions</th>";b+="</tr>";b+="</thead>";b+="<tbody>";r.each(a,function(d,c){b+="<tr>";b+="<td>"+c.title+"</td>";b+="<td>"+c.description+"</td>";if(c.isActive==="1"){b+="<td>Yes</td>"}else{b+="<td>No</td>"}b+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+c.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+c.collectionID+"\"); return false;'></td>";b+="</tr>"});b+="</tbody>";b+="</table>";b+="</div>";b+="</div>";r(p).append(b)}};MMS.utils.doAjax(x)};q=function(){x={type:"PUT",url:MMS.configObj.collections,data:r(s).serialize(),dataType:"json",cache:false,success:function(a){r(s)[0].reset()}};MMS.utils.doAjax(x)};u=function(a){if(a==="addCollection"){t();r(".current").html("Add Collection")}else{if(a==="editCollection"){}else{if(a==="deleteCollection"){}else{if(a==="viewCollections"){w();r(".current").html("Collections")}}}}};m=function(){r(v).hide();r("#addCollection").on("click",function(a){u(r(this).attr("id"))});r("#viewCollections").on("click",function(a){u(r(this).attr("id"))});o()};o=function(){r(s).validate({errorClass:"invalid",submitHandler:function(){q()}})};return{init:function(){return m()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(o){var p,m,n,r,q=".module width_full",l="#login-form",k,j;p=function(){r={type:"POST",url:MMS.configObj.authenticate,data:o(l).serialize(),dataType:"json",cache:true,success:function(a){o(q).hide();m(a)}};o("h3#message").ajaxStart(function(){o("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(r)};m=function(a){if(a.isAuthenticated==="false"){o("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");o("#authenticate").removeAttr("disabled")}else{if(a.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};n=function(){o("#login-form").validate({errorClass:"invalid",submitHandler:function(){p()}})};j=function(){o("#logout").click(function(){r={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(a){if(a.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(r)});return false};k=function(){n();j()};return{init:function(){k()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(s){var w,v,u,m,t,p,r,x,n,o,q="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";o={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};w=function(a){s("#content").empty();a.preventDefault();u=s("input#quickSearch").val();u=MMS.utils.sanitizeInput(u);if(u===""){return s("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}m=s("#search_box").serialize();s("#search").empty();s("#actionFeedback").empty();x={type:"GET",url:MMS.configObj.search,data:s("#search_box").serialize(),dataType:"json",cache:true,success:function(b){if(b.error==500){s("#error").html(q)}else{s("#error").html("");MMS.view.createView(o);r(b)}}};MMS.utils.doAjax(x);return false};r=function(e){var c="";var d=[];var b="";var a=JSON.parse(sessionStorage.getItem("mms_profile"));s("#search_box")[0].reset();s("#search-message").text("You searched for: "+u);s(".current").html("Search Results");if(e.response.numFound===0){s("#search-forms").remove();s("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}c+="<div>";c+="<div>";c+="<table class='tablesorter' cellspacing='0'>";c+="<thead>";c+="<tr>";c+="<th>Records Found: "+e.response.numFound+"</th>";c+="<th>Actions</th>";c+="</tr>";c+="</thead>";c+="<tbody id='pages'>";s.each(e.response.docs,function(g,f){b+="<tr>";b+="<td width='85%'>";b+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";b+="<tr align='top'>";if(f.identifier_t[0]!==undefined){b+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+f.identifier_t[0]+"' alt='"+f.title_t[0]+"' border='1'></p></td>"}b+="<td width='40%' align='left'>";if(f.title_t!==undefined){b+="<p><strong>Title:</strong> "+f.title_t[0]+"</p>"}if(f.creator_t!==undefined){b+="<p><strong>Creator:</strong> "+f.creator_t[0]+"</p>"}b+="</td>";b+="</tr>";b+="</table>";b+="</td>";b+="<td width='28%'>";b+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+f.id+'", "search");\'>';if(a.roleID==="1"){b+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+f.id+"\"); return false;'>"}b+="</td>";b+="</tr>";d.push(b);b=""});c+="</tbody>";c+="</table>";c+="</div>";c+="</div>";s("#search").append(c);s("#search-results").show();MMS.pagination.init(d)};v=function(a){var b;s.each(a.spellcheck.suggestions,function(d,c){if(c!=="true"){if(c.suggestion!==undefined){s.each(c.suggestion,function(f,e){if(f===0){p=e.word.trim();b="<a href='#' id='didYouMeanSearch'>"+e.word.trim()+"</a>"}})}}});if(b!==undefined){s("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+b+"</h4>");s("#didYouMeanSearch").on("click",function(c){t()})}};t=function(){s("#search").empty();s("#searchActionFeedback").empty();var a=m.replace(u,p);u=p;x={type:"GET",url:MMS.configObj.search,data:a,dataType:"json",cache:true,success:function(b){if(b.error==500){s("#error").html(q)}else{s("#error").html("");r(b)}}};MMS.utils.doAjax(x)};n=function(){s("#search-forms").hide();s("form.quick_search").submit(function(a){w(a)})};return{init:function(){return n()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(r){var v,o=1,u,t=4,w,x,s,n,q,p,m;u=function(){return Math.ceil(s/t)};w=function(){r("div.pagination").empty();var b="";b+="<ul id='pagination-flickr'>";b+="<li><a href='#' onclick='MMS.pagination.previous("+o+")'>Previous</a></li>";for(var a=1;a<=u();a++){if(a!==o){if(u()<=20){b+="<li><a href='#' onclick='MMS.pagination.renderPage("+a+"); return false;'>"+a+"</a></li>"}}else{b+="<li class='active'>"+a+"</li>";o=a}}b+="<li><a href='#' onclick='MMS.pagination.next("+o+")'>Next</a></li>";b+="</ul>";r("div.pagination").append(b)};q=function(b){if(b<u()){var a=b+1;x(a)}};p=function(b){if(b>1){var a=b-1;x(a)}};x=function(b){o=b;var b=(b-1);w();r("#pages").empty();for(var a=(b)*t;a<((b)*t)+t;a++){r("#pages").append(v[a])}};m=function(a){v=a;s=a.length;x(1)};return{init:function(a){return m(a)},renderPage:function(a){return x(a)},next:function(a){return q(a)},previous:function(a){return p(a)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(n){var m,k,h,j,i,l;i={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};m=function(){MMS.utils.focusForm("#batch-ingest-forms");j={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(a){MMS.view.createView(i);k(a)}};MMS.utils.doAjax(j);return false};k=function(b){n(".current").html("Batch");if(b.length===0){n("#batch-ingest-forms").remove();n("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var a="";a+="<div>";a+="<div>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Batch Records</th>";a+="<th>Status</th>";a+="</tr>";a+="</thead>";a+="<tbody>";n.each(b,function(d,c){if(c.object!=""){a+="<input name='pids[]' type='hidden' value='"+c.pid+"' />"}a+="<tr>";a+="<td width='85%'>";a+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";a+="<tr align='top'>";if(c.object!=""){a+="<td width='30%' align='center'><p><img src='"+c.object+"' alt='"+c.title+"' border='1'></p></td>"}else{a+="<td width='30%' align='center'><p>No Object.</p></td>"}a+="<td width='40%' align='left'>";a+="<p><strong>Pid:</strong> "+c.pid+"</p>";a+="<p><strong>Title:</strong> "+c.title+"</p>";a+="<p><strong>Creator:</strong> "+c.creator+"</p>";a+="<p><strong>Identifier:</strong> "+c.identifier+"</p>";a+="</td>";a+="</tr>";a+="</table>";a+="</td>";if(c.object!=""){a+="<td width='28%'>complete.</td>"}else{a+="<td width='28%'>incomplete.</td>"}a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";n("#batch-ingest").empty().append(a);n("#batch-ingest-forms").show()};h=function(){j={type:"POST",url:MMS.configObj.batch,data:n("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(a){if(a.success===false){n("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){n("div#actionFeedback").empty()},4000)}else{n("#batch-ingest").empty();n("#batch-ingest-forms").remove();n("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){n("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(j);return false};l=function(){n("#batch-ingest-forms").hide();n("#batch").on("click",function(a){m(n(this).attr("id"))})};return{init:function(){return l()},ingest:function(){return h()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(o){var l,p,k,i,j,n,m;j={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};l=function(){k={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(a){MMS.view.createView(j);p(a)}};MMS.utils.doAjax(k)};p=function(b){o(".current").html("Xml");var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>XML File</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";o.each(b,function(d,c){a+="<input name='xmlFiles[]' type='hidden' value='"+c.fileName+"' />";a+="<tr>";a+="<td>"+c.fileName+"</td>";a+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+c.fileName+"\"); return false;'></td>";a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";o("#xml").append(a);o("#xml-forms").show()};i=function(a){var c=[];for(var b in a){c.push(a[b].name)}k={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:c},dataType:"json",cache:false,success:function(d){o("#xml-forms").remove();if(d.created==="true"){o("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){o("div#actionFeedback").empty()},5000)}else{o("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){o("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(k)};n=function(){MMS.view.createView(j);k={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(a){o("#xml").append(a)}};MMS.utils.doAjax(k)};m=function(){o("#view_xml").on("click",function(){l()})};return{init:function(){return m()},saveXml:function(a){return i(a)},createUploadArea:function(){return n()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(j){var g,i,h,f;g={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};i=function(){h={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(a){f(a)}};MMS.utils.doAjax(h);return false};f=function(b){j(".current").html("Review Queue");j("#search-results").empty();MMS.view.createView(g);if(b.length===0){j("#queue-forms").remove();j("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var a="";a+="<div class='tab_container'>";a+="<div id='tab1' class='tab_content'>";a+="<table class='tablesorter' cellspacing='0'>";a+="<thead>";a+="<tr>";a+="<th>Pid</th>";a+="<th>Title</th>";a+="<th>Created By</th>";a+="<th>Date Created</th>";a+="<th>Actions</th>";a+="</tr>";a+="</thead>";a+="<tbody>";j.each(b,function(d,c){a+="<tr>";a+="<td>"+c.pid+"</td>";a+="<td>"+c.title+"</td>";a+="<td>"+c.name+"</td>";a+="<td>"+c.timestamp+"</td>";a+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+c.pid+'", "queue");\'</td>';a+="</tr>"});a+="</tbody>";a+="</table>";a+="</div>";a+="</div>";j("#search-results").empty();j("#queue").append(a)};return{getItems:function(){i()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(c){var d;d=function(b){var a="";a+='<div id="actionFeedback"></div>';a+='<div id="error"></div>';a+='<article id="'+b.articleID+'" class="'+b.articleClass+'">';a+="<header>";if(b.h3ID!=="null"){a+='<h3 id="'+b.h3ID+'">'+b.h3Value+"</h3>"}if(b.header!=="null"){a+=b.header}a+="</header>";a+='<form id="'+b.formID+'">';a+='<div id="'+b.divID+'" class="'+b.divClass+'"></div>';a+="<footer>";if(b.footer!=="null"){a+=b.footer}a+="</footer>";a+="</form>";a+="</article>";c("#"+b.content).empty().append(a)};return{createView:function(a){d(a)}}}(jQuery));$(function(){var b={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(b))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS=MMS||{};MMS.namespace=function(d){var c=d.split("."),b=MMS,a;if(c[0]==="MMS"){c=c.slice(1)}for(a=0;a<c.length;a+=1){if(typeof b[c[a]]==="undefined"){b[c[a]]={}}b=b[c[a]]}return b};MMS.namespace("MMS.utils");MMS.utils=(function(c){var b,d,f,a,e;a={content:"content",articleID:"null",articleClass:"null",h3ID:"null",h3Value:"",formID:"null",divID:"null",divClass:"null",header:"null",footer:"null"};b=function(g){g.timeout=5000;g.error=function(i,h){c("#error").html("<h4 class='alert_error'>An error has occurred ("+h+").  Please contact library-support@du.edu for assistance.</h4>")};g.statusCode={403:function(){alert("Session expired");MMS.view.createView(a);c("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");setTimeout(function(){window.location=MMS.configObj.sslBaseUrl},7000)}};c(document).ajaxStart(function(){c.fancybox.showLoading()});c(document).ajaxStop(function(){c.fancybox.hideLoading()});c.ajax(g)};f=function(){var g={type:"GET",url:MMS.configObj.utils,dataType:"json",cache:false,success:function(h){if(typeof h===null||h.isFedoraUp!==200||h.isSolrUp!=="OK"){c("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");c("#authenticate").attr("disabled","disabled")}}};b(g)};e=function(g){return g.replace(/</g,"").replace(/>/g,"")};d=function(g){if(g!=="#metadata-forms"){c(".optional_fields").hide();c("#optional_fields").hide()}c("article:not("+g+", .breadcrumbs)").hide()};return{doAjax:function(g){b(g)},focusForm:function(g){d(g)},sanitizeInput:function(g){return e(g)},pingServices:function(){f()}}}(jQuery));MMS.namespace("MMS.controlledVocabularies");MMS.controlledVocabularies=(function(g){var b,r,t,q,x,e,u,y,m,v,f,h,k,i,n,d,w,a,j,s,p,c,l,o;o={content:"content",articleID:"controlled-vocabulary-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"controlled-vocabulary-form",divID:"controlledvocabulary",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'};h=function(){var z="";z+='<article id="controlled-vocabulary-section" class="module width_quarter">';z+="<header><h3>Controlled Vocabularies</h3></header>";z+='<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';z+='<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';z+="<p>";z+='<select id="vocab-options" name="vocab-options">';z+='<option value="ulan" selected>ULAN</option>';z+='<option value="aat">AAT</option>';z+='<option value="locnames">LC-Names</option>';z+='<option value="locsubjects">LC-Subjects</option>';z+='<option value="aloracreators">Alora-Creators</option>';z+='<option value="alorasubjects">Alora-Subjects</option>';z+="</select>&nbsp;";z+='<input id="getVocabularies" type="submit" value="Go" />';z+="</p>";z+="</div>";z+='<div id="vocabulary-results"></div>';z+="</article>";return z};c=function(){g("#search-results").empty();MMS.view.createView(o);k();p();g(".current").html("Creator");g("#controlled-vocabulary-form").show()};l=function(){g("#search-results").empty();MMS.view.createView(o);s();p();g(".current").html("Subject");g("#controlled-vocabulary-form").show()};p=function(){g("#controlled-vocabulary-form").validate({errorClass:"invalid",submitHandler:function(){a()}})};a=function(){y={type:"POST",url:MMS.configObj.creatorapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(y)};j=function(){y={type:"POST",url:MMS.configObj.subjectapi,data:g("#controlled-vocabulary-form").serialize(),dataType:"text",cache:false,success:function(z){if(z==="success"){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");g("#controlled-vocabulary-form").find("input[type=text], textarea").val("");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false}else{alert("Record Not Saved.")}}};MMS.utils.doAjax(y)};s=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Subject";z+="</label>";z+="<input id='subject' name='subject[]' type='text' class='required' />";z+="</fieldset>";z+="<label>";g("#controlledvocabulary").append(z)};k=function(){var z="";z+="<fieldset>";z+="<label>";z+="* Creator";z+="</label>";z+="<input id='creator' name='creator[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Creator Alternative";z+="</label>";z+="<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Nationality";z+="</label>";z+="<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Role";z+="</label>";z+="<input id='description-role' name='description.role[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Biography";z+="</label>";z+="<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Sex";z+="</label>";z+="<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Source";z+="</label>";z+="<input id='source' name='source' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Earliest Date";z+="</label>";z+="<input id='earliestdates' name='earliestdates' type='text' class='required' />";z+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Latest Date";z+="</label>";z+="<input id='latestdates' name='latestdates' type='text' class='required' />";z+="</fieldset>";g("#controlledvocabulary").append(z)};m=function(){return sessionStorage.getItem("roleID")};b=function(){var A,z=g("input#vocabTerm").val(),B=g("select#vocab-options");z=MMS.utils.sanitizeInput(z);if(B.length>0){A=B.val()}y={type:"POST",url:MMS.configObj.vocabUrl,data:"term="+z+"&option="+A,dataType:"json",cache:true,success:function(C){q(A,C)}};MMS.utils.doAjax(y)};v=function(C,z,B){var A="id="+C+"&vocabType="+z;if(B===undefined){var B=function(D){f(C,D)}}y={type:"GET",url:MMS.configObj.vocabUrl,data:A,dataType:"json",cache:true,success:B};MMS.utils.doAjax(y)};f=function(C,z){var A="",B=g("span#"+C+"-toggle").text();if(B==="( + )"){g("span#"+C+"-toggle").text("( - )");g("div#"+C+"-vocab-data").show()}else{if(B==="( - )"){g("div#"+C+"-vocab-data").hide();g("span#"+C+"-toggle").text("( + )")}}g.each(z,function(D,E){if(E.subject_id!==undefined){A+="<p><strong>Subject id:</strong> "+E.subject_id+"</p>"}if(E.nationalities!==""){A+="<p><strong>Nationality:</strong> "+E.nationalities+"</p>"}if(E.role_id!==""){A+="<p><strong>Role:</strong> "+E.role_id+"</p>"}if(E.preferred_terms_source_id!==""){A+="<p><strong>Source:</strong> "+E.preferred_terms_source_id+"</p>"}if(E.non_preferred_terms_term_text!==""){A+="<p><strong>Alternative name:</strong> "+E.non_preferred_terms_term_text+"</p>"}if(E.preferred_biographies_biography_text!==""){A+="<p><strong>Bio:</strong> "+E.preferred_biographies_biography_text+"</p>"}if(E.preferred_biographies_birth_date!==""){A+="<p><strong>Birth date:</strong> "+E.preferred_biographies_birth_date+"</p>"}if(E.preferred_biographies_death_date!==""){A+="<p><strong>Death date:</strong> "+E.preferred_biographies_death_date+"</p>"}if(E.preferred_biographies_sex!==""){A+="<p><strong>Sex:</strong> "+E.preferred_biographies_sex+"</p>"}});g("div#"+C+"-vocab-data").empty().append(A)};u=function(z,A,C){var B;while(A<50){B=g("#"+C+"-"+A).val();if(B===""){g("#"+C+"-"+A).val(z);break}A++}return B};e=function(A,C){var B,F,G,z,D,E=1,I=function(J){w(J)},H=g("select#vocab-options");if(m()=="2"){g("#"+A).removeAttr("disabled");g("#"+A).attr("readonly","readonly")}if(H.length>0){D=H.val()}if(D==="ulan"||D==="locnames"||D==="aloracreators"){if(D!=="locnames"){v(A,D,I)}B=g("#creator-0").val();if(B===""){u(C,0,"creator")}else{F=g("#coverage-spatial-repository-0").val(C);if(F===""){u(C,0,"coverage-spatial-repository")}else{u(C,E,"coverage-spatial-repository")}}}else{if(D==="aat"||D==="locsubjects"||D==="alorasubjects"){z=g("#coverage-temporal-styleperiod-0").val();if(z===""){u(C,0,"coverage-temporal-styleperiod")}else{z=u(C,E,"coverage-temporal-styleperiod")}if(z===undefined){G=g("#subject-0").val();if(G===""){u(C,0,"subject")}else{u(C,E,"subject")}}}}};w=function(z){var A="";g.each(z,function(B,C){A+='<input name="creator.alternative[]" type="hidden" value="'+C.non_preferred_terms_term_text+'" />';A+='<input name="description.creatorbio[]" type="hidden" value="'+C.preferred_biographies_biography_text+'" />';A+='<input name="description.nationality[]" type="hidden" value="'+C.nationalities+'" />';A+='<input name="description.role[]" type="hidden" value="'+C.role_id+'" />';A+='<input name="description.lifedates[]" type="hidden" value="'+C.preferred_biographies_birth_date+"-"+C.preferred_biographies_death_date+'" />';A+='<input name="source[]" type="hidden" value="'+C.preferred_terms_source_id+'" />'});g("div#metadata").append(A)};q=function(B,z){var C,A="";if(B==="ulan"){C=z.getty.response.docs;g.each(C,function(D,E){A+="<p><ul><li><a href='#' id='"+r+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"ulan\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="aat"){C=z.getty.response.docs;g.each(C,function(D,E){A+="<p><ul><li><a href='#' id='"+r+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text_t+"</a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"})}else{if(B==="locnames"||B==="locsubjects"){C=z.loc;g.each(C,function(D,E){A+="<p><ul><li><a href='#' id='"+r+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+r+", $(this).text());return false;'>"+z.loc[D].title+"</a><br /><a href='#'>"+E.id+"</a></li></ul></p>"})}else{if(B==="aloracreators"||B==="alorasubjects"){C=z.local;if(C.message!==undefined){A+="<p><ul><li>No results found.</li></ul></p>";g("div#vocabulary-results").empty().append(A);return}g.each(C,function(D,E){if(B==="aloracreators"){A+="<p><ul><li><a href='#' id='"+r+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData("+E.id+", \"local\");return false;'><span id='"+E.id+"-toggle'>( + )</span></a><div id='"+E.id+"-vocab-data' class='vocab-data'></div></li></ul></p>"}else{A+="<p><ul><li><a href='#' id='"+r+"' onclick='MMS.controlledVocabularies.selectVocabularyTerm("+E.id+", $(this).text());return false;'>"+E.preferred_terms_term_text+"</a></li></ul></p>"}})}}}}g("div#vocabulary-results").empty().append(A)};x=function(){g("#controlled-vocabulary-section").show();var z=h();g("#content").append(z);g("input#vocabTerm").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("select#vocab-options").keyup(function(A){if(A.keyCode==13){g("input#getVocabularies").click()}});g("input#getVocabularies").on("click",function(){b()})};n=function(){g("select#type-arttypes").val("");g("select#type-timeperiods").val("");g("select#type-instructors").val("")};i=function(C){var z=["arttypes","timeperiods","instructors"],B={},A;if(C===undefined){C=function(D){d(D)}}for(A=0;A<z.length;A++){B.type="GET";B.url=MMS.configObj.vocabUrl;B.data="vocabType="+z[A];B.dataType="json";B.cache=true;B.success=C;MMS.utils.doAjax(B)}};d=function(B){var B=g.parseJSON(B);var E;var C;var D=sessionStorage.getItem("arttypes");var A=sessionStorage.getItem("timeperiods");var z=sessionStorage.getItem("instructors");E="<option value=''>---Select an term---</option>";g.each(B,function(F,G){if(G.type){C=G.type}if(G.term===D||G.term===A||G.term===z){E+="<option value='"+G.term+"' selected>"+G.term+"</option>"}else{E+="<option value='"+G.term+"'>"+G.term+"</option>"}});g("select#type-"+C).html(E)};t=function(){g("#controlled-vocabulary-section").hide()};return{getVocabularyTerms:function(){b()},displayControlledVocabulariesBox:function(z,A){x(z,A)},selectVocabularyTerm:function(A,z){e(A,z)},getTermData:function(A,z){v(A,z)},getLists:function(){i()},resetLists:function(){n()},loadCreatorForm:function(){c()},loadSubjectForm:function(){l()},init:function(){t()}}}(jQuery));MMS.namespace("MMS.metadata");MMS.counterObj=MMS.counterObj||{};MMS.counterObj.count=0;MMS.metadata=(function(g){var o,D,x,q,z,v,m="#metadata",i="#metadata-form",B="#metadata-forms",f,u,y,a,e,w,b,A,n,h,c,t,E,k,s,l,p,C,r,j,d;o={content:"content",articleID:"metadata-forms",articleClass:"module width_3_quarter",h3ID:"pid",h3Value:"",formID:"metadata-form",divID:"metadata",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'};D=function(G){var F=y(l,"displayOrder");g.each(F,function(H,I){a=f(I);a.appendTo(m)});g(m).append("<input name='objectType' type='hidden' value='"+G+"'/>");MMS.controlledVocabularies.getLists();sessionStorage.removeItem("arttypes");sessionStorage.removeItem("timeperiods");sessionStorage.removeItem("instructors")};C=function(G){var H;var F;if(G==="queue"){F="Back to Review Queue"}else{if(G==="search"){g("#search-results").hide();F="Back to Search Results"}}H="&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\""+G+"\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;"+F+"</a>";return H};r=function(F){if(F==="queue"){MMS.queue.getItems()}else{if(F==="search"){g("#search-results").show();g("#content").empty()}}g("#clone-record").empty();g("#controlled-vocabulary-section").hide();return};x=function(H,I,M){var F=100,K="",L,G;g(".current").html("Edit Metadata");g(m).empty();K+="<div id='edit-mode'></div>";K+="<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";K+="<fieldset id='isPid'>";K+="<label>pid</label>";K+="<input type='text' value='"+I+"'  disabled />";K+="</fieldset>";if(M==="queue"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}else{if(M==="search"){K+="<input id='type' name='type' type='hidden' value='"+M+"' />"}}l=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));var J=y(l,"displayOrder");g.each(J,function(O,P){g.each(H,function(Q,R){if(P.element===Q){L=Q.replace(".","-");if(typeof R==="string"){K+="<fieldset class='"+L+"-0'>";if(P.repeat==="true"){K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+Q+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+Q+"'><span>Add</span></a></span></label>"}else{K+="<label>"+P.label+"</label>"}if(P.type==="select"){if(P.required==="true"){var S="class='required"}if(P.element==="type.arttype"){sessionStorage.setItem("arttypes",R)}else{if(P.element==="date.timeperiod"){sessionStorage.setItem("timeperiods",R)}else{if(P.element==="instructor"){sessionStorage.setItem("instructors",R)}}}K+="<select name='"+P.element+"[]' id='"+P.id+"' "+S+"'></select>"}if(P.type==="text"){K+="<input id='"+Q+"-"+F+"' name='"+Q+"[]' type='text' value='"+R+"' "+S+" />"}if(P.type==="textarea"){K+="<textarea id='"+Q+"-"+F+"' name='"+Q+"[]' rows='7' cols='55' "+S+">"+R+"</textarea> "}K+="</fieldset>"}if(typeof R==="object"){g.each(R,function(U,T){F++;if(F>101){K+="<fieldset class='"+L+"-"+F+"'>"}else{K+="<fieldset class='"+L+"-0'>"}if(P.repeat==="true"){if(F>101){K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+Q+"-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove "+Q+"'><span>Del</span></a></span></label>"}else{K+="<label>"+P.label+"&nbsp;<span class='clone'><a href='#' id='"+Q+"-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add "+Q+"'><span>Add</span></a></span></label>"}}else{K+="<label>"+P.label+"</label>"}if(P.type==="text"){K+="<input id='"+Q+"-"+F+"' name='"+Q+"[]' type='text' value='"+T+"' "+S+" />"}if(P.type==="textarea"){K+="<textarea id='"+Q+"-"+F+"' name='"+Q+"[]' rows='7' cols='55' "+S+">"+T+"</textarea> "}K+="</fieldset>"})}}})});g.each(H,function(O,P){if(O==="collection"){K+="<input id='"+O+"-0' name='collection' type='hidden' value='"+P+"' />"}else{if(O==="identifier.system"){K+="<input id='"+O+"' class='pid' name='pid' type='hidden' value='"+P+"' />"}else{if(O==="identifier.legacy"){K+="<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='"+P+"' />"}else{if(O==="identifier.master"){K+="<input id='identifier-master' name='identifier.master[]' type='hidden' value='"+P+"' />"}else{if(O==="objectType"){G=P;K+="<input name='"+O+"' type='hidden' value='"+P+"' />"}else{if(O==="date.created"){K+="<fieldset>";K+="<label class='datecreated'>"+O+"</label>";K+="<input class='datecreated' type='text' value='"+P+"' disabled />";K+="<input class='datecreated' name='"+O+"[]' type='hidden' value='"+P+"'/>";K+="</fieldset>"}else{if(O==="date.modified"){K+="<fieldset>";K+="<label class='datemodified'>"+O+"</label>";K+="<input class='datemodified' type='text' value='"+P+"' disabled />";K+="</fieldset>"}}}}}}}});g.each(J,function(O,P){if(P.required==="false"){K+="<fieldset class='"+P.id+"-0' style='display:none;'>";K+="<label>"+P.label+"&nbsp;<span class='remove'><a href='#' id='"+P.id+"-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove "+P.element+"'><span>Del</span></a></span></label>";if(P.type==="text"){K+="<input id='"+P.id+"-0' name='"+P.element+"[]' type='"+P.type+"' value='' />"}else{if(P.type==="textarea"){K+="<textarea id='"+P.id+"-0' name='"+P.element+"[]' rows='7' cols='55'></textarea> "}}K+="</fieldset>"}});o.footer='<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';MMS.view.createView(o);var N=C(M);g("#pid").append(N);g(m).append(K);n();g(".optional_fields").show();g("#optional_fields").show();g(B).show();q()};v=function(F,G){var J,N=G.split("-"),M=N[N.length-2],K,I,H,L=[];if(N[N.length-1]==="clone"){N.pop();N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");I=I.replace(".","-");J=function(){g.each(l,function(O,P){H=P.element.replace(".","-");H=H.replace(".","-");if(I===H){z(F,P)}})};w(J)}else{if(N[N.length-1]==="remove"){N.pop();for(K=0;K<N.length;K++){L.push(N[K])}I=L.join("-");if(M==="0"){J=function(){g("#"+I).val("");g("."+I).hide()}}else{J=function(){g("."+G).remove()}}b(J)}}};A=function(F,G){F.preventDefault();F.stopPropagation();G=G.replace("-remove","");g("."+G).remove()};b=function(F){F()};w=function(F){F()};j=function(F){F=F.replace("-clear","");g("#"+F).val("")};f=function(H){var F=JSON.parse(sessionStorage.getItem("mms_profile"));var I="";var G="";if(H.type==="select"){if(H.required==="true"){var J="class='required"}I+="<fieldset class='"+H.id+"-"+MMS.counterObj.count+"'>";I+="<label for='"+H.id+"'>"+H.label+"</label>";I+="<select name='"+H.element+"[]' id='"+H.id+"' "+J+"'></select>";I+="</fieldset>"}else{if(H.vocabulary==="true"&&F.roleID=="2"){G="&nbsp;&nbsp;<a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='"+MMS.configObj.baseUrl+"images/glyphicons_197_remove.png' alt='Remove' /></a>"}I+="<fieldset class='"+H.id+"-"+MMS.counterObj.count+"'>";I+="<label>";I+=H.label;if(H.repeat==="true"){I+="<span class='clone'><a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add "+H.element+"'><span>Add</span></a></span>"}else{if(H.repeat==="false"){I+="<a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"}}if(H.required==="false"){I+="<span class='remove'><a href='#' id='"+H.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove "+H.element+"'><span>Del</span></a></span>"}I+="</label>"+G;if(H.type==="text"){I+="<input "}else{if(H.type==="textarea"){I+="<textarea "}}I+="id='"+H.id+"-"+MMS.counterObj.count+"'";I+="name='"+H.element+"[]' ";I+="type='"+H.type+"' ";if(H.vocabulary==="true"&&F.roleID=="2"){I+="disabled='disbled'"}I+="class='";if(H.required==="true"){I+="required"}I+="'";if(H.type==="text"){I+="/>"}else{if(H.type==="textarea"){I+="rows='14' cols='45'></textarea>"}}I+="</fieldset>"}if(H.required==="true"){e=g(I)}else{if(H.required==="false"){e=g(I).hide()}}return e};q=function(){g("#optional_fields").empty();g.each(l,function(F,G){if(G.required==="false"){var H="<li class='icn_categories'><a href='#'>"+G.label+"</a></li>";u=g(H).on("click","a",function(I){I.preventDefault();MMS.metadata.appendOptionalField(G)});u.appendTo("#optional_fields")}})};d=function(F){g("."+F.id+"-0").show();location.hash="#"+F.id+"-0"};z=function(H,G){H.preventDefault();H.stopPropagation();var F=JSON.parse(sessionStorage.getItem("mms_profile"));MMS.counterObj.count++;var J="";var I="";I+="<fieldset class='"+G.id+"-"+MMS.counterObj.count+"'>";I+="<label>";I+=G.label;I+="&nbsp;<span class='remove'><a href='#' id='"+G.id+"-"+MMS.counterObj.count+"-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove "+G.element+"'><span>Del</span></a></span>";if(G.vocabulary==="true"){}I+="</label>";if(G.type==="text"){I+="<input "}else{if(G.type==="textarea"){I+="<textarea "}}I+="id='"+G.id+"-"+MMS.counterObj.count+"'";I+="name='"+G.element+"[]' ";I+="type='"+G.type+"' ";if(G.vocabulary==="true"&&F.roleID=="2"){I+="disabled='disabled'"}I+="class='none ";I+="'";if(G.type==="text"){I+="/>"}else{if(G.type==="textarea"){I+="rows='10' cols='45'></textarea>"}}I+="</fieldset>";J=g(I).insertAfter("."+G.id+"-0");return J};h=function(){var F=JSON.parse(sessionStorage.getItem("mms_profile"));if(F.roleID==="2"){E={type:"PUT",url:MMS.configObj.queue,data:g(i).serialize(),dataType:"json",cache:true,success:function(I){g("#metadata-form").find("input[type=text], textarea").val("");g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header"}};MMS.utils.doAjax(E);return}var G=g(".pid").val();var H=g("#type").val();E={type:"PUT",url:MMS.configObj.repository,data:g(i).serialize(),dataType:"json",cache:false,success:function(I){if(I.updated==="true"){E={type:"GET",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:true,success:function(J,K){g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header";return false;x(J,G,K)}};MMS.utils.doAjax(E)}else{if(I.created==="true"){g("#metadata-form").find("input[type=text], textarea").val("");g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},5000);MMS.controlledVocabularies.resetLists();location.hash="#header"}}}};MMS.utils.doAjax(E)};k=function(H,F,G){H.preventDefault();E={type:"GET",url:MMS.configObj.repository,data:"pid="+F,dataType:"json",cache:false,success:function(I){x(I,F,G)}};MMS.utils.doAjax(E)};p=function(){var F=g(".pid").val();g(".pid").remove();g("#isPid").remove();g(".datecreated").remove();g(".datemodified").remove();g("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record "+F+".</h4>");setTimeout(function(){g("div#actionFeedback").remove()},10000)};n=function(){g(i).validate({errorClass:"invalid",submitHandler:function(){h()}})};s=function(H,G){H.preventDefault();var F=confirm("Are you sure you want to delete this record?");if(F){E={type:"POST",url:MMS.configObj.repository,data:"pid="+G,dataType:"json",cache:true,success:function(I){if(I.deleted==="true"){g("#search-forms").hide();g("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");setTimeout(function(){g("div#actionFeedback").empty()},5000);location.hash="#header"}else{alert("Error: Record not deleted.")}}};MMS.utils.doAjax(E)}return false};y=function(H,G){var I=[];for(var F in H){I.push(H[F])}return I.sort(function(L,K){var J=L[G];var M=K[G];return((J<M)?-1:((J>M)?1:0))})};c=function(G){MMS.counterObj.count=0;g("#search-results").empty();MMS.view.createView(o);if(G==="image"){var F=[];l=JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));D(G);q()}n();g(".current").html(G+" metadata");g("#clone-record").remove();g(B).show();g(".optional_fields").show();g("#optional_fields").show();g("#controlled-vocabulary-section").show();MMS.controlledVocabularies.displayControlledVocabulariesBox()};t=function(){g(B).hide();g(".optional_fields").hide();g(".formType").on("click",function(F){c(g(this).attr("id"))})};return{getMetadata:function(H,F,G){k(H,F,G)},deleteMetadata:function(G,F){s(G,F)},removeClonedField:function(F,G){A(F,G)},constructFieldEvent:function(F,G){v(F,G)},cloneRecord:function(F){p(F)},back:function(F){r(F)},createMetadataEditForm:function(G,F,H){x(G,F,H)},appendOptionalField:function(F){d(F)},clearField:function(F){j(F)},loadForm:function(F){c(F)},init:function(){t()}}}(jQuery));MMS.namespace("MMS.user");MMS.user=(function(d){var u="#user",h="#user-form",a="#user-forms",i,r,o,g,m,b,p,c,k,s,t,e,q,f,l,n,j;j={content:"content",articleID:"user-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"user-form",divID:"user",divClass:"module_content",header:"null",footer:"null"};m=function(){d(h).validate({errorClass:"invalid",submitHandler:function(){c()}})};r=function(){j.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(j);var x="";var B="";var z="";var y="";var w="";var A="";var C="";B+="<fieldset>";B+="<label>";B+="* First Name";B+="</label>";B+="<input id='firstName' name='firstName' type='text' class='required' />";B+="</fieldset>";z+="<fieldset>";z+="<label>";z+="* Last Name";z+="</label>";z+="<input id='lastName' name='lastName' type='text' class='required' />";z+="</fieldset>";y+="<fieldset>";y+="<label>";y+="* DU ID";y+="</label>";y+="<input id='duID' name='duID' type='text' class='required' />";y+="</fieldset>";q={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:true,async:false,success:function(D){A+="<fieldset>";A+="<label for='roleID'>* Roles</label>";A+="<select name='roleID' id='roleID' class='required'>";A+="<option value=''>---Assign a role--</option>";d.each(D,function(E,F){if(E!="3"){A+="<option value='"+E+"'>"+F+"</option>"}});A+="</select>";A+="</fieldset>";d(u).append(A)}};var v=JSON.parse(sessionStorage.getItem("mms_profile"));if(v.roleID=="3"){f={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,async:false,success:function(D){C+="<strong>* Assign a Collection</strong>";d.each(D,function(E,F){C+="<p><input id='"+F.collectionID+"' name='collections[]' type='radio' value='"+F.collectionID+"' /><label for='"+F.collectionID+"'>"+F.title+"</label></p>"});d(u).append(C)}};MMS.utils.doAjax(f)}else{C+="<input id='"+v.collectionID+"' name='collections[]' type='hidden' value='"+v.collectionID+"' />";x+=C}MMS.utils.doAjax(q);x+=B;x+=z;x+=y;d(u).append(x);m()};g=function(){j.footer="null";MMS.view.createView(j);s={type:"GET",url:MMS.configObj.users,dataType:"json",cache:true,success:function(v){var w="";w+="<div class='tab_container'>";w+="<div id='tab1' class='tab_content'>";w+="<table class='tablesorter' cellspacing='0'>";w+="<thead>";w+="<tr>";w+="<th>First Name</th>";w+="<th>Last Name</th>";w+="<th>Role</th>";w+="<th>Active</th>";w+="<th>Actions</th>";w+="</tr>";w+="</thead>";w+="<tbody>";d.each(v,function(x,y){w+="<tr>";w+="<td>"+y.firstName+"</td>";w+="<td>"+y.lastName+"</td>";w+="<td>"+y.roleName+"</td>";if(y.isActive==="1"){w+="<td>Yes</td>"}else{w+="<td>No</td>"}w+="<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm("+y.id+");'></td>";w+="</tr>"});w+="</tbody>";w+="</table>";w+="</div>";w+="</div>";d(u).append(w)}};MMS.utils.doAjax(s)};o=function(v){var y="";var x="";var z="";var w="";j.footer='<div class="submit_link"><input type="submit" value="Save"></div>';MMS.view.createView(j);d(".current").html("Edit User");l={type:"GET",url:MMS.configObj.users,data:"id="+v,dataType:"json",cache:false,async:false,success:function(B){y+="<input name='userID' type='hidden' value='"+v+"' />";y+="<fieldset>";y+="<label>";y+="* First Name";y+="</label>";y+="<input id='firstName' name='firstName' type='text' value='"+B[0].firstName+"' class='required' />";y+="</fieldset>";y+="<fieldset>";y+="<label>";y+="* Last Name";y+="</label>";y+="<input id='lastName' name='lastName' type='text' value='"+B[0].lastName+"' class='required' />";y+="</fieldset>";d(u).append(y);q={type:"GET",url:MMS.configObj.roles,dataType:"json",cache:false,async:false,success:function(C){x+="<fieldset>";x+="<label for='roleID'>* Roles</label>";x+="<select name='roleID' id='roleID' class='required'>";x+="<option value=''>---Assign a role--</option>";d.each(C,function(D,E){if(B[0].roleID===D){x+="<option value='"+D+"' selected>"+E+"</option>"}else{if(D!="3"){x+="<option value='"+D+"'>"+E+"</option>"}}});x+="</select>";x+="</fieldset>";d(u).append(x)}};var A=JSON.parse(sessionStorage.getItem("mms_profile"));if(A.roleID=="3"){f={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:false,async:false,success:function(C){z+="<strong>* Assigned Collection</strong>";d.each(C,function(D,E){if(B[1].collectionID===E.collectionID){z+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' checked /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}else{z+="<p><input id='"+E.collectionID+"' name='collectionID' type='radio' value='"+E.collectionID+"' /><label for='"+E.collectionID+"'>"+E.title+"</label></p>"}})}};MMS.utils.doAjax(f)}else{z+="<input name='collectionID' type='hidden' value='"+A.collectionID+"' />"}d(u).append(z);MMS.utils.doAjax(q);w+="<label>";w+="isActive";w+="</label>";if(B[0].isActive=="1"){w+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' checked />"}else{w+="<input id='isActive' name='isActive' type='checkbox' value='"+B[0].isActive+"' />"}d(u).append(w)}};MMS.utils.doAjax(l);m()};c=function(){t={type:"PUT",url:MMS.configObj.users,data:d(h).serialize(),dataType:"json",cache:false,success:function(v){if(v.updated==="true"){g()}else{if(v.updated==="false"){alert("Error: Update failed.")}else{d("#user-form")[0].reset()}}}};MMS.utils.doAjax(t)};k=function(w){var v=confirm("Are you sure you want to delete this user?");if(v){e={type:"POST",url:MMS.configObj.users,data:"userID="+w,dataType:"json",cache:false,success:function(x){if(x.deleted==="true"){g()}else{if(x.deleted==="false"){alert("Error: Update failed.")}}}};MMS.utils.doAjax(e)}};i=function(){n={type:"GET",url:MMS.configObj.users,data:"authenticated=true",dataType:"json",cache:false,success:function(x){sessionStorage.setItem("mms_profile",JSON.stringify(x));var v=JSON.parse(sessionStorage.getItem("mms_profile"));var w=v.firstName+" "+v.lastName+" ("+v.roleName+")";d("#user-role").append(w)}};MMS.utils.doAjax(n)};b=function(v){if(v==="addUser"){r();d("#search-results").empty();d(".current").html("Add User")}else{if(v==="viewUsers"){g();d("#search-results").empty();d(".current").html("Users")}}};p=function(){d(a).hide();d("#addUser").on("click",function(v){b(d(this).attr("id"))});d("#viewUsers").on("click",function(v){b(d(this).attr("id"))})};return{init:function(){return p()},constructUserEditForm:function(v){return o(v)},deleteUserData:function(v){return k(v)},getSessionInfo:function(){return i()}}}(jQuery));MMS.namespace("MMS.collections");MMS.collections=(function(g){var i="#collection",f="#collection-form",c="#collection-forms",e,b,j,d,l,h,a,k;k={content:"content",articleID:"collection-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"collection-form",divID:"collection",divClass:"module_content",header:"null",footer:'<div class="submit_link"><input type="submit" value="Save"></div>'};e=function(){MMS.view.createView(k);var m="";var r="";var q="";var n="";var p="";r+="<fieldset>";r+="<label>";r+="* Title";r+="</label>";r+="<input id='title' name='title' type='text' class='required' />";r+="</fieldset>";q+="<fieldset>";q+="<label>";q+="* Description";q+="</label>";q+="<input id='description' name='description' type='text' class='required' />";q+="</fieldset>";p+="<input id='isActive' name='isActive' type='hidden' value='1' checked />";m+=r;m+=q;m+=p;g(i).append(m);var o={type:"GET",url:MMS.configObj.objectTypes,dataType:"json",cache:true,success:function(s){n+="<fieldset>";n+="<label>";n+="* Object Type";n+="</label>";n+="<br />";g.each(s,function(t,u){n+="<p><input id='"+u.objectType+"' name='objectType[]' type='checkbox' value='"+u.objectTypeID+"' /> "+u.objectType+"</p>"});n+="</fieldset>";g(i).append(n)}};MMS.utils.doAjax(o)};b=function(){MMS.view.createView(k);a={type:"GET",url:MMS.configObj.collections,dataType:"json",cache:true,success:function(m){var n="";n+="<div class='tab_container'>";n+="<div id='tab1' class='tab_content'>";n+="<table class='tablesorter' cellspacing='0'>";n+="<thead>";n+="<tr>";n+="<th>Collection Name</th>";n+="<th>Description</th>";n+="<th>Active</th>";n+="<th>Actions</th>";n+="</tr>";n+="</thead>";n+="<tbody>";g.each(m,function(o,p){n+="<tr>";n+="<td>"+p.title+"</td>";n+="<td>"+p.description+"</td>";if(p.isActive==="1"){n+="<td>Yes</td>"}else{n+="<td>No</td>"}n+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \""+p.collectionID+"\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \""+p.collectionID+"\"); return false;'></td>";n+="</tr>"});n+="</tbody>";n+="</table>";n+="</div>";n+="</div>";g(i).append(n)}};MMS.utils.doAjax(a)};h=function(){a={type:"PUT",url:MMS.configObj.collections,data:g(f).serialize(),dataType:"json",cache:false,success:function(m){g(f)[0].reset()}};MMS.utils.doAjax(a)};d=function(m){if(m==="addCollection"){e();g(".current").html("Add Collection")}else{if(m==="editCollection"){}else{if(m==="deleteCollection"){}else{if(m==="viewCollections"){b();g(".current").html("Collections")}}}}};l=function(){g(c).hide();g("#addCollection").on("click",function(m){d(g(this).attr("id"))});g("#viewCollections").on("click",function(m){d(g(this).attr("id"))});j()};j=function(){g(f).validate({errorClass:"invalid",submitHandler:function(){h()}})};return{init:function(){return l()}}}(jQuery));MMS.namespace("MMS.login");MMS.login=(function(d){var c,f,e,a,b=".module width_full",g="#login-form",h,i;c=function(){a={type:"POST",url:MMS.configObj.authenticate,data:d(g).serialize(),dataType:"json",cache:true,success:function(j){d(b).hide();f(j)}};d("h3#message").ajaxStart(function(){d("#authenticate").attr("disabled","disabled")});MMS.utils.doAjax(a)};f=function(j){if(j.isAuthenticated==="false"){d("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");d("#authenticate").removeAttr("disabled")}else{if(j.isAuthenticated==="true"){window.location.replace(MMS.configObj.dashboard)}}};e=function(){d("#login-form").validate({errorClass:"invalid",submitHandler:function(){c()}})};i=function(){d("#logout").click(function(){a={type:"GET",url:MMS.configObj.logout,dataType:"json",success:function(j){if(j.logout==="true"){sessionStorage.removeItem("mms_profile");window.location.replace(MMS.configObj.sslBaseUrl)}}};MMS.utils.doAjax(a)});return false};h=function(){e();i()};return{init:function(){h()}}}(jQuery));MMS.namespace("MMS.search");MMS.search=(function(f){var b,c,d,l,e,i,g,a,k,j,h="<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";j={content:"search-results",articleID:"search-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"search-form",divID:"search",divClass:"tab_container",header:'<div class="pagination"></div>',footer:'<div class="pagination"></div>'};b=function(m){f("#content").empty();m.preventDefault();d=f("input#quickSearch").val();d=MMS.utils.sanitizeInput(d);if(d===""){return f("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>")}l=f("#search_box").serialize();f("#search").empty();f("#actionFeedback").empty();a={type:"GET",url:MMS.configObj.search,data:f("#search_box").serialize(),dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");MMS.view.createView(j);g(n)}}};MMS.utils.doAjax(a);return false};g=function(n){var p="";var o=[];var q="";var m=JSON.parse(sessionStorage.getItem("mms_profile"));f("#search_box")[0].reset();f("#search-message").text("You searched for: "+d);f(".current").html("Search Results");if(n.response.numFound===0){f("#search-forms").remove();f("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");return}p+="<div>";p+="<div>";p+="<table class='tablesorter' cellspacing='0'>";p+="<thead>";p+="<tr>";p+="<th>Records Found: "+n.response.numFound+"</th>";p+="<th>Actions</th>";p+="</tr>";p+="</thead>";p+="<tbody id='pages'>";f.each(n.response.docs,function(r,s){q+="<tr>";q+="<td width='85%'>";q+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";q+="<tr align='top'>";if(s.identifier_t[0]!==undefined){q+="<td width='30%' align='center'><p><img src='"+MMS.configObj.nas+s.identifier_t[0]+"' alt='"+s.title_t[0]+"' border='1'></p></td>"}q+="<td width='40%' align='left'>";if(s.title_t!==undefined){q+="<p><strong>Title:</strong> "+s.title_t[0]+"</p>"}if(s.creator_t!==undefined){q+="<p><strong>Creator:</strong> "+s.creator_t[0]+"</p>"}q+="</td>";q+="</tr>";q+="</table>";q+="</td>";q+="<td width='28%'>";q+="<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+s.id+'", "search");\'>';if(m.roleID==="1"){q+="<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \""+s.id+"\"); return false;'>"}q+="</td>";q+="</tr>";o.push(q);q=""});p+="</tbody>";p+="</table>";p+="</div>";p+="</div>";f("#search").append(p);f("#search-results").show();MMS.pagination.init(o)};c=function(m){var n;f.each(m.spellcheck.suggestions,function(o,p){if(p!=="true"){if(p.suggestion!==undefined){f.each(p.suggestion,function(q,r){if(q===0){i=r.word.trim();n="<a href='#' id='didYouMeanSearch'>"+r.word.trim()+"</a>"}})}}});if(n!==undefined){f("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: "+n+"</h4>");f("#didYouMeanSearch").on("click",function(o){e()})}};e=function(){f("#search").empty();f("#searchActionFeedback").empty();var m=l.replace(d,i);d=i;a={type:"GET",url:MMS.configObj.search,data:m,dataType:"json",cache:true,success:function(n){if(n.error==500){f("#error").html(h)}else{f("#error").html("");g(n)}}};MMS.utils.doAjax(a)};k=function(){f("#search-forms").hide();f("form.quick_search").submit(function(m){b(m)})};return{init:function(){return k()}}}(jQuery));MMS.namespace("MMS.pagination");MMS.pagination=(function(g){var c,j=1,d,e=4,b,a,f,k,h,i,l;d=function(){return Math.ceil(f/e)};b=function(){g("div.pagination").empty();var n="";n+="<ul id='pagination-flickr'>";n+="<li><a href='#' onclick='MMS.pagination.previous("+j+")'>Previous</a></li>";for(var m=1;m<=d();m++){if(m!==j){if(d()<=20){n+="<li><a href='#' onclick='MMS.pagination.renderPage("+m+"); return false;'>"+m+"</a></li>"}}else{n+="<li class='active'>"+m+"</li>";j=m}}n+="<li><a href='#' onclick='MMS.pagination.next("+j+")'>Next</a></li>";n+="</ul>";g("div.pagination").append(n)};h=function(n){if(n<d()){var m=n+1;a(m)}};i=function(n){if(n>1){var m=n-1;a(m)}};a=function(n){j=n;var n=(n-1);b();g("#pages").empty();for(var m=(n)*e;m<((n)*e)+e;m++){g("#pages").append(c[m])}};l=function(m){c=m;f=m.length;a(1)};return{init:function(m){return l(m)},renderPage:function(m){return a(m)},next:function(m){return h(m)},previous:function(m){return i(m)}}}(jQuery));MMS.namespace("MMS.batch");MMS.batch=(function(c){var d,f,b,g,a,e;a={content:"content",articleID:"batch-ingest-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"batch-ingest-form",divID:"batch-ingest",divClass:"module_content",header:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',footer:'<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'};d=function(){MMS.utils.focusForm("#batch-ingest-forms");g={type:"GET",url:MMS.configObj.batch,dataType:"json",cache:true,success:function(h){MMS.view.createView(a);f(h)}};MMS.utils.doAjax(g);return false};f=function(h){c(".current").html("Batch");if(h.length===0){c("#batch-ingest-forms").remove();c("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");return}var i="";i+="<div>";i+="<div>";i+="<table class='tablesorter' cellspacing='0'>";i+="<thead>";i+="<tr>";i+="<th>Batch Records</th>";i+="<th>Status</th>";i+="</tr>";i+="</thead>";i+="<tbody>";c.each(h,function(j,k){if(k.object!=""){i+="<input name='pids[]' type='hidden' value='"+k.pid+"' />"}i+="<tr>";i+="<td width='85%'>";i+="<table width='85%' style='border-bottom: 1px dotted #ccc;'>";i+="<tr align='top'>";if(k.object!=""){i+="<td width='30%' align='center'><p><img src='"+k.object+"' alt='"+k.title+"' border='1'></p></td>"}else{i+="<td width='30%' align='center'><p>No Object.</p></td>"}i+="<td width='40%' align='left'>";i+="<p><strong>Pid:</strong> "+k.pid+"</p>";i+="<p><strong>Title:</strong> "+k.title+"</p>";i+="<p><strong>Creator:</strong> "+k.creator+"</p>";i+="<p><strong>Identifier:</strong> "+k.identifier+"</p>";i+="</td>";i+="</tr>";i+="</table>";i+="</td>";if(k.object!=""){i+="<td width='28%'>complete.</td>"}else{i+="<td width='28%'>incomplete.</td>"}i+="</tr>"});i+="</tbody>";i+="</table>";i+="</div>";i+="</div>";c("#batch-ingest").empty().append(i);c("#batch-ingest-forms").show()};b=function(){g={type:"POST",url:MMS.configObj.batch,data:c("#batch-ingest-form").serialize(),dataType:"json",cache:false,success:function(h){if(h.success===false){c("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");setTimeout(function(){c("div#actionFeedback").empty()},4000)}else{c("#batch-ingest").empty();c("#batch-ingest-forms").remove();c("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");setTimeout(function(){c("div#actionFeedback").empty()},4000)}}};MMS.utils.doAjax(g);return false};e=function(){c("#batch-ingest-forms").hide();c("#batch").on("click",function(h){d(c(this).attr("id"))})};return{init:function(){return e()},ingest:function(){return b()}}}(jQuery));MMS.namespace("MMS.xml");MMS.xml=(function(d){var g,c,h,b,a,e,f;a={content:"content",articleID:"xml-forms",articleClass:"module width_3_quarter",h3ID:"null",h3Value:"",formID:"xml-form",divID:"xml",divClass:"module_content",header:"null",footer:"null"};g=function(){h={type:"GET",url:MMS.configObj.xml,dataType:"json",cache:true,success:function(i){MMS.view.createView(a);c(i)}};MMS.utils.doAjax(h)};c=function(i){d(".current").html("Xml");var j="";j+="<div class='tab_container'>";j+="<div id='tab1' class='tab_content'>";j+="<table class='tablesorter' cellspacing='0'>";j+="<thead>";j+="<tr>";j+="<th>XML File</th>";j+="<th>Actions</th>";j+="</tr>";j+="</thead>";j+="<tbody>";d.each(i,function(k,l){j+="<input name='xmlFiles[]' type='hidden' value='"+l.fileName+"' />";j+="<tr>";j+="<td>"+l.fileName+"</td>";j+="<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\""+l.fileName+"\"); return false;'></td>";j+="</tr>"});j+="</tbody>";j+="</table>";j+="</div>";j+="</div>";d("#xml").append(j);d("#xml-forms").show()};b=function(l){var j=[];for(var k in l){j.push(l[k].name)}h={type:"PUT",url:MMS.configObj.xml,data:{xmlFiles:j},dataType:"json",cache:false,success:function(i){d("#xml-forms").remove();if(i.created==="true"){d("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");setTimeout(function(){d("div#actionFeedback").empty()},5000)}else{d("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");setTimeout(function(){d("div#actionFeedback").empty()},5000)}location.hash="#header"}};MMS.utils.doAjax(h)};e=function(){MMS.view.createView(a);h={type:"GET",url:MMS.configObj.uploadUrl,dataType:"html",cache:false,success:function(i){d("#xml").append(i)}};MMS.utils.doAjax(h)};f=function(){d("#view_xml").on("click",function(){g()})};return{init:function(){return f()},saveXml:function(i){return b(i)},createUploadArea:function(){return e()}}}(jQuery));MMS.namespace("MMS.queue");MMS.queue=(function(c){var a,d,e,b;a={content:"content",articleID:"queue-forms",articleClass:"module width_full",h3ID:"null",h3Value:"",formID:"queue-form",divID:"queue",divClass:"module_content",header:"null",footer:"null"};d=function(){e={type:"GET",url:MMS.configObj.queue,dataType:"json",cache:false,success:function(f){b(f)}};MMS.utils.doAjax(e);return false};b=function(f){c(".current").html("Review Queue");c("#search-results").empty();MMS.view.createView(a);if(f.length===0){c("#queue-forms").remove();c("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");return}var g="";g+="<div class='tab_container'>";g+="<div id='tab1' class='tab_content'>";g+="<table class='tablesorter' cellspacing='0'>";g+="<thead>";g+="<tr>";g+="<th>Pid</th>";g+="<th>Title</th>";g+="<th>Created By</th>";g+="<th>Date Created</th>";g+="<th>Actions</th>";g+="</tr>";g+="</thead>";g+="<tbody>";c.each(f,function(h,i){g+="<tr>";g+="<td>"+i.pid+"</td>";g+="<td>"+i.title+"</td>";g+="<td>"+i.name+"</td>";g+="<td>"+i.timestamp+"</td>";g+="<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \""+i.pid+'", "queue");\'</td>';g+="</tr>"});g+="</tbody>";g+="</table>";g+="</div>";g+="</div>";c("#search-results").empty();c("#queue").append(g)};return{getItems:function(){d()}}}(jQuery));MMS.namespace("MMS.view");MMS.view=(function(b){var a;a=function(c){var d="";d+='<div id="actionFeedback"></div>';d+='<div id="error"></div>';d+='<article id="'+c.articleID+'" class="'+c.articleClass+'">';d+="<header>";if(c.h3ID!=="null"){d+='<h3 id="'+c.h3ID+'">'+c.h3Value+"</h3>"}if(c.header!=="null"){d+=c.header}d+="</header>";d+='<form id="'+c.formID+'">';d+='<div id="'+c.divID+'" class="'+c.divClass+'"></div>';d+="<footer>";if(c.footer!=="null"){d+=c.footer}d+="</footer>";d+="</form>";d+="</article>";b("#"+c.content).empty().append(d)};return{createView:function(c){a(c)}}}(jQuery));$(function(){var a={titleSet:{label:"Title",element:"title",id:"title",type:"text",vocabulary:"false",repeat:"false",displayOrder:2,required:"true"},creatorSet:{label:"Creator",element:"creator",id:"creator",type:"text",vocabulary:"true",repeat:"false",displayOrder:3,required:"true"},descriptionSet:{label:"Description",element:"description",id:"description",type:"textarea",vocabulary:"false",repeat:"false",displayOrder:7,required:"true"},subjectSet:{label:"Subject",element:"subject",id:"subject",type:"text",vocabulary:"true",repeat:"true",displayOrder:8,required:"true"},typeSet:{label:"Type",element:"type",id:"type",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},formatSet:{label:"Format",element:"format",id:"format",type:"text",vocabulary:"true",repeat:"false",displayOrder:8,required:"true"},identifierSet:{label:"Identifier",element:"identifier",id:"identifier",type:"text",vocabulary:"false",repeat:"false",displayOrder:16,required:"true"},instructorSet:{label:"Instructor",element:"instructor",id:"type-instructors",type:"text",vocabulary:"false",repeat:"false",displayOrder:17,required:"false"}};sessionStorage.setItem("mms_image_metadata_fields",JSON.stringify(a))});$(function(){MMS.configObj=MMS.configObj||{};if(document.domain==="mms.library.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib-devmms.cair.du.edu"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}else{if(document.domain==="lib.dev"){MMS.configObj.sslBaseUrl="https://"+document.domain+"/ereserves/";MMS.configObj.baseUrl="http://"+document.domain+"/ereserves/"}}}MMS.configObj.authenticate=MMS.configObj.sslBaseUrl+"index.php/admin/login";MMS.configObj.utils=MMS.configObj.sslBaseUrl+"index.php/utils/utils/ping_services";MMS.configObj.logout=MMS.configObj.baseUrl+"index.php/admin/login/logout";MMS.configObj.dashboard=MMS.configObj.baseUrl+"index.php/admin/dashboard";MMS.configObj.vocabUrl=MMS.configObj.baseUrl+"index.php/admin/controlled_vocabularies";MMS.configObj.uploadUrl=MMS.configObj.baseUrl+"libs/plupload/upload.html";MMS.configObj.roles=MMS.configObj.baseUrl+"index.php/admin/roles";MMS.configObj.users=MMS.configObj.baseUrl+"index.php/admin/users";MMS.configObj.collections=MMS.configObj.baseUrl+"index.php/admin/collections";MMS.configObj.ingest=MMS.configObj.baseUrl+"index.php/admin/ingest";MMS.configObj.search=MMS.configObj.baseUrl+"index.php/admin/search";MMS.configObj.repository=MMS.configObj.baseUrl+"index.php/admin/repository";MMS.configObj.objectTypes=MMS.configObj.baseUrl+"index.php/admin/object_types";MMS.configObj.batch=MMS.configObj.baseUrl+"index.php/admin/batch";MMS.configObj.xml=MMS.configObj.baseUrl+"index.php/admin/xml";MMS.configObj.nas=MMS.configObj.baseUrl+"index.php/admin/nas?object=";MMS.configObj.queue=MMS.configObj.baseUrl+"index.php/admin/queue";MMS.configObj.creatorapi="http://"+document.domain+"/vocabularies-service/index.php/alora/creators";MMS.configObj.subjectapi="http://"+document.domain+"/vocabularies-service/index.php/alora/subjects"});$(function(){MMS.login.init();MMS.metadata.init();MMS.user.init();MMS.collections.init();MMS.controlledVocabularies.init();MMS.search.init();MMS.batch.init();MMS.xml.init()});var MMS = MMS || {}

MMS.namespace = function( ns_string ) {

    var parts = ns_string.split("."),
    parent = MMS,
    i;

    if (parts[0] === "MMS") {
        parts = parts.slice(1);
    }

    for(i = 0; i < parts.length; i +=1) {
        if (typeof parent[parts[i]] === "undefined") {
            parent[parts[i]] = {};
        }
        parent = parent[parts[i]];
    }
    return parent;
};
MMS.namespace("MMS.utils");

MMS.utils = (function($) {

    "use strict";

    var doAjax,
        focusForm,
        pingServices,
        viewObj,
        sanitizeInput;

    viewObj = {
        content: 'content',
        articleID: 'null',
        articleClass: 'null',
        h3ID: 'null',
        h3Value: '',
        formID: 'null',
        divID: 'null',
        divClass: 'null',
        header: 'null',
        footer: 'null'
    };

    /**
     * makes the ajax request
     * @param object requestObj
     */
    doAjax = function(requestObj) {

        requestObj.timeout = 5000;  // 5 sec.
        requestObj.error = function ( textStatus, errorThrown ) {
                               $("#error").html("<h4 class='alert_error'>An error has occurred (" + errorThrown + ").  Please contact library-support@du.edu for assistance.</h4>");
                            };
        requestObj.statusCode =  {
                                    403: function() {
                                        alert("Session expired");
                                        MMS.view.createView(viewObj);
                                        $("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");
                                        setTimeout(function() {
                                            window.location = MMS.configObj.sslBaseUrl;
                                        }, 7000);
                                    }
                                 };

        $(document).ajaxStart(function() {
            $.fancybox.showLoading();
        });

        $(document).ajaxStop(function() {
            $.fancybox.hideLoading();
        });

        $.ajax(requestObj);
    };

    /**
     * checks if Fedora & Solr are available
     */
    pingServices = function() {

        var requestObj = {
            type: "GET",
            url: MMS.configObj.utils,
            dataType: "json",
            cache: false,
            success: function (response) {

                if (typeof response === null || response.isFedoraUp !== 200 || response.isSolrUp !== 'OK') {
                    $("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");
                    $("#authenticate").attr("disabled", "disabled");
                }
            }
        };

        doAjax(requestObj);
    };

    /**
     * removes tags from input
     * @param value
     */
    sanitizeInput = function(value) {
        return value.replace(/</g, "").replace(/>/g, "");
    };

    /** NOT-USED
     * hides all article blocks except the one specified
     * @param id
     */
    focusForm = function(id) {

        if (id !== "#metadata-forms") {
            $(".optional_fields").hide();
            $("#optional_fields").hide();
        }

        $("article:not(" + id + ", .breadcrumbs)").hide();
    }

    return {
        doAjax: function(requestObj) {
            doAjax(requestObj);
        },
        focusForm: function(id) {
            focusForm(id);
        },
        sanitizeInput: function(value) {
            return sanitizeInput(value);
        },
        pingServices: function() {
            pingServices();
        }
    };

}(jQuery));
MMS.namespace("MMS.controlledVocabularies");

MMS.controlledVocabularies = (function($) {

    "use strict";

    // ** dependencies **/
    // MMS.configObj
    // MMS.utils

    var getVocabularyTerms,
        id,
        init,
        displayVocabularyTerms,
        displayControlledVocabulariesBox,
        selectVocabularyTerm,
        setVocabularyTerm,
        requestObj,
        getRole,
        getTermData,
        displayTermData,
        controlledVocabularyView,
        createControlledVocabularyForm,
        getLists,
        resetLists,
        displayList,
        appendVocabValues,
        saveLocalCreator,
        saveLocalSubject,
        createLocalSubjectsForm,
        validate,
        loadCreatorForm,
        loadSubjectForm,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'controlled-vocabulary-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'controlled-vocabulary-form',
        divID: 'controlledvocabulary',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'
    };

    controlledVocabularyView = function() {

        var view = '';
        view += '<article id="controlled-vocabulary-section" class="module width_quarter">';
        view += '<header><h3>Controlled Vocabularies</h3></header>';
        view += '<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';
        view += '<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';
        view += '<p>';
        view += '<select id="vocab-options" name="vocab-options">';
        view += '<option value="ulan" selected>ULAN</option>';
        view += '<option value="aat">AAT</option>';
        view += '<option value="locnames">LC-Names</option>';
        view += '<option value="locsubjects">LC-Subjects</option>';
        view += '<option value="aloracreators">Alora-Creators</option>';
        view += '<option value="alorasubjects">Alora-Subjects</option>';
        view += '</select>&nbsp;';
        view += '<input id="getVocabularies" type="submit" value="Go" />';
        view += '</p>';
        view += '</div>';
        view += '<div id="vocabulary-results"></div>';
        view += '</article>';

        return view;
    };

    /**
     * loads creator form
     */
    loadCreatorForm = function() {

        $('#search-results').empty();
        MMS.view.createView(viewObj);
        createControlledVocabularyForm();
        validate();
        $(".current").html("Creator");
        $("#controlled-vocabulary-form").show();

    };

    /**
     * loads subject form
     */
    loadSubjectForm = function() {

        $('#search-results').empty();
        MMS.view.createView(viewObj);
        createLocalSubjectsForm();
        validate();
        $(".current").html("Subject");
        $("#controlled-vocabulary-form").show();

    };

    /**
     * validates core form fields
     */
    validate = function() {
        $("#controlled-vocabulary-form").validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveLocalCreator();
            }
        });
    };

    /**
     * saves local creator vocab
     */
    saveLocalCreator = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.creatorapi,
            data:  $("#controlled-vocabulary-form").serialize(),
            dataType: "text",
            cache: false,
            success: function (response) {

                if (response === "success") {
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    $("#controlled-vocabulary-form").find('input[type=text], textarea').val('');
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                    return false;
                } else {
                    alert("Record Not Saved.");
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * saves local subject vocab
     */
    saveLocalSubject = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.subjectapi,
            data:  $("#controlled-vocabulary-form").serialize(),
            dataType: "text",
            cache: false,
            success: function (response) {

                if (response === "success") {
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    $("#controlled-vocabulary-form").find('input[type=text], textarea').val('');
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                    return false;
                } else {
                    alert("Record Not Saved.");
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     *  creates local subjects entry form
     */
    createLocalSubjectsForm = function() {

        var view = '';
        view += "<fieldset>";
        view += "<label>";
        view += "* Subject";
        view += "</label>";
        view += "<input id='subject' name='subject[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<label>";

        $("#controlledvocabulary").append(view);
    };

    /**
     * creates local vocabulary entry form
     */
    createControlledVocabularyForm = function() {

        var view = '';
        view += "<fieldset>";
        view += "<label>";
        view += "* Creator";
        view += "</label>";
        view += "<input id='creator' name='creator[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Creator Alternative";
        view += "</label>";
        view += "<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Nationality";
        view += "</label>";
        view += "<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Role";
        view += "</label>";
        view += "<input id='description-role' name='description.role[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Biography";
        view += "</label>";
        view += "<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Sex";
        view += "</label>";
        view += "<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Source";
        view += "</label>";
        view += "<input id='source' name='source' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Earliest Date";
        view += "</label>";
        view += "<input id='earliestdates' name='earliestdates' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Latest Date";
        view += "</label>";
        view += "<input id='latestdates' name='latestdates' type='text' class='required' />";
        view += "</fieldset>";

        $("#controlledvocabulary").append(view);
    };

    /**
     * retrieves role ID
     * @return {*}
     */
    getRole = function() {
        return sessionStorage.getItem("roleID");
    };

    /**
     * retrieves search values and makes api request
     */
    getVocabularyTerms = function() {

        var option,
        term = $("input#vocabTerm").val(),
        checked = $("select#vocab-options");
        term = MMS.utils.sanitizeInput(term);

        if (checked.length > 0) {
            option = checked.val();
        }

        requestObj = {
            type: "POST",
            url: MMS.configObj.vocabUrl,
            data: "term=" + term + "&option=" + option,
            dataType: "json",
            cache: true,
            success: function (response) {
                displayVocabularyTerms(option, response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * retrieves vocabulary based on id
     * @param id
     * @param vocabType
     * @param callback
     */
    getTermData = function(id, vocabType, callback) {

        var data = "id=" + id + "&vocabType=" + vocabType;

        if (callback === undefined) {
            var callback = function (response) {
                displayTermData(id, response);
            };
        }

        requestObj = {
            type: "GET",
            url: MMS.configObj.vocabUrl,
            data: data,
            dataType: "json",
            cache: true,
            success: callback
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * Displays
     * @param id
     * @param response
     */
    displayTermData = function(id, response) {

        var results = '',
        val = $('span#' + id + '-toggle').text();

        if (val === '( + )' ) {
            $('span#' + id + '-toggle').text('( - )');
            $('div#' + id + '-vocab-data').show();
        } else if (val === '( - )') {
            $('div#' + id + '-vocab-data').hide();
            $('span#' + id + '-toggle').text('( + )');
        }

        $.each(response, function(key, value) {

            if (value.subject_id !== undefined) {
                results += '<p><strong>Subject id:</strong> ' + value.subject_id + '</p>';
            }

            if (value.nationalities !== '') {
                results += '<p><strong>Nationality:</strong> ' + value.nationalities + '</p>';
            }

            if (value.role_id !== '') {
                results += '<p><strong>Role:</strong> ' + value.role_id + '</p>';
            }

            if (value.preferred_terms_source_id !== '') {
                results += '<p><strong>Source:</strong> ' + value.preferred_terms_source_id + '</p>';
            }

            if (value.non_preferred_terms_term_text !== '') {
                results += '<p><strong>Alternative name:</strong> ' + value.non_preferred_terms_term_text + '</p>';
            }

            if (value.preferred_biographies_biography_text !== '') {
                results += '<p><strong>Bio:</strong> ' + value.preferred_biographies_biography_text + '</p>';
            }

            if (value.preferred_biographies_birth_date !== '') {
                results += '<p><strong>Birth date:</strong> ' + value.preferred_biographies_birth_date + '</p>';
            }

            if (value.preferred_biographies_death_date !== '') {
                results += '<p><strong>Death date:</strong> ' + value.preferred_biographies_death_date + '</p>';
            }

            if (value.preferred_biographies_sex !== '') {
                results += '<p><strong>Sex:</strong> ' + value.preferred_biographies_sex + '</p>';
            }
        });

        $('div#' + id + '-vocab-data').empty().append(results);
    };

    /**
     * Sets the selected vocabulary term in designated field
     * @param term
     * @param count
     * @param fieldName
     * @returns field
     */
    setVocabularyTerm = function(term, count, fieldName) {

        var field;

        while (count < 50) {  // 50 is an arbritrary number...
            field = $('#' + fieldName + '-' + count).val();
            if (field === '') {
                $('#' + fieldName + '-' + count).val(term);
                break;
            }
            count++;
        }

        return field;
    };

    /**
     * selects vocabulary term and places it in the current form field
     * @param id
     * @param term
     */
    selectVocabularyTerm = function(id, term) {

        var creator,
        repository,
        subject,
        stylePeriod,
        option,
        count = 1,
        callback = function(response) {
            appendVocabValues(response);
        },

        checked = $("select#vocab-options");

        if (getRole() == "2") {
            $("#" + id).removeAttr("disabled");
            $("#" + id).attr("readonly", "readonly");
        }

        if (checked.length > 0) {
            option = checked.val();
        }

        if (option === 'ulan' || option === 'locnames' || option === 'aloracreators') {

            if (option !== 'locnames') {
                getTermData(id, option, callback);
            }

            creator = $('#creator-0').val();

            if (creator === '') {
                setVocabularyTerm(term, 0, 'creator');
            } else {

                repository = $('#coverage-spatial-repository-0').val(term);

                if (repository === '') {
                    setVocabularyTerm(term, 0, 'coverage-spatial-repository');
                } else {
                    setVocabularyTerm(term, count, 'coverage-spatial-repository');
                }
            }

        } else if (option === 'aat' || option === 'locsubjects' || option === 'alorasubjects') {

            stylePeriod = $('#coverage-temporal-styleperiod-0').val();

            if (stylePeriod === '') {
                setVocabularyTerm(term, 0, 'coverage-temporal-styleperiod');
            } else {
                stylePeriod = setVocabularyTerm(term, count, 'coverage-temporal-styleperiod');
            }

            if (stylePeriod === undefined) {

                subject = $('#subject-0').val();

                if (subject === '') {
                    setVocabularyTerm(term, 0, 'subject');
                } else {
                    setVocabularyTerm(term, count, 'subject');
                }
            }
        }
    };

    /**
     * adds additional creator vocabulary fields when a term is selected from the vocab list
     * @param response
     */
    appendVocabValues = function(response) {

        var results = '';
        $.each(response, function(key, value) {
            // TODO: check each value. don't append empty values
            results += '<input name="creator.alternative[]" type="hidden" value="' + value.non_preferred_terms_term_text + '" />';
            results += '<input name="description.creatorbio[]" type="hidden" value="' + value.preferred_biographies_biography_text + '" />';
            results += '<input name="description.nationality[]" type="hidden" value="' + value.nationalities + '" />';
            results += '<input name="description.role[]" type="hidden" value="' + value.role_id + '" />';
            results += '<input name="description.lifedates[]" type="hidden" value="' + value.preferred_biographies_birth_date + '-' + value.preferred_biographies_death_date + '" />';
            results += '<input name="source[]" type="hidden" value="' + value.preferred_terms_source_id + '" />';
        });

        $('div#metadata').append(results);
    };

    /**
     * displays vocabulary terms
     * @param id
     * @param type
     * @param response
     */
    displayVocabularyTerms = function(option, response) {

        var recordset,
        results = '';

        if (option === 'ulan') {

            recordset = response.getty.response.docs;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text_t + "</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData(" + value.id + ", \"ulan\");return false;'><span id='" + value.id + "-toggle'>( + )</span></a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
            });

        } else if (option === 'aat') {

            recordset = response.getty.response.docs;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text_t + "</a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
            });

        } else if (option === 'locnames' || option === 'locsubjects') {

            recordset = response.loc;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + id + ", $(this).text());return false;'>" + response.loc[key].title + "</a><br /><a href='#'>" + value.id + "</a></li></ul></p>";
            });

        } else if (option === 'aloracreators' || option === 'alorasubjects') {

            recordset = response.local;

            if (recordset.message !== undefined) {
                results += "<p><ul><li>No results found.</li></ul></p>";
                // TODO: not working ...
                $("div#vocabulary-results").empty().append(results);
                return;
            }

            $.each(recordset, function(key, value){
                if (option === 'aloracreators') {
                    results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text + "</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData(" +  value.id + ", \"local\");return false;'><span id='" + value.id + "-toggle'>( + )</span></a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
                } else {
                    results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text + "</a></li></ul></p>";

                }
            });
        }

        $("div#vocabulary-results").empty().append(results);
    };

    /**
     * displays controlled vocabulary search box
     */
    displayControlledVocabulariesBox = function() {

        $("#controlled-vocabulary-section").show();

        var view = controlledVocabularyView();
        $("#content").append(view);

        $("input#vocabTerm").keyup(function(event){
            if(event.keyCode == 13){
                $("input#getVocabularies").click();
            }
        });

        $("select#vocab-options").keyup(function(event){
            if(event.keyCode == 13){
                $("input#getVocabularies").click();
            }
        });

        $("input#getVocabularies").on("click", function() {
            getVocabularyTerms();
        });
    };

    /**
     *
     */
    resetLists = function() {
        $("select#type-arttypes").val("");
        $("select#type-timeperiods").val("");
        $("select#type-instructors").val("");
    };

    /**
     * retrieves form lists
     */
    getLists = function(callback) {

        var lists = ['arttypes', 'timeperiods', 'instructors'],
        requestObj = {},
        //display,
        i;

        if (callback === undefined) {
            callback = function (response) {
                displayList(response);
            }
        }

        for (i=0;i<lists.length;i++) {

            requestObj.type = "GET";
            requestObj.url = MMS.configObj.vocabUrl;
            requestObj.data = 'vocabType=' + lists[i];
            requestObj.dataType = 'json';
            requestObj.cache = true;
            requestObj.success = callback;

            MMS.utils.doAjax(requestObj);
        }
    };

    /**
     * displays lists
     * @param response
     */
    displayList = function(response) {

        var response = $.parseJSON(response);
        var list;
        var vocabType;
        var arttype = sessionStorage.getItem('arttypes');
        var timeperiod = sessionStorage.getItem('timeperiods');
        var instructor = sessionStorage.getItem('instructors');

        list = "<option value=''>---Select an term---</option>";
        $.each(response, function(key, value) {

            if (value.type) {
                vocabType = value.type;
            }

            if (value.term === arttype || value.term === timeperiod || value.term === instructor) {
                list += "<option value='" + value.term + "' selected>" + value.term + "</option>";
            } else {
                list += "<option value='" + value.term + "'>" + value.term + "</option>";
            }

        });

        $("select#type-" + vocabType).html(list);
        //sessionStorage.removeItem('arttypes');
        //sessionStorage.removeItem('timeperiods');
        //sessionStorage.removeItem('instructors');
    };

    init = function() {
        $("#controlled-vocabulary-section").hide();
    };

    return {
        getVocabularyTerms: function() {
            getVocabularyTerms();
        },
        displayControlledVocabulariesBox: function(event, id) {
            displayControlledVocabulariesBox(event, id);
        },
        selectVocabularyTerm: function(id, term) {
            selectVocabularyTerm(id, term);
        },
        getTermData: function(id, vocabType) {
            getTermData(id, vocabType);
        },
        getLists: function() {
            getLists();
        },
        resetLists: function() {
            resetLists();
        },
        loadCreatorForm: function() {
            loadCreatorForm();
        },
        loadSubjectForm: function() {
            loadSubjectForm();
        },
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.metadata");

MMS.counterObj = MMS.counterObj || {};
MMS.counterObj.count = 0;

MMS.metadata = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var viewObj,
        createMetadataForm,
        createMetadataEditForm,
        createOptionalElementLinks,
        cloneFieldSet,
        constructFieldEvent,
        metadata = "#metadata",
        metadataForm = "#metadata-form",
        metadataForms = "#metadata-forms",
        constructField,
        $optionalField,
        sortObjects,
        $f,
        $fObj,
        repeatField,
        removeField,
        removeClonedField,
        validate,
        saveMetadata,
        loadForm,
        init,
        requestObj,
        getMetadata,
        deleteMetadata,
        mms_metadata_fields,
        cloneRecord,
        createBackLink,
        back,
        clearField,
        appendOptionalField;

    viewObj = {
        content: 'content',
        articleID: 'metadata-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'pid',
        h3Value: '',
        formID: 'metadata-form',
        divID: 'metadata',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'
    };

    /**
     * constructs the core elements and adds them to the DOM
     * @param objectType
     */
    createMetadataForm = function(objectType) {

        var sortedFields = sortObjects(mms_metadata_fields, 'displayOrder');

        $.each(sortedFields, function( i, field ) {
            $f = constructField( field );
            $f.appendTo(metadata);
        });

        $(metadata).append("<input name='objectType' type='hidden' value='" + objectType + "'/>");
        MMS.controlledVocabularies.getLists();
        sessionStorage.removeItem('arttypes');
        sessionStorage.removeItem('timeperiods');
        sessionStorage.removeItem('instructors');
    };

    /**
     * returns user to their search results
     * @param type
     * @return link
     */
    createBackLink = function(type) {

        var link;
        var linkMessage;

        if (type === 'queue') {
            linkMessage = "Back to Review Queue";
        } else if (type === 'search') {
            $("#search-results").hide();
            linkMessage = "Back to Search Results";
        }

        link = "&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\"" + type + "\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;" + linkMessage + "</a>";

        return link;
    };

    /**
     *
     * @param type
     */
    back = function(type) {

        if (type === 'queue') {
            MMS.queue.getItems();
        } else if (type === 'search') {
            $("#search-results").show();
            $("#content").empty();
        }

        $("#clone-record").empty();
        $("#controlled-vocabulary-section").hide();

        return;
    };

    /**
     * constructs metadata edit form
     * @param response
     * @param pid
     */
    createMetadataEditForm = function(response, pid, type) {

        //console.log(response);

        var counter = 100,
        editForm = "",
        idClass,
        objectType;

        $(".current").html("Edit Metadata");
        $(metadata).empty();

        editForm += "<div id='edit-mode'></div>";
        editForm += "<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";
        editForm += "<fieldset id='isPid'>";
        editForm += "<label>pid</label>";
        editForm += "<input type='text' value='" + pid + "'  disabled />";
        editForm += "</fieldset>";

        if (type === 'queue') {
            editForm += "<input id='type' name='type' type='hidden' value='" + type + "' />";
        } else if (type === 'search') {
            editForm += "<input id='type' name='type' type='hidden' value='" + type + "' />";
        }

        mms_metadata_fields = JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));
        var sortedFields = sortObjects(mms_metadata_fields, 'displayOrder');

        $.each(sortedFields, function( i, field ) {
            $.each(response, function(key, value) {

                if (field.element === key) {

                    idClass = key.replace(".", "-");

                    if (typeof value === "string") {

                        editForm += "<fieldset class='" + idClass + "-0'>";

                        if (field.repeat === 'true') {
                            editForm += "<label>" + field.label + "&nbsp;<span class='clone'><a href='#' id='" + key + "-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add " + key + "'><span>Add</span></a></span></label>";
                        } else {
                            editForm += "<label>" + field.label + "</label>";
                        }


                        if (field.type === 'select') {

                            if (field.required === "true") {
                                var required = "class='required";
                            }

                            if (field.element === "type.arttype") {
                                sessionStorage.setItem("arttypes", value);
                            } else if (field.element === "date.timeperiod") {
                                sessionStorage.setItem("timeperiods", value);
                            } else if (field.element === "instructor") {
                                sessionStorage.setItem("instructors", value);
                            }

                            editForm += "<select name='" + field.element + "[]' id='" + field.id + "' " + required + "'></select>";
                        }


                        if (field.type === 'text') {
                            editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value + "' " + required +" />";
                        }

                        if (field.type === 'textarea') {
                            editForm += "<textarea id='"+ key + "-" + counter + "' name='" + key + "[]' rows='7' cols='55' " + required + ">" + value + "</textarea> ";
                        }

                        editForm += "</fieldset>";

                    }

                    if (typeof value === "object") {

                        $.each(value, function(key1, value1) {

                            counter++;

                            if (counter > 101) {
                                editForm += "<fieldset class='" + idClass + "-" + counter + "'>";
                            } else {
                                editForm += "<fieldset class='" + idClass + "-0'>";
                            }

                            if (field.repeat === 'true') {

                                if (counter > 101) {
                                    editForm += "<label>" + field.label + "&nbsp;<span class='remove'><a href='#' id='" + key + "-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove " + key + "'><span>Del</span></a></span></label>";
                                } else {
                                    editForm += "<label>" + field.label + "&nbsp;<span class='clone'><a href='#' id='" + key + "-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add " + key + "'><span>Add</span></a></span></label>";
                                }

                            } else {
                                editForm += "<label>" + field.label + "</label>";
                            }

                            /*
                            if (field.type === 'select') {

                                if (field.required === "true") {
                                    var required = "class='required";
                                }

                                //editForm += "<select name='" + field.id + "[]' id='" + field.id + "' " + required + "'></select>";
                                editForm += "<input id='" + key + "-" + key + "' name='" + key + "[]' type='text' value='test" + value + "' " + required +" />";
                                //editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value1 + "' />";
                            }
                            */

                            if (field.type === 'text') {
                                editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value1 + "' " + required +" />";
                            }

                            if (field.type === 'textarea') {
                                editForm += "<textarea id='"+ key + "-" + counter + "' name='" + key + "[]' rows='7' cols='55' " + required + ">" + value1 + "</textarea> ";
                            }

                            editForm += "</fieldset>";

                        });
                    }
                }
            });
        });

        $.each(response, function(key, value) {

            // hidden
            if (key === "collection") {

                editForm += "<input id='" + key + "-0' name='collection' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.system") {

                editForm += "<input id='" + key + "' class='pid' name='pid' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.legacy") {

                editForm += "<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.master") {

                editForm += "<input id='identifier-master' name='identifier.master[]' type='hidden' value='" + value + "' />";

            } else if (key === "objectType") {

                objectType = value;
                editForm += "<input name='" + key + "' type='hidden' value='" + value + "' />";

            } else if (key === "date.created") {

                editForm += "<fieldset>";
                editForm += "<label class='datecreated'>" + key + "</label>";
                editForm += "<input class='datecreated' type='text' value='" + value + "' disabled />";
                editForm += "<input class='datecreated' name='" + key + "[]' type='hidden' value='" + value + "'/>";
                editForm += "</fieldset>";

            } else if (key === "date.modified") {

                editForm += "<fieldset>";
                editForm += "<label class='datemodified'>" + key + "</label>";
                editForm += "<input class='datemodified' type='text' value='" + value + "' disabled />";
                editForm += "</fieldset>";

            }
        });

        $.each(sortedFields, function( i, field ) {

            if (field.required === "false") {
                editForm += "<fieldset class='" + field.id + "-0' style='display:none;'>";
                editForm += "<label>" + field.label + "&nbsp;<span class='remove'><a href='#' id='" + field.id + "-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove " + field.element + "'><span>Del</span></a></span></label>";

                if (field.type === "text") {
                    editForm += "<input id='" + field.id + "-0' name='" + field.element + "[]' type='" + field.type + "' value='' />";
                } else if (field.type === "textarea") {
                    editForm += "<textarea id='"+ field.id +"-0' name='" + field.element + "[]' rows='7' cols='55'></textarea> ";
                }
                editForm += "</fieldset>";
            }
        });

        //MMS.controlledVocabularies.getLists();

        viewObj.footer = '<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);
        var link = createBackLink(type);
        $("#pid").append(link);
        $(metadata).append(editForm);
        validate();
        $(".optional_fields").show();
        $("#optional_fields").show();
        $(metadataForms).show();
        createOptionalElementLinks();
        //MMS.controlledVocabularies.displayControlledVocabulariesBox();
    };

    /**
     * binds events to core fields (clone/remove)
     * @param event
     * @param id
     */
    constructFieldEvent = function(event, id) {

        var action,
        idArray = id.split("-"),
        idCount = idArray[idArray.length - 2],
        i,
        newId,
        fieldElement,
        tempArr = [];

        if (idArray[idArray.length - 1] === "clone") {

           idArray.pop();
           idArray.pop();

           for (i=0; i < idArray.length;i++) {
                tempArr.push(idArray[i]);
           }

           newId = tempArr.join("-");
           newId = newId.replace(".", "-");

           action = function() {

               $.each(mms_metadata_fields, function( i, field ) {

                   fieldElement = field.element.replace(".", "-");
                   fieldElement = fieldElement.replace(".", "-");

                   if (newId === fieldElement) {
                       cloneFieldSet( event, field );
                   }
               });
           };

           repeatField( action );

        } else if (idArray[idArray.length - 1] === "remove") {

            idArray.pop();
            for (i=0; i < idArray.length;i++) {
                tempArr.push(idArray[i]);
            }

            newId = tempArr.join("-");

            if (idCount === "0") {
                action = function() { $("#" + newId).val(""); $("." + newId).hide() };
            } else {
                action = function() { $("." + id).remove(); };
            }

            removeField( action );
        }
    };

    /**
     * removes cloned field
     * @param event
     * @param id
     */
    removeClonedField = function(event, id) {
        event.preventDefault();
        event.stopPropagation();
        id = id.replace("-remove", "");
        $("." + id).remove();
    }

    /**
     * removes field - core fields
     * @param action
     */
    removeField = function(action) {
       action();
    };

    /**
     * clones field - core fields
     * @param action
     */
    repeatField = function(action) {
        action();
    };

    /**
     * clears disabled editor vocabulary fields
     * @param id
     */
    clearField = function(id) {
        id = id.replace("-clear", "");
        $('#' + id).val('');
    };

    /**
     * constructs form fields
     * @param filedObj
     * @return fObj
     */
    constructField = function( fieldObj) {

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));
        var field = "";
        var clearField = "";

        if (fieldObj.type === "select") {

            if (fieldObj.required === "true") {
                var required = "class='required";
            }

            field += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";
            field += "<label for='" + fieldObj.id + "'>" + fieldObj.label + "</label>";
            field += "<select name='" + fieldObj.element + "[]' id='" + fieldObj.id + "' " + required + "'></select>";
            field += "</fieldset>";

        } else {

            if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
                clearField = "&nbsp;&nbsp;<a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='" + MMS.configObj.baseUrl + "images/glyphicons_197_remove.png' alt='Remove' /></a>";
            }

            field += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";
            field += "<label>";
            field += fieldObj.label;

            if (fieldObj.repeat === "true") {
                field += "<span class='clone'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add " + fieldObj.element + "'><span>Add</span></a></span>";
            } else if (fieldObj.repeat === "false") {
                field += "<a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"; //" + fieldObj.element + "'
            }

            if (fieldObj.required === "false") {
                field += "<span class='remove'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove " + fieldObj.element + "'><span>Del</span></a></span>";
            }

            field += "</label>"  + clearField;

            if (fieldObj.type === "text") {
                field += "<input ";
            } else if(fieldObj.type === "textarea") {
                field += "<textarea ";
            }

            field += "id='" + fieldObj.id + "-" + MMS.counterObj.count + "'";
            field += "name='" + fieldObj.element + "[]' ";
            field += "type='" + fieldObj.type +  "' ";

            if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
                field += "disabled='disbled'";
            }

            field += "class='";

            if (fieldObj.required === "true") {
                field += "required";
            }

            field += "'";

            if (fieldObj.type === "text") {
                field += "/>";
            } else if (fieldObj.type === "textarea") {
                field += "rows='14' cols='45'></textarea>";
            }

            field += "</fieldset>";
        }

        if (fieldObj.required === "true") {
            $fObj = $(field);
        } else if (fieldObj.required === "false") {
            $fObj = $(field).hide();
        }

        return $fObj;
    };

    /**
     * generates optional field links
     * @param options

    createOptionalElementLinks = function() {

        $("#optional_fields").empty();

        $.each(mms_metadata_fields, function( i, field ) {

            if (field.required === "false") {

                var menuField = "<li class='icn_categories'><a href='#'>" + field.element + "</a></li>";
                $optionalField = $(menuField).on("click", "a", function(event) {
                                                                    event.stopPropagation();
                                                                    event.preventDefault();
                                                                    $("." + field.id + "-0").show();
                                                               });
                $optionalField.appendTo("#optional_fields");

            }
        });
    };
     */

    /**
     * generates optional field links
     * @param options
     */
    createOptionalElementLinks = function() {

        $("#optional_fields").empty();

        $.each(mms_metadata_fields, function( i, field ) {

            if (field.required === "false") {

                var menuField = "<li class='icn_categories'><a href='#'>" + field.label + "</a></li>";
                $optionalField = $(menuField).on("click", "a", function(event) {
                    event.preventDefault();
                    MMS.metadata.appendOptionalField(field);
                });

                $optionalField.appendTo("#optional_fields");
            }
        });
    };

    /**
     *
     * @param event
     * @param fieldObj
     * @returns {string}
     */
    appendOptionalField = function(field) {
        $("." + field.id + "-0").show();
        location.hash = "#" + field.id + "-0";
    };

    /**
     * clones an existing field
     * @param fieldObj
     */
    cloneFieldSet = function(event, fieldObj) {

        event.preventDefault();
        event.stopPropagation();

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        MMS.counterObj.count++;

        var clone = "";
        var clonedField = "";
        clonedField += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";

        clonedField += "<label>";
        clonedField += fieldObj.label;

        clonedField += "&nbsp;<span class='remove'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove " + fieldObj.element + "'><span>Del</span></a></span>";

        if (fieldObj.vocabulary === "true") {
            //clonedField += "<span class='vocab'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-vocab' onclick='MMS.ui.createControlledVocabulariesDialogBox(event, this.id);' title='Controlled Vocabularies'><span>vocab</span></a></span>";
        }

        clonedField += "</label>";

        if (fieldObj.type === "text") {
            clonedField += "<input ";
        } else if(fieldObj.type === "textarea") {
            clonedField += "<textarea ";
        }

        clonedField += "id='" + fieldObj.id + "-" + MMS.counterObj.count + "'";
        clonedField += "name='" + fieldObj.element + "[]' ";
        clonedField += "type='" + fieldObj.type +  "' ";

        if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
            clonedField += "disabled='disabled'";
        }

        clonedField += "class='none ";

        clonedField += "'";

        if (fieldObj.type === "text") {
            clonedField += "/>";
        } else if (fieldObj.type === "textarea") {
            clonedField += "rows='10' cols='45'></textarea>";
        }

        clonedField += "</fieldset>";

        clone = $(clonedField).insertAfter("." + fieldObj.id + "-0");

        return clone;
    };

    /**
     * collects form data and sends to server
     */
    saveMetadata = function() {

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        if (profileObj.roleID === '2') {

            requestObj = {
                type: "PUT",
                url: MMS.configObj.queue,
                data:  $(metadataForm).serialize(),
                dataType: "json",
                cache: true,
                success: function (response) {
                    $('#metadata-form').find('input[type=text], textarea').val('');
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                }
            };

            MMS.utils.doAjax(requestObj);

            return;
        }

        var pid = $('.pid').val();
        var type = $('#type').val();

        requestObj = {
            type: "PUT",
            url: MMS.configObj.repository,
            data:  $(metadataForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.updated === 'true') {

                    requestObj = {
                        type: "GET",
                        url: MMS.configObj.repository,
                        data:  "pid=" + pid,
                        dataType: "json",
                        cache: true,
                        success: function (response, type) {

                            $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");
                            setTimeout(function() {
                                $("div#actionFeedback").empty();
                            }, 5000);
                            location.hash = "#header";
                            return false;

                            createMetadataEditForm(response, pid, type);
                        }
                    };

                    MMS.utils.doAjax(requestObj);

                } else if (response.created === 'true') {
                    $('#metadata-form').find('input[type=text], textarea').val('');
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    MMS.controlledVocabularies.resetLists();
                    location.hash = "#header";
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * retrieves record from repository and generates edit form
     * @param event
     * @param pid
     */
    getMetadata = function(event,pid, type) {

        event.preventDefault();

        requestObj = {
            type: "GET",
            url: MMS.configObj.repository,
            data:  "pid=" + pid,
            dataType: "json",
            cache: false,
            success: function (response) {
                createMetadataEditForm(response, pid, type);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * "Clones" record...
     * * The pid is removed from the rendered FORM.  When the user submits the record, the absence of a pid causes
     * the mms system to assign a new pid and therefore create a new record.
     */
    cloneRecord = function() {

        var pid = $('.pid').val();
        $('.pid').remove();
        $('#isPid').remove();
        $('.datecreated').remove();
        $('.datemodified').remove();
        $("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record " + pid + ".</h4>");
        setTimeout(function() {
            $("div#actionFeedback").remove();
        }, 10000);
    };

    /**
     * validates core form fields
     */
    validate = function() {
        $(metadataForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveMetadata();
            }
        });
    };

    /**
     * deletes record
     * @param pid
     */
    deleteMetadata = function(event, pid) {

        event.preventDefault();

        var remove = confirm("Are you sure you want to delete this record?");

        if (remove) {

            requestObj = {
                type: "POST",
                url: MMS.configObj.repository,
                data:  "pid=" + pid,
                dataType: "json",
                cache: true,
                success: function (response) {
                    if (response.deleted === 'true') {
                        $("#search-forms").hide();
                        $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");
                        setTimeout(function() {
                            $("div#actionFeedback").empty();
                        }, 5000);
                        location.hash = "#header";
                    } else {
                        alert('Error: Record not deleted.');
                    }
                }
            };

            MMS.utils.doAjax(requestObj);
        }
        return false;
    };

    /** http://stackoverflow.com/questions/8175093/simple-function-to-sort-a-json-object-using-javascript
     * sorts array of json objects by display order
     * @param array
     * @param key
     * @returns {*}
     */
    sortObjects = function(mms_metadata_fields, key) {

        var array = [];
        for (var i in mms_metadata_fields) {
            array.push(mms_metadata_fields[i]);
        }
        return array.sort(function(a, b) {
            var x = a[key]; var y = b[key];
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        });
    }

    /**
     * loads form based on object type
     * @param objectType
     */
    loadForm = function(objectType) {

        MMS.counterObj.count = 0;
        $('#search-results').empty();
        MMS.view.createView(viewObj);

        if (objectType === "image") {
            var fields = [];
            mms_metadata_fields = JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));
            createMetadataForm(objectType);
            createOptionalElementLinks();
        }
        validate();
        $(".current").html(objectType + " metadata");
        $("#clone-record").remove();
        $(metadataForms).show();
        $(".optional_fields").show();
        $("#optional_fields").show();
        $("#controlled-vocabulary-section").show();
        MMS.controlledVocabularies.displayControlledVocabulariesBox();

    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(metadataForms).hide();
        $(".optional_fields").hide();

        $(".formType").on("click", function(event) {
            loadForm($(this).attr("id"));
        });
    };

    return {
        getMetadata: function(event, pid, type) {
            getMetadata(event, pid, type);
        },
        deleteMetadata: function(event, pid) {
            deleteMetadata(event, pid);
        },
        removeClonedField: function(event, id) {
            removeClonedField(event, id);
        },
        constructFieldEvent: function(event, id) {
            constructFieldEvent(event, id);
        },
        cloneRecord: function(pid) {
            cloneRecord(pid);
        },
        back: function(type) {
            back(type);
        },
        createMetadataEditForm: function(response, pid, type) {
            createMetadataEditForm(response, pid, type);
        },
        appendOptionalField: function(field) {
            appendOptionalField(field);
        },
        clearField: function(id) {
            clearField(id);
        },
        loadForm: function(id) {
            loadForm(id);
        },
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.user");

MMS.user = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.ui
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var user = "#user",
        userForm = "#user-form",
        userForms = "#user-forms",
        getSessionInfo,
        constructUserAddForm,
        constructUserEditForm,
        listUsers,
        validateUserForm,
        loadForm,
        init,
        saveUserData,
        deleteUserData,
        requestObj,
        saveRequestObj,
        deleteRequestObj,
        requestRoleObj,
        requestCollectionObj,
        requestProfileObj,
        profileRequestObj,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'user-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'user-form',
        divID: 'user',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * validates user forms
     */
    validateUserForm = function() {

        $(userForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveUserData();
            }
        });
    };

    /**
     * constructs Add User form fields
     */
    constructUserAddForm = function() {

        viewObj.footer = '<div class="submit_link"><input type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);

        var fields = "";
        var firstName = "";
        var lastName = "";
        var duID = "";
        var cairUserName = "";
        var roles = "";
        var collections = "";

        firstName += "<fieldset>";
        firstName += "<label>";
        firstName += "* First Name";
        firstName += "</label>";
        firstName += "<input id='firstName' name='firstName' type='text' class='required' />";
        firstName += "</fieldset>";

        lastName += "<fieldset>";
        lastName += "<label>";
        lastName += "* Last Name";
        lastName += "</label>";
        lastName += "<input id='lastName' name='lastName' type='text' class='required' />";
        lastName += "</fieldset>";

        duID += "<fieldset>";
        duID += "<label>";
        duID += "* DU ID";
        duID += "</label>";
        duID += "<input id='duID' name='duID' type='text' class='required' />";
        duID += "</fieldset>";

        /*
        cairUserName += "<fieldset>";
        cairUserName += "<label>";
        cairUserName += "Active Directory Username (Windows Username)";
        cairUserName += "</label>";
        cairUserName += "<input id='cairUserName' name='cairUserName' type='text' />";
        cairUserName += "</fieldset>";
        */

        requestRoleObj = {
            type: "GET",
            url: MMS.configObj.roles,
            dataType: "json",
            cache: true,
            async: false,
            success: function (response) {

                roles += "<fieldset>";
                roles += "<label for='roleID'>* Roles</label>";
                roles += "<select name='roleID' id='roleID' class='required'>";
                roles += "<option value=''>---Assign a role--</option>";
                $.each(response, function(key, value) {
                    if (key != '3') {
                        roles += "<option value='" + key + "'>" + value + "</option>";
                    }
                });
                roles += "</select>";
                roles += "</fieldset>";

                $(user).append(roles);

            }
        };

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        if (profileObj.roleID == '3') {

            requestCollectionObj = {
                type: "GET",
                url: MMS.configObj.collections,
                dataType: "json",
                cache: true,
                async: false,
                success: function (response) {

                    collections += "<strong>* Assign a Collection</strong>";

                    $.each(response, function(key, value) {
                        collections += "<p><input id='" + value.collectionID + "' name='collections[]' type='radio' value='" + value.collectionID + "' /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                    });

                    $(user).append(collections);
                }
            };

            MMS.utils.doAjax(requestCollectionObj);

        } else {
            collections += "<input id='" + profileObj.collectionID + "' name='collections[]' type='hidden' value='" + profileObj.collectionID + "' />";
            fields += collections;
        }

        MMS.utils.doAjax(requestRoleObj);

        fields += firstName;
        fields += lastName;
        fields += duID;
        //fields += cairUserName;

        $(user).append(fields);

        validateUserForm();

    };

    /**
     * constructs Edit User form fields
     */
    listUsers = function() {

        viewObj.footer = 'null';
        MMS.view.createView(viewObj);

        // get users
        requestObj = {
            type: "GET",
            url: MMS.configObj.users,
            dataType: "json",
            cache: true,
            success: function (response) {

                // TODO: split out into display function
                var userResponse = "";
                userResponse += "<div class='tab_container'>";
                userResponse += "<div id='tab1' class='tab_content'>";
                userResponse += "<table class='tablesorter' cellspacing='0'>";
                userResponse += "<thead>";
                userResponse += "<tr>";
                userResponse += "<th>First Name</th>";
                userResponse += "<th>Last Name</th>";
                userResponse += "<th>Role</th>";
                userResponse += "<th>Active</th>";
                userResponse += "<th>Actions</th>";
                userResponse += "</tr>";
                userResponse += "</thead>";
                userResponse += "<tbody>";

                $.each(response, function(key, value) {

                    userResponse += "<tr>";
                    userResponse += "<td>" + value.firstName + "</td>";
                    userResponse += "<td>" + value.lastName + "</td>";
                    userResponse += "<td>" + value.roleName + "</td>";

                    if (value.isActive === "1") {
                        userResponse += "<td>Yes</td>";
                    } else {
                        userResponse += "<td>No</td>";
                    }

                    userResponse += "<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm(" + value.id + ");'></td>";
                    //delete <!--<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteUserData(" + value.id + "); return false;'>-->
                    userResponse += "</tr>";
                });

                userResponse += "</tbody>";
                userResponse += "</table>";
                userResponse += "</div>";
                userResponse += "</div>";

                $(user).append(userResponse);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * creates edit form
     * @param userID
     */
    constructUserEditForm = function(userID) {

        var profile = "";
        var roles = "";
        var collections = "";
        var isActive = "";

        viewObj.footer = '<div class="submit_link"><input type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);

        $(".current").html("Edit User");

        requestProfileObj = {

            type: "GET",
            url: MMS.configObj.users,
            data: "id=" + userID,
            dataType: "json",
            cache: false,
            async: false,
            success: function (response) {

                profile += "<input name='userID' type='hidden' value='" + userID + "' />";
                profile += "<fieldset>";
                profile += "<label>";
                profile += "* First Name";
                profile += "</label>";
                profile += "<input id='firstName' name='firstName' type='text' value='" + response[0].firstName + "' class='required' />";
                profile += "</fieldset>";

                profile += "<fieldset>";
                profile += "<label>";
                profile += "* Last Name";
                profile += "</label>";
                profile += "<input id='lastName' name='lastName' type='text' value='" + response[0].lastName + "' class='required' />";
                profile += "</fieldset>";

                $(user).append(profile);

                // get roles
                requestRoleObj = {
                    type: "GET",
                    url: MMS.configObj.roles,
                    dataType: "json",
                    cache: false,
                    async: false,
                    success: function (roleResponse) {

                        roles += "<fieldset>";
                        roles += "<label for='roleID'>* Roles</label>";
                        roles += "<select name='roleID' id='roleID' class='required'>";
                        roles += "<option value=''>---Assign a role--</option>";
                        $.each(roleResponse, function(key, value) {
                            if (response[0].roleID === key) {
                                roles += "<option value='" + key + "' selected>" + value + "</option>";
                            } else if (key != '3') {
                                roles += "<option value='" + key + "'>" + value + "</option>";
                            }
                        });
                        roles += "</select>";
                        roles += "</fieldset>";

                        $(user).append(roles);

                    }
                };

                var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

                if (profileObj.roleID == '3') {

                    // get collections
                    requestCollectionObj = {
                        type: "GET",
                        url: MMS.configObj.collections,
                        dataType: "json",
                        cache: false,
                        async: false,
                        success: function (collectionResponse) {

                            collections += "<strong>* Assigned Collection</strong>";

                            $.each(collectionResponse, function(key, value) {

                                if (response[1].collectionID === value.collectionID) {
                                    collections += "<p><input id='" + value.collectionID + "' name='collectionID' type='radio' value='" + value.collectionID + "' checked /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                                } else {
                                    collections += "<p><input id='" + value.collectionID + "' name='collectionID' type='radio' value='" + value.collectionID + "' /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                                }
                            });
                        }
                    };

                    MMS.utils.doAjax(requestCollectionObj);

                } else {
                    collections += "<input name='collectionID' type='hidden' value='" + profileObj.collectionID + "' />";
                }

                $(user).append(collections);
                MMS.utils.doAjax(requestRoleObj);

                isActive += "<label>";
                isActive += "isActive";
                isActive += "</label>";

                if (response[0].isActive == "1") {
                    isActive += "<input id='isActive' name='isActive' type='checkbox' value='" + response[0].isActive + "' checked />";
                } else {
                    isActive += "<input id='isActive' name='isActive' type='checkbox' value='" + response[0].isActive + "' />";
                }

                $(user).append(isActive);

            }
        };

        MMS.utils.doAjax(requestProfileObj);
        validateUserForm();
    };

    /**
     * saves user profile data
     */
    saveUserData = function() {

        saveRequestObj = {
            type: "PUT",
            url: MMS.configObj.users,
            data: $(userForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.updated === "true") {
                    listUsers();
                } else if (response.updated === "false") {
                    alert("Error: Update failed.");
                } else {
                    $('#user-form')[0].reset();
                }
            }
        };

        MMS.utils.doAjax(saveRequestObj);
    };

    /**
     * delete user profile data
     * @param userID
     */
    deleteUserData = function(userID) {

        var remove = confirm("Are you sure you want to delete this user?");

        if (remove) {

            deleteRequestObj = {
                type: "POST",
                url: MMS.configObj.users,
                data: "userID=" + userID,
                dataType: "json",
                cache: false,
                success: function (response) {

                    if (response.deleted === "true") {
                        listUsers();
                    } else if (response.deleted === "false") {
                        alert("Error: Update failed.");
                    }
                }
            };

            MMS.utils.doAjax(deleteRequestObj);
        }
    };

    /**
     * retrieves user's session information
     */
    getSessionInfo = function() {

        profileRequestObj = {
            type: "GET",
            url: MMS.configObj.users,
            data: "authenticated=true",
            dataType: "json",
            cache: false,
            success: function (response) {

                sessionStorage.setItem("mms_profile", JSON.stringify(response));
                var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));
                var user = profileObj.firstName + " " + profileObj.lastName + " (" + profileObj.roleName + ")";
                $("#user-role").append(user);

            }
        };

        MMS.utils.doAjax(profileRequestObj);
    };

    /** TODO: re-evaluate this approach
     * loads form based on object type
     */
    loadForm = function(formType) {

        if (formType === "addUser") {
            constructUserAddForm();
            $('#search-results').empty();
            $(".current").html("Add User");
        } else if (formType === "viewUsers") {
            listUsers();
            $('#search-results').empty();
            $(".current").html("Users");
        }
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(userForms).hide();

        $("#addUser").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        $("#viewUsers").on("click", function(event) {
            loadForm($(this).attr("id"));
        });
    };

    return {
        init:function() {
            return init();
        },
        constructUserEditForm:function(userID) {
            return constructUserEditForm(userID);
        },
        deleteUserData:function(userID) {
            return deleteUserData(userID);
        },
        getSessionInfo:function() {
            return getSessionInfo();
        }
    };

}(jQuery));MMS.namespace("MMS.collections");

MMS.collections = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.ui
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var collection = "#collection",
        collectionForm = "#collection-form",
        collectionForms = "#collection-forms",
        constructCollectionFields,
        constructEditCollectionFields,
        validate,
        loadForm,
        init,
        saveCollectionData,
        requestObj,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'collection-forms',
        articleClass: 'module width_full',
        h3ID: 'null',
        h3Value: '',
        formID: 'collection-form',
        divID: 'collection',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input type="submit" value="Save"></div>'
    };

    /** TODO: change method name
     * constructs collection form fields
     */
    constructCollectionFields = function() {

        MMS.view.createView(viewObj);

        var fields = "";
        var title = "";
        var description = "";
        var objectType = "";
        var isActive = "";

        // collection name
        title += "<fieldset>";
        title += "<label>";
        title += "* Title";
        title += "</label>";
        title += "<input id='title' name='title' type='text' class='required' />";
        title += "</fieldset>";

        // collection description
        description += "<fieldset>";
        description += "<label>";
        description += "* Description";
        description += "</label>";
        description += "<input id='description' name='description' type='text' class='required' />";
        description += "</fieldset>";

        isActive += "<input id='isActive' name='isActive' type='hidden' value='1' checked />";

        fields += title;
        fields += description;
        fields += isActive;

        $(collection).append(fields);

        // get object Types
        var objectTypeRequestObj = {

            type: "GET",
            url: MMS.configObj.objectTypes,
            dataType: "json",
            cache: true,
            success: function (response) {

                objectType += "<fieldset>";
                objectType += "<label>";
                objectType += "* Object Type";
                objectType += "</label>";
                objectType += "<br />";
                $.each(response, function(key, value) {
                   objectType += "<p><input id='" + value.objectType + "' name='objectType[]' type='checkbox' value='" + value.objectTypeID + "' /> " + value.objectType + "</p>";
                });

                objectType += "</fieldset>";
                $(collection).append(objectType);
            }
        };

        MMS.utils.doAjax(objectTypeRequestObj);

    };


    /**
     * TODO: change method name
     * constructs Edit User form fields
     */
    constructEditCollectionFields = function() {

        MMS.view.createView(viewObj);

        // get collections
        requestObj = {
            type: "GET",
            url: MMS.configObj.collections,
            dataType: "json",
            cache: true,
            success: function (response) {

                var collectionResponse = "";
                collectionResponse += "<div class='tab_container'>";
                collectionResponse += "<div id='tab1' class='tab_content'>";
                collectionResponse += "<table class='tablesorter' cellspacing='0'>";
                collectionResponse += "<thead>";
                collectionResponse += "<tr>";
                collectionResponse += "<th>Collection Name</th>";
                collectionResponse += "<th>Description</th>";
                collectionResponse += "<th>Active</th>";
                collectionResponse += "<th>Actions</th>";
                collectionResponse += "</tr>";
                collectionResponse += "</thead>";
                collectionResponse += "<tbody>";

                $.each(response, function(key, value) {

                    collectionResponse += "<tr>";
                    collectionResponse += "<td>" + value.title + "</td>";
                    collectionResponse += "<td>" + value.description + "</td>";

                    if (value.isActive === "1") {
                        collectionResponse += "<td>Yes</td>";
                    } else {
                        collectionResponse += "<td>No</td>";
                    }

                    //collectionResponse += "<td><input type='image' src='../../images/icn_edit.png' title='Edit'><input type='image' src='../../images/icn_trash.png' title='Trash'></td>";

                    collectionResponse += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \"" + value.collectionID + "\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \"" + value.collectionID + "\"); return false;'></td>";
                    collectionResponse += "</tr>";

                });

                collectionResponse += "</tbody>";
                collectionResponse += "</table>";
                collectionResponse += "</div>";
                collectionResponse += "</div>";

                $(collection).append(collectionResponse);

            }
        };

        MMS.utils.doAjax(requestObj);

    };

    /**
     * saves collection data
     */
    saveCollectionData = function() {

        requestObj = {
            type: "PUT",
            url: MMS.configObj.collections,
            data: $(collectionForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {
                $(collectionForm)[0].reset();
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * loads form based on object type
     */
    loadForm = function(formType) {

        if (formType === "addCollection") {
            constructCollectionFields();
            $(".current").html("Add Collection");
        } else if  (formType === "editCollection") {
            //TODO: build form
        } else if (formType === "deleteCollection") {
            //TODO: build form
        } else if (formType === "viewCollections") {
            constructEditCollectionFields();
            $(".current").html("Collections");
        }
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(collectionForms).hide();

        $("#addCollection").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        $("#viewCollections").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        validate();
    };

    /**
     * validates core form fields
     */
    validate = function() {
        $(collectionForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveCollectionData();
            }
        });
    };

    return {
        init:function() {
            return init();
        }
    };

}(jQuery));
MMS.namespace("MMS.login");

MMS.login = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var authenticate,
        login,
        validate,
        requestObj,
        module = ".module width_full",
        loginForm = "#login-form",
        init,
        logout;

    /**
     * sends the user's login credentials to the server
     */
    authenticate = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.authenticate,
            data: $(loginForm).serialize(),
            dataType: "json",
            cache: true,
            success: function (response) {
                $(module).hide();
                login(response);
            }
        };

         $("h3#message").ajaxStart(function() {
            $("#authenticate").attr("disabled", "disabled");
         });

        MMS.utils.doAjax(requestObj);

    };

    /**
     * checks the response and logs the user into the system
     * @param response
     */
    login = function(response) {
        if (response.isAuthenticated === "false") {
            $("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");
            $("#authenticate").removeAttr("disabled");
        } else if(response.isAuthenticated === "true") {
            window.location.replace(MMS.configObj.dashboard);
        }
    };

    /**
     * validates login form fields
     */
    validate = function() {
        $("#login-form").validate({
            errorClass: "invalid",
            submitHandler: function() {
                authenticate();
            }
        });
    };

    /**
     * destroys session
     */
    logout = function() {
        $("#logout").click(function() {

            requestObj = {
                type: "GET",
                url: MMS.configObj.logout,
                dataType: "json",
                success: function (response) {
                    if (response.logout === "true") {
                        sessionStorage.removeItem("mms_profile");
                        window.location.replace(MMS.configObj.sslBaseUrl);
                    }
                }
            };

            MMS.utils.doAjax(requestObj);

        });

        return false;
    };

    init = function() {
        validate();
        logout();
    }

    return {
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.search");

MMS.search = (function($) {

    "use strict";

    var doQuickSearch,
        spellCheck,
        term,
        searchString,
        didYouMeanSearch,
        didYouMeanTerm,
        displaySearchResponse,
        requestObj,
        init,
        viewObj,
        error = "<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";


    viewObj = {
        content: 'search-results',
        articleID: 'search-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'search-form',
        divID: 'search',
        divClass: 'tab_container',
        header: '<div class="pagination"></div>',
        footer: '<div class="pagination"></div>'
    };

    /**
     * performs a quick search
     * @param event
     */
    doQuickSearch = function(event) {

        $("#content").empty();

        event.preventDefault();

        term = $("input#quickSearch").val();
        term = MMS.utils.sanitizeInput(term);

        if (term === "") {
            return $("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>");
        }

        searchString = $("#search_box").serialize();

        $("#search").empty();
        $("#actionFeedback").empty();

        requestObj = {
            type: "GET",
            url: MMS.configObj.search,
            data: $("#search_box").serialize(),
            dataType: "json",
            cache: true,
            success: function (response) {

                if (response.error == 500) {
                    $("#error").html(error);
                } else {
                    $("#error").html("");
                    MMS.view.createView(viewObj);
                    displaySearchResponse(response);
                }
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * parses and displays search response
     * @param responseObj
     */
    displaySearchResponse = function(responseObj) {

        var results = "";
        var paginationArr = [];
        var page = "";
        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        //if (term.trim().indexOf(' ') === -1) {
            //spellCheck(responseObj);
        //}

        $("#search_box")[0].reset();
        $("#search-message").text("You searched for: " + term);
        $(".current").html("Search Results");

        if (responseObj.response.numFound === 0) {
            $("#search-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");
            return;
        }

        results += "<div>";
        results += "<div>";
        results += "<table class='tablesorter' cellspacing='0'>";
        results += "<thead>";
        results += "<tr>";
        results += "<th>Records Found: " + responseObj.response.numFound + "</th>";
        results += "<th>Actions</th>";
        results += "</tr>";
        results += "</thead>";
        results += "<tbody id='pages'>";

        $.each(responseObj.response.docs, function(key, value) {

            page += "<tr>";
            page += "<td width='85%'>";
            page += "<table width='85%' style='border-bottom: 1px dotted #ccc;'>";
            page += "<tr align='top'>";

            if (value.identifier_t[0] !== undefined) {
                page += "<td width='30%' align='center'><p><img src='" + MMS.configObj.nas + value.identifier_t[0] + "' alt='" + value.title_t[0] + "' border='1'></p></td>";
            }
            page += "<td width='40%' align='left'>";
            if (value.title_t !== undefined) {
                page += "<p><strong>Title:</strong> " + value.title_t[0] + "</p>";
            }
            if (value.creator_t !== undefined) {
                page += "<p><strong>Creator:</strong> " + value.creator_t[0] + "</p>";
            }

            page += "</td>";
            page += "</tr>";
            page += "</table>";
            page += "</td>";
            //page += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.id + "\", \"search\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \"" + value.id + "\"); return false;'></td>";
            page += "<td width='28%'>";
            page += "<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.id + "\", \"search\");'>";

            if (profileObj.roleID === "1") {
                page += "<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \"" + value.id + "\"); return false;'>";
            }

            page += "</td>";

            page += "</tr>";

            paginationArr.push(page);
            page = "";

        });

        results += "</tbody>";
        results += "</table>";
        results += "</div>";
        results += "</div>";

        $("#search").append(results);
        $("#search-results").show();

        MMS.pagination.init(paginationArr);
    };

    /** NOT USED...causes performance issues at server level
     * suggest a correct spelling of a search term
     * @param responseObj
     */
    spellCheck = function(responseObj) {

        var correctSpelling;

        $.each(responseObj.spellcheck.suggestions, function(key, value) {

            if (value !== "true") {
                if (value.suggestion !== undefined) {
                    $.each(value.suggestion, function(key, value) {
                        if (key === 0) {
                            didYouMeanTerm = value.word.trim();
                            correctSpelling = "<a href='#' id='didYouMeanSearch'>" + value.word.trim() + "</a>";
                        }

                    });
                }
            }
        });

        if (correctSpelling !== undefined) {
            $("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: " + correctSpelling + "</h4>");
            $("#didYouMeanSearch").on("click", function(event) {
                didYouMeanSearch();
            });
        }
    };

    /** NOT USED
     * executes a search using the "did you mean" term
     */
    didYouMeanSearch = function() {

        $("#search").empty();
        $("#searchActionFeedback").empty();

        var newSearchString = searchString.replace(term, didYouMeanTerm);
        term = didYouMeanTerm;

        requestObj = {
            type: "GET",
            url: MMS.configObj.search,
            data: newSearchString,
            dataType: "json",
            cache: true,
            success: function (response) {

                if (response.error == 500) {
                    $("#error").html(error);
                } else {
                    $("#error").html("");
                    displaySearchResponse(response);
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    }

    /**
     * binds events to HTML elements
     */
    init = function() {

        $("#search-forms").hide();
        $("form.quick_search").submit(function(event) {
            doQuickSearch(event);
        });
    };

    return {
        init:function() {
            return init();
        }
    };

}(jQuery));MMS.namespace("MMS.pagination");

MMS.pagination = (function($) {

    "use strict";

    var pages,
        currentPage = 1,
        pageCount,
        recordsPerPage = 4,
        renderPagingControls,
        renderPage,
        recordCount,
        pagination,
        next,
        previous,
        init;

    /**
     * calculates the page count
     */
    pageCount = function() {
        return Math.ceil(recordCount/recordsPerPage);
    };

    /**
     * renders page controls
     */
    renderPagingControls = function() {

        $("div.pagination").empty();

        var pagingControls = "";
        pagingControls += "<ul id='pagination-flickr'>";
        pagingControls += "<li><a href='#' onclick='MMS.pagination.previous(" + currentPage + ")'>Previous</a></li>";

        for (var i=1; i<=pageCount(); i++) {

            if (i !== currentPage) {

                if (pageCount() <= 20 ) {
                    pagingControls += "<li><a href='#' onclick='MMS.pagination.renderPage(" + i + "); return false;'>" + i + "</a></li>";
                //} else if (pageCount() > 20) {
                    //pagingControls += "<li><a href='#' onclick='MMS.pagination.renderPage(" + i + "); return false;'>" + i + "</a></li>";
                }

            } else {
                pagingControls += "<li class='active'>" + i + "</li>";
                currentPage = i;
            }
        }
        pagingControls += "<li><a href='#' onclick='MMS.pagination.next(" + currentPage + ")'>Next</a></li>";
        pagingControls += "</ul>";

        $("div.pagination").append(pagingControls);
    };

    /**
     * moves to the next page
     * @param current
     */
    next = function(current) {

        if (current < pageCount()) {
            var nextPage = current + 1;
            renderPage(nextPage);
        }
    };

    /**
     * moves to the previous page
     * @param current
     */
    previous = function(current) {

        if (current > 1) {
            var previousPage = current -1;
            renderPage(previousPage);
        }
    };

    /**
     * displays current page
     * @param page
     */
    renderPage = function(page) {

        currentPage = page;
        var page = (page-1);
        renderPagingControls();

        $("#pages").empty();
        for (var i = (page)*recordsPerPage; i < ((page)*recordsPerPage) + recordsPerPage; i++) {
            $("#pages").append(pages[i]);
        }

    };

    /**
     * initializes pagination method
     * param @paginationArr
     */
    init = function(paginationArr) {

        pages = paginationArr;
        recordCount = paginationArr.length;
        renderPage(1);

    }

    return {
        init:function(paginationArr) {
            return init(paginationArr);
        },
        renderPage:function(page) {
            return renderPage(page);
        },
        next:function(page) {
            return next(page);
        },
        previous:function(page) {
            return previous(page);
        }
    };

}(jQuery));MMS.namespace("MMS.batch");

MMS.batch = (function($) {

    "use strict";

    var getBatchFilesAndMetadata,
        displayBachFileRecords,
        ingest,
        requestObj,
        viewObj,
        init;

    viewObj = {
        content: 'content',
        articleID: 'batch-ingest-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'batch-ingest-form',
        divID: 'batch-ingest',
        divClass: 'module_content',
        header: '<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',
        footer: '<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'
    };

    /**
     * retrieves objects and metadata
     */
    getBatchFilesAndMetadata = function() {

        MMS.utils.focusForm("#batch-ingest-forms");

        requestObj = {
            type: "GET",
            url: MMS.configObj.batch,
            dataType: "json",
            cache: true,
            success: function (response) {
                MMS.view.createView(viewObj);
                displayBachFileRecords(response);
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * displays batch records
     * @param response
     */
    displayBachFileRecords = function(response) {

        $(".current").html("Batch");

        if (response.length === 0) {
            $("#batch-ingest-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");
            return;
        }

        var results = "";
        results += "<div>";
        results += "<div>";
        results += "<table class='tablesorter' cellspacing='0'>";
        results += "<thead>";
        results += "<tr>";
        results += "<th>Batch Records</th>";
        results += "<th>Status</th>";
        results += "</tr>";
        results += "</thead>";
        results += "<tbody>";

        $.each(response, function(key, value) {

            if (value.object != "") {
                results += "<input name='pids[]' type='hidden' value='" + value.pid + "' />";
                //results += "<input name='identifiers[]' type='hidden' value='" + value.identifier + "' />";
            }

            results += "<tr>";
            results += "<td width='85%'>";
            results += "<table width='85%' style='border-bottom: 1px dotted #ccc;'>";
            results += "<tr align='top'>";

            if (value.object != "") {
                results += "<td width='30%' align='center'><p><img src='" + value.object + "' alt='" + value.title + "' border='1'></p></td>";
            } else {
                results += "<td width='30%' align='center'><p>No Object.</p></td>";
            }

            results += "<td width='40%' align='left'>";
            results += "<p><strong>Pid:</strong> " + value.pid + "</p>";
            results += "<p><strong>Title:</strong> " + value.title + "</p>";
            results += "<p><strong>Creator:</strong> " + value.creator + "</p>";
            results += "<p><strong>Identifier:</strong> " + value.identifier + "</p>";
            results += "</td>";
            results += "</tr>";
            results += "</table>";
            results += "</td>";

            if (value.object != "") {
                results += "<td width='28%'>complete.</td>";
            } else {
                results += "<td width='28%'>incomplete.</td>";
            }
            results += "</tr>";

        });

        results += "</tbody>";
        results += "</table>";
        results += "</div>";
        results += "</div>";

        $("#batch-ingest").empty().append(results);
        $("#batch-ingest-forms").show();

    };

    /**
     * batch ingest
     */
    ingest = function() {

        requestObj = {

            type: "POST",
            url: MMS.configObj.batch,
            data: $("#batch-ingest-form").serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.success === false) {
                    $("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");
                    setTimeout(function(){ $("div#actionFeedback").empty(); }, 4000);
                } else {

                    $("#batch-ingest").empty();
                    $("#batch-ingest-forms").remove();
                    $("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");
                    setTimeout(function(){ $("div#actionFeedback").empty(); }, 4000);

                }
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    init = function() {

        $("#batch-ingest-forms").hide();

        $("#batch").on("click", function(event) {
            getBatchFilesAndMetadata($(this).attr("id"));
        });

    };

    return {
        init:function() {
            return init();
        },
        ingest:function() {
            return ingest();
        }
    };

}(jQuery));
MMS.namespace("MMS.xml");

MMS.xml = (function($) {

    // ** dependencies ** //

    "use strict";

    var getXMLFileNames,
        displayXmlFilesNames,
        requestObj,
        saveXml,
        viewObj,
        createUploadArea,
        init;

    viewObj = {
        content: 'content',
        articleID: 'xml-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'xml-form',
        divID: 'xml',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * constructs Edit User form fields
     */
    getXMLFileNames = function() {

        requestObj = {
            type: "GET",
            url: MMS.configObj.xml,
            dataType: "json",
            cache: true,
            success: function (response) {
                MMS.view.createView(viewObj);
                displayXmlFilesNames(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * displays xml file names
     * @param response
     */
    displayXmlFilesNames = function(response) {

        $(".current").html("Xml");

        var xmlFiles = "";
         xmlFiles += "<div class='tab_container'>";
         xmlFiles += "<div id='tab1' class='tab_content'>";
         xmlFiles += "<table class='tablesorter' cellspacing='0'>";
         xmlFiles += "<thead>";
         xmlFiles += "<tr>";
         xmlFiles += "<th>XML File</th>";
         xmlFiles += "<th>Actions</th>";
         xmlFiles += "</tr>";
         xmlFiles += "</thead>";
         xmlFiles += "<tbody>";

        $.each(response, function(key, value) {

            xmlFiles += "<input name='xmlFiles[]' type='hidden' value='" + value.fileName + "' />";
            xmlFiles += "<tr>";
            xmlFiles += "<td>" + value.fileName + "</td>";
            xmlFiles += "<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\"" + value.fileName + "\"); return false;'></td>";
            xmlFiles += "</tr>";
            // <input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.xml.getXml(\"" + value.fileName + "\");return false;'>

        });

        xmlFiles += "</tbody>";
        xmlFiles += "</table>";
        xmlFiles += "</div>";
        xmlFiles += "</div>";

        $("#xml").append(xmlFiles);
        $("#xml-forms").show();

    };

    /**
     * retrieves xml string
     * @param string file

    getXml = function(file) {

        requestObj = {
            type: "GET",
            url: MMS.configObj.xml,
            data: "file=" + file,
            dataType: "json",
            cache: true,
            success: function (response) {
                constructXmlEditForm(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    }
     */

    /**
     * constructs edit form based on imported xml
     * @param string xml

    constructXmlEditForm = function(xml) {

        $("#xml").empty();
        $(".current").html("Edit Xml");

        var xmlForm = "";

        $.each(xml, function(key, value) {

            if (typeof value === "object") {

                $.each(value, function(key1, value1) {

                    if (!$.isEmptyObject(value1)) {

                        xmlForm += "<fieldset>";
                        xmlForm += "<label for='" + key + "'>";
                        xmlForm += key;
                        xmlForm += "</label>";

                        if (key === "description") {
                            xmlForm += "<textarea rows='7' cols='55' id='" + key + "' name='" + key + "[]' >" + value1 + "</textarea>";
                        } else {
                            xmlForm += "<input id='" + key + "' name='" + key + "[]' type='text' value='" + value1 + "' />";
                        }
                        xmlForm += "</fieldset>";

                    }
                });

            } else if (!$.isEmptyObject(value)) {

                xmlForm += "<fieldset>";
                xmlForm += "<label for='" + key + "'>";
                xmlForm += key;
                xmlForm += "</label>";
                xmlForm += "<input id='" + key + "' name='" + key + "[]' type='text' value='" + value + "' class='required' />";
                xmlForm += "</fieldset>";

            }

        });

        $("#xml").append(xmlForm);
    };
     */

    /**
     *  sends xml to server
     */
    saveXml = function(file) {

        var xmlFiles = [];

        for (var i in file) {
            xmlFiles.push(file[i].name);
        }

        requestObj = {
            type: "PUT",
            url: MMS.configObj.xml,
            data: {'xmlFiles': xmlFiles},
            dataType: "json",
            cache: false,
            success: function (response) {

                $("#xml-forms").remove();

                if (response.created === 'true') {

                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                } else {
                    $("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                }

                location.hash = "#header";
            }
        };

        MMS.utils.doAjax(requestObj);
    }

    /**
     * creates drag and drop upload area
     */
    createUploadArea = function() {

        MMS.view.createView(viewObj);

        requestObj = {
            type: "GET",
            url: MMS.configObj.uploadUrl,
            dataType: "html",
            cache: false,
            success: function (response) {
                $("#xml").append(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $("#view_xml").on("click", function() {
            getXMLFileNames();
        });
    };

    return {
        init:function() {
            return init();
        },
        saveXml:function(file) {
            return saveXml(file);
        },
        createUploadArea:function() {
            return createUploadArea();
        }
    };

}(jQuery));MMS.namespace("MMS.queue");

MMS.queue = (function($) {

    "use strict";

    var viewObj,
        getItems,
        requestObj,
        listItems;

    viewObj = {
        content: 'content',
        articleID: 'queue-forms',
        articleClass: 'module width_full',
        h3ID: 'null',
        h3Value: '',
        formID: 'queue-form',
        divID: 'queue',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * retrieves queue items
     * @return void
     */
    getItems = function() {

        requestObj = {
            type: "GET",
            url: MMS.configObj.queue,
            dataType: "json",
            cache: false,
            success: function (response) {
                listItems(response);
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * lists queue items
     * @param response
     * @return void
     */
    listItems = function(response) {

        $(".current").html("Review Queue");
        $("#search-results").empty();

        MMS.view.createView(viewObj);

        if (response.length === 0) {
            $("#queue-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");
            return;
        }

        var itemsResponse = "";
        itemsResponse += "<div class='tab_container'>";
        itemsResponse += "<div id='tab1' class='tab_content'>";
        itemsResponse += "<table class='tablesorter' cellspacing='0'>";
        itemsResponse += "<thead>";
        itemsResponse += "<tr>";
        itemsResponse += "<th>Pid</th>";
        itemsResponse += "<th>Title</th>";
        itemsResponse += "<th>Created By</th>";
        itemsResponse += "<th>Date Created</th>";
        itemsResponse += "<th>Actions</th>";
        itemsResponse += "</tr>";
        itemsResponse += "</thead>";
        itemsResponse += "<tbody>";

        $.each(response, function(key, value) {

            itemsResponse += "<tr>";
            itemsResponse += "<td>" + value.pid + "</td>";
            itemsResponse += "<td>" + value.title + "</td>";
            itemsResponse += "<td>" + value.name + "</td>";
            itemsResponse += "<td>" + value.timestamp + "</td>";
            itemsResponse += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.pid + "\", \"queue\");'</td>";
            // ><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.queue.deleteItem(event, \"" + value.queueID + "\"); return false;'>
            itemsResponse += "</tr>";

        });

        itemsResponse += "</tbody>";
        itemsResponse += "</table>";
        itemsResponse += "</div>";
        itemsResponse += "</div>";

        $('#search-results').empty();
        $('#queue').append(itemsResponse);

    };

    return {
        getItems: function() {
            getItems();
        }
    };

}(jQuery));
MMS.namespace("MMS.view");

MMS.view = (function($) {

    "use strict";

    var createView;

    createView = function(viewObj) {

        var view = '';
        view += '<div id="actionFeedback"></div>';
        view += '<div id="error"></div>';
        view += '<article id="' + viewObj.articleID + '" class="' + viewObj.articleClass + '">';
        view += '<header>';

        if (viewObj.h3ID !== 'null') {
            view += '<h3 id="' + viewObj.h3ID + '">' + viewObj.h3Value + '</h3>';
        }

        if (viewObj.header !== 'null') {
            view += viewObj.header;
        }

        view += '</header>';
        view += '<form id="' + viewObj.formID + '">';
        view += '<div id="' + viewObj.divID + '" class="' + viewObj.divClass + '"></div>';
        view += '<footer>';

        if (viewObj.footer !== 'null') {
            view += viewObj.footer;
        }

        view += '</footer>';
        view += '</form>';
        view += '</article>';

        $("#" + viewObj.content).empty().append(view);

    }

    return {
        createView: function(viewObj) {
            createView(viewObj);
        }
    };

}(jQuery));
$(function() {

  var imageRecordFields = {
    "titleSet": {
        "label": "Title",
        "element":"title",
        "id": "title",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 2,
        "required": "true"
    },
    "creatorSet": {
        "label": "Creator",
        "element":"creator",
        "id":"creator",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 3,
        "required": "true"
    },
    "descriptionSet": {
        "label": "Description",
        "element":"description",
        "id":"description",
        "type": "textarea",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 7,
        "required": "true"
    },
    "subjectSet": {
        "label": "Subject",
        "element":"subject",
        "id":"subject",
        "type": "text",
        "vocabulary": "true",
        "repeat": "true",
        "displayOrder": 8,
        "required": "true"
    },
    "typeSet": {
        "label": "Type",
        "element":"type",
        "id":"type",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 8,
        "required": "true"
    },
    "formatSet": {
        "label": "Format",
        "element":"format",
        "id":"format",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 8,
        "required": "true"
    },
    "identifierSet": {
        "label": "Identifier",
        "element":"identifier",
        "id":"identifier",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 16,
        "required": "true"
    },
    "instructorSet": {
        "label": "Instructor",
        "element":"instructor",
        "id":"type-instructors",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 17,
        "required": "false"
    }
  };

    sessionStorage.setItem("mms_image_metadata_fields", JSON.stringify(imageRecordFields));
});$(function() {

    MMS.configObj = MMS.configObj || {};

    if (document.domain === "mms.library.du.edu") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    } else if (document.domain === "lib-devmms.cair.du.edu") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    } else if (document.domain === "lib.dev") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    }

    MMS.configObj.authenticate = MMS.configObj.sslBaseUrl + "index.php/admin/login";
    MMS.configObj.utils = MMS.configObj.sslBaseUrl + "index.php/utils/utils/ping_services";
    MMS.configObj.logout = MMS.configObj.baseUrl + "index.php/admin/login/logout";
    MMS.configObj.dashboard = MMS.configObj.baseUrl + "index.php/admin/dashboard";
    MMS.configObj.vocabUrl = MMS.configObj.baseUrl + "index.php/admin/controlled_vocabularies";
    MMS.configObj.uploadUrl = MMS.configObj.baseUrl + "libs/plupload/upload.html";
    MMS.configObj.roles = MMS.configObj.baseUrl + "index.php/admin/roles";
    MMS.configObj.users = MMS.configObj.baseUrl + "index.php/admin/users";
    MMS.configObj.collections = MMS.configObj.baseUrl + "index.php/admin/collections";
    MMS.configObj.ingest = MMS.configObj.baseUrl + "index.php/admin/ingest";
    MMS.configObj.search = MMS.configObj.baseUrl + "index.php/admin/search";
    MMS.configObj.repository = MMS.configObj.baseUrl + "index.php/admin/repository";
    MMS.configObj.objectTypes = MMS.configObj.baseUrl + "index.php/admin/object_types";
    MMS.configObj.batch = MMS.configObj.baseUrl + "index.php/admin/batch";
    MMS.configObj.xml = MMS.configObj.baseUrl + "index.php/admin/xml";
    MMS.configObj.nas = MMS.configObj.baseUrl + "index.php/admin/nas?object=";
    MMS.configObj.queue = MMS.configObj.baseUrl + "index.php/admin/queue";
    MMS.configObj.creatorapi = "http://" + document.domain + "/vocabularies-service/index.php/alora/creators";
    MMS.configObj.subjectapi = "http://" + document.domain + "/vocabularies-service/index.php/alora/subjects";
});
$(function() {

    MMS.login.init();
    MMS.metadata.init();
    MMS.user.init();
    MMS.collections.init();
    MMS.controlledVocabularies.init();
    MMS.search.init();
    MMS.batch.init();
    MMS.xml.init();

});
var MMS = MMS || {}

MMS.namespace = function( ns_string ) {

    var parts = ns_string.split("."),
    parent = MMS,
    i;

    if (parts[0] === "MMS") {
        parts = parts.slice(1);
    }

    for(i = 0; i < parts.length; i +=1) {
        if (typeof parent[parts[i]] === "undefined") {
            parent[parts[i]] = {};
        }
        parent = parent[parts[i]];
    }
    return parent;
};
MMS.namespace("MMS.utils");

MMS.utils = (function($) {

    "use strict";

    var doAjax,
        focusForm,
        pingServices,
        viewObj,
        sanitizeInput;

    viewObj = {
        content: 'content',
        articleID: 'null',
        articleClass: 'null',
        h3ID: 'null',
        h3Value: '',
        formID: 'null',
        divID: 'null',
        divClass: 'null',
        header: 'null',
        footer: 'null'
    };

    /**
     * makes the ajax request
     * @param object requestObj
     */
    doAjax = function(requestObj) {

        requestObj.timeout = 5000;  // 5 sec.
        requestObj.error = function ( textStatus, errorThrown ) {
                               $("#error").html("<h4 class='alert_error'>An error has occurred (" + errorThrown + ").  Please contact library-support@du.edu for assistance.</h4>");
                            };
        requestObj.statusCode =  {
                                    403: function() {
                                        alert("Session expired");
                                        MMS.view.createView(viewObj);
                                        $("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");
                                        setTimeout(function() {
                                            window.location = MMS.configObj.sslBaseUrl;
                                        }, 7000);
                                    }
                                 };

        $(document).ajaxStart(function() {
            $.fancybox.showLoading();
        });

        $(document).ajaxStop(function() {
            $.fancybox.hideLoading();
        });

        $.ajax(requestObj);
    };

    /**
     * checks if Fedora & Solr are available
     */
    pingServices = function() {

        var requestObj = {
            type: "GET",
            url: MMS.configObj.utils,
            dataType: "json",
            cache: false,
            success: function (response) {

                if (typeof response === null || response.isFedoraUp !== 200 || response.isSolrUp !== 'OK') {
                    $("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");
                    $("#authenticate").attr("disabled", "disabled");
                }
            }
        };

        doAjax(requestObj);
    };

    /**
     * removes tags from input
     * @param value
     */
    sanitizeInput = function(value) {
        return value.replace(/</g, "").replace(/>/g, "");
    };

    /** NOT-USED
     * hides all article blocks except the one specified
     * @param id
     */
    focusForm = function(id) {

        if (id !== "#metadata-forms") {
            $(".optional_fields").hide();
            $("#optional_fields").hide();
        }

        $("article:not(" + id + ", .breadcrumbs)").hide();
    }

    return {
        doAjax: function(requestObj) {
            doAjax(requestObj);
        },
        focusForm: function(id) {
            focusForm(id);
        },
        sanitizeInput: function(value) {
            return sanitizeInput(value);
        },
        pingServices: function() {
            pingServices();
        }
    };

}(jQuery));
MMS.namespace("MMS.controlledVocabularies");

MMS.controlledVocabularies = (function($) {

    "use strict";

    // ** dependencies **/
    // MMS.configObj
    // MMS.utils

    var getVocabularyTerms,
        id,
        init,
        displayVocabularyTerms,
        displayControlledVocabulariesBox,
        selectVocabularyTerm,
        setVocabularyTerm,
        requestObj,
        getRole,
        getTermData,
        displayTermData,
        controlledVocabularyView,
        createControlledVocabularyForm,
        getLists,
        resetLists,
        displayList,
        appendVocabValues,
        saveLocalCreator,
        saveLocalSubject,
        createLocalSubjectsForm,
        validate,
        loadCreatorForm,
        loadSubjectForm,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'controlled-vocabulary-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'controlled-vocabulary-form',
        divID: 'controlledvocabulary',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'
    };

    controlledVocabularyView = function() {

        var view = '';
        view += '<article id="controlled-vocabulary-section" class="module width_quarter">';
        view += '<header><h3>Controlled Vocabularies</h3></header>';
        view += '<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';
        view += '<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';
        view += '<p>';
        view += '<select id="vocab-options" name="vocab-options">';
        view += '<option value="ulan" selected>ULAN</option>';
        view += '<option value="aat">AAT</option>';
        view += '<option value="locnames">LC-Names</option>';
        view += '<option value="locsubjects">LC-Subjects</option>';
        view += '<option value="aloracreators">Alora-Creators</option>';
        view += '<option value="alorasubjects">Alora-Subjects</option>';
        view += '</select>&nbsp;';
        view += '<input id="getVocabularies" type="submit" value="Go" />';
        view += '</p>';
        view += '</div>';
        view += '<div id="vocabulary-results"></div>';
        view += '</article>';

        return view;
    };

    /**
     * loads creator form
     */
    loadCreatorForm = function() {

        $('#search-results').empty();
        MMS.view.createView(viewObj);
        createControlledVocabularyForm();
        validate();
        $(".current").html("Creator");
        $("#controlled-vocabulary-form").show();

    };

    /**
     * loads subject form
     */
    loadSubjectForm = function() {

        $('#search-results').empty();
        MMS.view.createView(viewObj);
        createLocalSubjectsForm();
        validate();
        $(".current").html("Subject");
        $("#controlled-vocabulary-form").show();

    };

    /**
     * validates core form fields
     */
    validate = function() {
        $("#controlled-vocabulary-form").validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveLocalCreator();
            }
        });
    };

    /**
     * saves local creator vocab
     */
    saveLocalCreator = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.creatorapi,
            data:  $("#controlled-vocabulary-form").serialize(),
            dataType: "text",
            cache: false,
            success: function (response) {

                if (response === "success") {
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    $("#controlled-vocabulary-form").find('input[type=text], textarea').val('');
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                    return false;
                } else {
                    alert("Record Not Saved.");
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * saves local subject vocab
     */
    saveLocalSubject = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.subjectapi,
            data:  $("#controlled-vocabulary-form").serialize(),
            dataType: "text",
            cache: false,
            success: function (response) {

                if (response === "success") {
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    $("#controlled-vocabulary-form").find('input[type=text], textarea').val('');
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                    return false;
                } else {
                    alert("Record Not Saved.");
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     *  creates local subjects entry form
     */
    createLocalSubjectsForm = function() {

        var view = '';
        view += "<fieldset>";
        view += "<label>";
        view += "* Subject";
        view += "</label>";
        view += "<input id='subject' name='subject[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<label>";

        $("#controlledvocabulary").append(view);
    };

    /**
     * creates local vocabulary entry form
     */
    createControlledVocabularyForm = function() {

        var view = '';
        view += "<fieldset>";
        view += "<label>";
        view += "* Creator";
        view += "</label>";
        view += "<input id='creator' name='creator[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Creator Alternative";
        view += "</label>";
        view += "<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Nationality";
        view += "</label>";
        view += "<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Role";
        view += "</label>";
        view += "<input id='description-role' name='description.role[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Biography";
        view += "</label>";
        view += "<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Sex";
        view += "</label>";
        view += "<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Source";
        view += "</label>";
        view += "<input id='source' name='source' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Earliest Date";
        view += "</label>";
        view += "<input id='earliestdates' name='earliestdates' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Latest Date";
        view += "</label>";
        view += "<input id='latestdates' name='latestdates' type='text' class='required' />";
        view += "</fieldset>";

        $("#controlledvocabulary").append(view);
    };

    /**
     * retrieves role ID
     * @return {*}
     */
    getRole = function() {
        return sessionStorage.getItem("roleID");
    };

    /**
     * retrieves search values and makes api request
     */
    getVocabularyTerms = function() {

        var option,
        term = $("input#vocabTerm").val(),
        checked = $("select#vocab-options");
        term = MMS.utils.sanitizeInput(term);

        if (checked.length > 0) {
            option = checked.val();
        }

        requestObj = {
            type: "POST",
            url: MMS.configObj.vocabUrl,
            data: "term=" + term + "&option=" + option,
            dataType: "json",
            cache: true,
            success: function (response) {
                displayVocabularyTerms(option, response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * retrieves vocabulary based on id
     * @param id
     * @param vocabType
     * @param callback
     */
    getTermData = function(id, vocabType, callback) {

        var data = "id=" + id + "&vocabType=" + vocabType;

        if (callback === undefined) {
            var callback = function (response) {
                displayTermData(id, response);
            };
        }

        requestObj = {
            type: "GET",
            url: MMS.configObj.vocabUrl,
            data: data,
            dataType: "json",
            cache: true,
            success: callback
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * Displays
     * @param id
     * @param response
     */
    displayTermData = function(id, response) {

        var results = '',
        val = $('span#' + id + '-toggle').text();

        if (val === '( + )' ) {
            $('span#' + id + '-toggle').text('( - )');
            $('div#' + id + '-vocab-data').show();
        } else if (val === '( - )') {
            $('div#' + id + '-vocab-data').hide();
            $('span#' + id + '-toggle').text('( + )');
        }

        $.each(response, function(key, value) {

            if (value.subject_id !== undefined) {
                results += '<p><strong>Subject id:</strong> ' + value.subject_id + '</p>';
            }

            if (value.nationalities !== '') {
                results += '<p><strong>Nationality:</strong> ' + value.nationalities + '</p>';
            }

            if (value.role_id !== '') {
                results += '<p><strong>Role:</strong> ' + value.role_id + '</p>';
            }

            if (value.preferred_terms_source_id !== '') {
                results += '<p><strong>Source:</strong> ' + value.preferred_terms_source_id + '</p>';
            }

            if (value.non_preferred_terms_term_text !== '') {
                results += '<p><strong>Alternative name:</strong> ' + value.non_preferred_terms_term_text + '</p>';
            }

            if (value.preferred_biographies_biography_text !== '') {
                results += '<p><strong>Bio:</strong> ' + value.preferred_biographies_biography_text + '</p>';
            }

            if (value.preferred_biographies_birth_date !== '') {
                results += '<p><strong>Birth date:</strong> ' + value.preferred_biographies_birth_date + '</p>';
            }

            if (value.preferred_biographies_death_date !== '') {
                results += '<p><strong>Death date:</strong> ' + value.preferred_biographies_death_date + '</p>';
            }

            if (value.preferred_biographies_sex !== '') {
                results += '<p><strong>Sex:</strong> ' + value.preferred_biographies_sex + '</p>';
            }
        });

        $('div#' + id + '-vocab-data').empty().append(results);
    };

    /**
     * Sets the selected vocabulary term in designated field
     * @param term
     * @param count
     * @param fieldName
     * @returns field
     */
    setVocabularyTerm = function(term, count, fieldName) {

        var field;

        while (count < 50) {  // 50 is an arbritrary number...
            field = $('#' + fieldName + '-' + count).val();
            if (field === '') {
                $('#' + fieldName + '-' + count).val(term);
                break;
            }
            count++;
        }

        return field;
    };

    /**
     * selects vocabulary term and places it in the current form field
     * @param id
     * @param term
     */
    selectVocabularyTerm = function(id, term) {

        var creator,
        repository,
        subject,
        stylePeriod,
        option,
        count = 1,
        callback = function(response) {
            appendVocabValues(response);
        },

        checked = $("select#vocab-options");

        if (getRole() == "2") {
            $("#" + id).removeAttr("disabled");
            $("#" + id).attr("readonly", "readonly");
        }

        if (checked.length > 0) {
            option = checked.val();
        }

        if (option === 'ulan' || option === 'locnames' || option === 'aloracreators') {

            if (option !== 'locnames') {
                getTermData(id, option, callback);
            }

            creator = $('#creator-0').val();

            if (creator === '') {
                setVocabularyTerm(term, 0, 'creator');
            } else {

                repository = $('#coverage-spatial-repository-0').val(term);

                if (repository === '') {
                    setVocabularyTerm(term, 0, 'coverage-spatial-repository');
                } else {
                    setVocabularyTerm(term, count, 'coverage-spatial-repository');
                }
            }

        } else if (option === 'aat' || option === 'locsubjects' || option === 'alorasubjects') {

            stylePeriod = $('#coverage-temporal-styleperiod-0').val();

            if (stylePeriod === '') {
                setVocabularyTerm(term, 0, 'coverage-temporal-styleperiod');
            } else {
                stylePeriod = setVocabularyTerm(term, count, 'coverage-temporal-styleperiod');
            }

            if (stylePeriod === undefined) {

                subject = $('#subject-0').val();

                if (subject === '') {
                    setVocabularyTerm(term, 0, 'subject');
                } else {
                    setVocabularyTerm(term, count, 'subject');
                }
            }
        }
    };

    /**
     * adds additional creator vocabulary fields when a term is selected from the vocab list
     * @param response
     */
    appendVocabValues = function(response) {

        var results = '';
        $.each(response, function(key, value) {
            // TODO: check each value. don't append empty values
            results += '<input name="creator.alternative[]" type="hidden" value="' + value.non_preferred_terms_term_text + '" />';
            results += '<input name="description.creatorbio[]" type="hidden" value="' + value.preferred_biographies_biography_text + '" />';
            results += '<input name="description.nationality[]" type="hidden" value="' + value.nationalities + '" />';
            results += '<input name="description.role[]" type="hidden" value="' + value.role_id + '" />';
            results += '<input name="description.lifedates[]" type="hidden" value="' + value.preferred_biographies_birth_date + '-' + value.preferred_biographies_death_date + '" />';
            results += '<input name="source[]" type="hidden" value="' + value.preferred_terms_source_id + '" />';
        });

        $('div#metadata').append(results);
    };

    /**
     * displays vocabulary terms
     * @param id
     * @param type
     * @param response
     */
    displayVocabularyTerms = function(option, response) {

        var recordset,
        results = '';

        if (option === 'ulan') {

            recordset = response.getty.response.docs;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text_t + "</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData(" + value.id + ", \"ulan\");return false;'><span id='" + value.id + "-toggle'>( + )</span></a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
            });

        } else if (option === 'aat') {

            recordset = response.getty.response.docs;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text_t + "</a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
            });

        } else if (option === 'locnames' || option === 'locsubjects') {

            recordset = response.loc;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + id + ", $(this).text());return false;'>" + response.loc[key].title + "</a><br /><a href='#'>" + value.id + "</a></li></ul></p>";
            });

        } else if (option === 'aloracreators' || option === 'alorasubjects') {

            recordset = response.local;

            if (recordset.message !== undefined) {
                results += "<p><ul><li>No results found.</li></ul></p>";
                // TODO: not working ...
                $("div#vocabulary-results").empty().append(results);
                return;
            }

            $.each(recordset, function(key, value){
                if (option === 'aloracreators') {
                    results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text + "</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData(" +  value.id + ", \"local\");return false;'><span id='" + value.id + "-toggle'>( + )</span></a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
                } else {
                    results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text + "</a></li></ul></p>";

                }
            });
        }

        $("div#vocabulary-results").empty().append(results);
    };

    /**
     * displays controlled vocabulary search box
     */
    displayControlledVocabulariesBox = function() {

        $("#controlled-vocabulary-section").show();

        var view = controlledVocabularyView();
        $("#content").append(view);

        $("input#vocabTerm").keyup(function(event){
            if(event.keyCode == 13){
                $("input#getVocabularies").click();
            }
        });

        $("select#vocab-options").keyup(function(event){
            if(event.keyCode == 13){
                $("input#getVocabularies").click();
            }
        });

        $("input#getVocabularies").on("click", function() {
            getVocabularyTerms();
        });
    };

    /**
     *
     */
    resetLists = function() {
        $("select#type-arttypes").val("");
        $("select#type-timeperiods").val("");
        $("select#type-instructors").val("");
    };

    /**
     * retrieves form lists
     */
    getLists = function(callback) {

        var lists = ['arttypes', 'timeperiods', 'instructors'],
        requestObj = {},
        //display,
        i;

        if (callback === undefined) {
            callback = function (response) {
                displayList(response);
            }
        }

        for (i=0;i<lists.length;i++) {

            requestObj.type = "GET";
            requestObj.url = MMS.configObj.vocabUrl;
            requestObj.data = 'vocabType=' + lists[i];
            requestObj.dataType = 'json';
            requestObj.cache = true;
            requestObj.success = callback;

            MMS.utils.doAjax(requestObj);
        }
    };

    /**
     * displays lists
     * @param response
     */
    displayList = function(response) {

        var response = $.parseJSON(response);
        var list;
        var vocabType;
        var arttype = sessionStorage.getItem('arttypes');
        var timeperiod = sessionStorage.getItem('timeperiods');
        var instructor = sessionStorage.getItem('instructors');

        list = "<option value=''>---Select an term---</option>";
        $.each(response, function(key, value) {

            if (value.type) {
                vocabType = value.type;
            }

            if (value.term === arttype || value.term === timeperiod || value.term === instructor) {
                list += "<option value='" + value.term + "' selected>" + value.term + "</option>";
            } else {
                list += "<option value='" + value.term + "'>" + value.term + "</option>";
            }

        });

        $("select#type-" + vocabType).html(list);
        //sessionStorage.removeItem('arttypes');
        //sessionStorage.removeItem('timeperiods');
        //sessionStorage.removeItem('instructors');
    };

    init = function() {
        $("#controlled-vocabulary-section").hide();
    };

    return {
        getVocabularyTerms: function() {
            getVocabularyTerms();
        },
        displayControlledVocabulariesBox: function(event, id) {
            displayControlledVocabulariesBox(event, id);
        },
        selectVocabularyTerm: function(id, term) {
            selectVocabularyTerm(id, term);
        },
        getTermData: function(id, vocabType) {
            getTermData(id, vocabType);
        },
        getLists: function() {
            getLists();
        },
        resetLists: function() {
            resetLists();
        },
        loadCreatorForm: function() {
            loadCreatorForm();
        },
        loadSubjectForm: function() {
            loadSubjectForm();
        },
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.metadata");

MMS.counterObj = MMS.counterObj || {};
MMS.counterObj.count = 0;

MMS.metadata = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var viewObj,
        createMetadataForm,
        createMetadataEditForm,
        createOptionalElementLinks,
        cloneFieldSet,
        constructFieldEvent,
        metadata = "#metadata",
        metadataForm = "#metadata-form",
        metadataForms = "#metadata-forms",
        constructField,
        $optionalField,
        sortObjects,
        $f,
        $fObj,
        repeatField,
        removeField,
        removeClonedField,
        validate,
        saveMetadata,
        loadForm,
        init,
        requestObj,
        getMetadata,
        deleteMetadata,
        mms_metadata_fields,
        cloneRecord,
        createBackLink,
        back,
        clearField,
        appendOptionalField;

    viewObj = {
        content: 'content',
        articleID: 'metadata-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'pid',
        h3Value: '',
        formID: 'metadata-form',
        divID: 'metadata',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'
    };

    /**
     * constructs the core elements and adds them to the DOM
     * @param objectType
     */
    createMetadataForm = function(objectType) {

        var sortedFields = sortObjects(mms_metadata_fields, 'displayOrder');

        $.each(sortedFields, function( i, field ) {
            $f = constructField( field );
            $f.appendTo(metadata);
        });

        $(metadata).append("<input name='objectType' type='hidden' value='" + objectType + "'/>");
        MMS.controlledVocabularies.getLists();
        sessionStorage.removeItem('arttypes');
        sessionStorage.removeItem('timeperiods');
        sessionStorage.removeItem('instructors');
    };

    /**
     * returns user to their search results
     * @param type
     * @return link
     */
    createBackLink = function(type) {

        var link;
        var linkMessage;

        if (type === 'queue') {
            linkMessage = "Back to Review Queue";
        } else if (type === 'search') {
            $("#search-results").hide();
            linkMessage = "Back to Search Results";
        }

        link = "&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\"" + type + "\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;" + linkMessage + "</a>";

        return link;
    };

    /**
     *
     * @param type
     */
    back = function(type) {

        if (type === 'queue') {
            MMS.queue.getItems();
        } else if (type === 'search') {
            $("#search-results").show();
            $("#content").empty();
        }

        $("#clone-record").empty();
        $("#controlled-vocabulary-section").hide();

        return;
    };

    /**
     * constructs metadata edit form
     * @param response
     * @param pid
     */
    createMetadataEditForm = function(response, pid, type) {

        //console.log(response);

        var counter = 100,
        editForm = "",
        idClass,
        objectType;

        $(".current").html("Edit Metadata");
        $(metadata).empty();

        editForm += "<div id='edit-mode'></div>";
        editForm += "<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";
        editForm += "<fieldset id='isPid'>";
        editForm += "<label>pid</label>";
        editForm += "<input type='text' value='" + pid + "'  disabled />";
        editForm += "</fieldset>";

        if (type === 'queue') {
            editForm += "<input id='type' name='type' type='hidden' value='" + type + "' />";
        } else if (type === 'search') {
            editForm += "<input id='type' name='type' type='hidden' value='" + type + "' />";
        }

        mms_metadata_fields = JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));
        var sortedFields = sortObjects(mms_metadata_fields, 'displayOrder');

        $.each(sortedFields, function( i, field ) {
            $.each(response, function(key, value) {

                if (field.element === key) {

                    idClass = key.replace(".", "-");

                    if (typeof value === "string") {

                        editForm += "<fieldset class='" + idClass + "-0'>";

                        if (field.repeat === 'true') {
                            editForm += "<label>" + field.label + "&nbsp;<span class='clone'><a href='#' id='" + key + "-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add " + key + "'><span>Add</span></a></span></label>";
                        } else {
                            editForm += "<label>" + field.label + "</label>";
                        }


                        if (field.type === 'select') {

                            if (field.required === "true") {
                                var required = "class='required";
                            }

                            if (field.element === "type.arttype") {
                                sessionStorage.setItem("arttypes", value);
                            } else if (field.element === "date.timeperiod") {
                                sessionStorage.setItem("timeperiods", value);
                            } else if (field.element === "instructor") {
                                sessionStorage.setItem("instructors", value);
                            }

                            editForm += "<select name='" + field.element + "[]' id='" + field.id + "' " + required + "'></select>";
                        }


                        if (field.type === 'text') {
                            editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value + "' " + required +" />";
                        }

                        if (field.type === 'textarea') {
                            editForm += "<textarea id='"+ key + "-" + counter + "' name='" + key + "[]' rows='7' cols='55' " + required + ">" + value + "</textarea> ";
                        }

                        editForm += "</fieldset>";

                    }

                    if (typeof value === "object") {

                        $.each(value, function(key1, value1) {

                            counter++;

                            if (counter > 101) {
                                editForm += "<fieldset class='" + idClass + "-" + counter + "'>";
                            } else {
                                editForm += "<fieldset class='" + idClass + "-0'>";
                            }

                            if (field.repeat === 'true') {

                                if (counter > 101) {
                                    editForm += "<label>" + field.label + "&nbsp;<span class='remove'><a href='#' id='" + key + "-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove " + key + "'><span>Del</span></a></span></label>";
                                } else {
                                    editForm += "<label>" + field.label + "&nbsp;<span class='clone'><a href='#' id='" + key + "-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add " + key + "'><span>Add</span></a></span></label>";
                                }

                            } else {
                                editForm += "<label>" + field.label + "</label>";
                            }

                            /*
                            if (field.type === 'select') {

                                if (field.required === "true") {
                                    var required = "class='required";
                                }

                                //editForm += "<select name='" + field.id + "[]' id='" + field.id + "' " + required + "'></select>";
                                editForm += "<input id='" + key + "-" + key + "' name='" + key + "[]' type='text' value='test" + value + "' " + required +" />";
                                //editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value1 + "' />";
                            }
                            */

                            if (field.type === 'text') {
                                editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value1 + "' " + required +" />";
                            }

                            if (field.type === 'textarea') {
                                editForm += "<textarea id='"+ key + "-" + counter + "' name='" + key + "[]' rows='7' cols='55' " + required + ">" + value1 + "</textarea> ";
                            }

                            editForm += "</fieldset>";

                        });
                    }
                }
            });
        });

        $.each(response, function(key, value) {

            // hidden
            if (key === "collection") {

                editForm += "<input id='" + key + "-0' name='collection' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.system") {

                editForm += "<input id='" + key + "' class='pid' name='pid' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.legacy") {

                editForm += "<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.master") {

                editForm += "<input id='identifier-master' name='identifier.master[]' type='hidden' value='" + value + "' />";

            } else if (key === "objectType") {

                objectType = value;
                editForm += "<input name='" + key + "' type='hidden' value='" + value + "' />";

            } else if (key === "date.created") {

                editForm += "<fieldset>";
                editForm += "<label class='datecreated'>" + key + "</label>";
                editForm += "<input class='datecreated' type='text' value='" + value + "' disabled />";
                editForm += "<input class='datecreated' name='" + key + "[]' type='hidden' value='" + value + "'/>";
                editForm += "</fieldset>";

            } else if (key === "date.modified") {

                editForm += "<fieldset>";
                editForm += "<label class='datemodified'>" + key + "</label>";
                editForm += "<input class='datemodified' type='text' value='" + value + "' disabled />";
                editForm += "</fieldset>";

            }
        });

        $.each(sortedFields, function( i, field ) {

            if (field.required === "false") {
                editForm += "<fieldset class='" + field.id + "-0' style='display:none;'>";
                editForm += "<label>" + field.label + "&nbsp;<span class='remove'><a href='#' id='" + field.id + "-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove " + field.element + "'><span>Del</span></a></span></label>";

                if (field.type === "text") {
                    editForm += "<input id='" + field.id + "-0' name='" + field.element + "[]' type='" + field.type + "' value='' />";
                } else if (field.type === "textarea") {
                    editForm += "<textarea id='"+ field.id +"-0' name='" + field.element + "[]' rows='7' cols='55'></textarea> ";
                }
                editForm += "</fieldset>";
            }
        });

        //MMS.controlledVocabularies.getLists();

        viewObj.footer = '<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);
        var link = createBackLink(type);
        $("#pid").append(link);
        $(metadata).append(editForm);
        validate();
        $(".optional_fields").show();
        $("#optional_fields").show();
        $(metadataForms).show();
        createOptionalElementLinks();
        //MMS.controlledVocabularies.displayControlledVocabulariesBox();
    };

    /**
     * binds events to core fields (clone/remove)
     * @param event
     * @param id
     */
    constructFieldEvent = function(event, id) {

        var action,
        idArray = id.split("-"),
        idCount = idArray[idArray.length - 2],
        i,
        newId,
        fieldElement,
        tempArr = [];

        if (idArray[idArray.length - 1] === "clone") {

           idArray.pop();
           idArray.pop();

           for (i=0; i < idArray.length;i++) {
                tempArr.push(idArray[i]);
           }

           newId = tempArr.join("-");
           newId = newId.replace(".", "-");

           action = function() {

               $.each(mms_metadata_fields, function( i, field ) {

                   fieldElement = field.element.replace(".", "-");
                   fieldElement = fieldElement.replace(".", "-");

                   if (newId === fieldElement) {
                       cloneFieldSet( event, field );
                   }
               });
           };

           repeatField( action );

        } else if (idArray[idArray.length - 1] === "remove") {

            idArray.pop();
            for (i=0; i < idArray.length;i++) {
                tempArr.push(idArray[i]);
            }

            newId = tempArr.join("-");

            if (idCount === "0") {
                action = function() { $("#" + newId).val(""); $("." + newId).hide() };
            } else {
                action = function() { $("." + id).remove(); };
            }

            removeField( action );
        }
    };

    /**
     * removes cloned field
     * @param event
     * @param id
     */
    removeClonedField = function(event, id) {
        event.preventDefault();
        event.stopPropagation();
        id = id.replace("-remove", "");
        $("." + id).remove();
    }

    /**
     * removes field - core fields
     * @param action
     */
    removeField = function(action) {
       action();
    };

    /**
     * clones field - core fields
     * @param action
     */
    repeatField = function(action) {
        action();
    };

    /**
     * clears disabled editor vocabulary fields
     * @param id
     */
    clearField = function(id) {
        id = id.replace("-clear", "");
        $('#' + id).val('');
    };

    /**
     * constructs form fields
     * @param filedObj
     * @return fObj
     */
    constructField = function( fieldObj) {

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));
        var field = "";
        var clearField = "";

        if (fieldObj.type === "select") {

            if (fieldObj.required === "true") {
                var required = "class='required";
            }

            field += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";
            field += "<label for='" + fieldObj.id + "'>" + fieldObj.label + "</label>";
            field += "<select name='" + fieldObj.element + "[]' id='" + fieldObj.id + "' " + required + "'></select>";
            field += "</fieldset>";

        } else {

            if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
                clearField = "&nbsp;&nbsp;<a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='" + MMS.configObj.baseUrl + "images/glyphicons_197_remove.png' alt='Remove' /></a>";
            }

            field += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";
            field += "<label>";
            field += fieldObj.label;

            if (fieldObj.repeat === "true") {
                field += "<span class='clone'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add " + fieldObj.element + "'><span>Add</span></a></span>";
            } else if (fieldObj.repeat === "false") {
                field += "<a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"; //" + fieldObj.element + "'
            }

            if (fieldObj.required === "false") {
                field += "<span class='remove'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove " + fieldObj.element + "'><span>Del</span></a></span>";
            }

            field += "</label>"  + clearField;

            if (fieldObj.type === "text") {
                field += "<input ";
            } else if(fieldObj.type === "textarea") {
                field += "<textarea ";
            }

            field += "id='" + fieldObj.id + "-" + MMS.counterObj.count + "'";
            field += "name='" + fieldObj.element + "[]' ";
            field += "type='" + fieldObj.type +  "' ";

            if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
                field += "disabled='disbled'";
            }

            field += "class='";

            if (fieldObj.required === "true") {
                field += "required";
            }

            field += "'";

            if (fieldObj.type === "text") {
                field += "/>";
            } else if (fieldObj.type === "textarea") {
                field += "rows='14' cols='45'></textarea>";
            }

            field += "</fieldset>";
        }

        if (fieldObj.required === "true") {
            $fObj = $(field);
        } else if (fieldObj.required === "false") {
            $fObj = $(field).hide();
        }

        return $fObj;
    };

    /**
     * generates optional field links
     * @param options

    createOptionalElementLinks = function() {

        $("#optional_fields").empty();

        $.each(mms_metadata_fields, function( i, field ) {

            if (field.required === "false") {

                var menuField = "<li class='icn_categories'><a href='#'>" + field.element + "</a></li>";
                $optionalField = $(menuField).on("click", "a", function(event) {
                                                                    event.stopPropagation();
                                                                    event.preventDefault();
                                                                    $("." + field.id + "-0").show();
                                                               });
                $optionalField.appendTo("#optional_fields");

            }
        });
    };
     */

    /**
     * generates optional field links
     * @param options
     */
    createOptionalElementLinks = function() {

        $("#optional_fields").empty();

        $.each(mms_metadata_fields, function( i, field ) {

            if (field.required === "false") {

                var menuField = "<li class='icn_categories'><a href='#'>" + field.label + "</a></li>";
                $optionalField = $(menuField).on("click", "a", function(event) {
                    event.preventDefault();
                    MMS.metadata.appendOptionalField(field);
                });

                $optionalField.appendTo("#optional_fields");
            }
        });
    };

    /**
     *
     * @param event
     * @param fieldObj
     * @returns {string}
     */
    appendOptionalField = function(field) {
        $("." + field.id + "-0").show();
        location.hash = "#" + field.id + "-0";
    };

    /**
     * clones an existing field
     * @param fieldObj
     */
    cloneFieldSet = function(event, fieldObj) {

        event.preventDefault();
        event.stopPropagation();

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        MMS.counterObj.count++;

        var clone = "";
        var clonedField = "";
        clonedField += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";

        clonedField += "<label>";
        clonedField += fieldObj.label;

        clonedField += "&nbsp;<span class='remove'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove " + fieldObj.element + "'><span>Del</span></a></span>";

        if (fieldObj.vocabulary === "true") {
            //clonedField += "<span class='vocab'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-vocab' onclick='MMS.ui.createControlledVocabulariesDialogBox(event, this.id);' title='Controlled Vocabularies'><span>vocab</span></a></span>";
        }

        clonedField += "</label>";

        if (fieldObj.type === "text") {
            clonedField += "<input ";
        } else if(fieldObj.type === "textarea") {
            clonedField += "<textarea ";
        }

        clonedField += "id='" + fieldObj.id + "-" + MMS.counterObj.count + "'";
        clonedField += "name='" + fieldObj.element + "[]' ";
        clonedField += "type='" + fieldObj.type +  "' ";

        if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
            clonedField += "disabled='disabled'";
        }

        clonedField += "class='none ";

        clonedField += "'";

        if (fieldObj.type === "text") {
            clonedField += "/>";
        } else if (fieldObj.type === "textarea") {
            clonedField += "rows='10' cols='45'></textarea>";
        }

        clonedField += "</fieldset>";

        clone = $(clonedField).insertAfter("." + fieldObj.id + "-0");

        return clone;
    };

    /**
     * collects form data and sends to server
     */
    saveMetadata = function() {

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        if (profileObj.roleID === '2') {

            requestObj = {
                type: "PUT",
                url: MMS.configObj.queue,
                data:  $(metadataForm).serialize(),
                dataType: "json",
                cache: true,
                success: function (response) {
                    $('#metadata-form').find('input[type=text], textarea').val('');
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                }
            };

            MMS.utils.doAjax(requestObj);

            return;
        }

        var pid = $('.pid').val();
        var type = $('#type').val();

        requestObj = {
            type: "PUT",
            url: MMS.configObj.repository,
            data:  $(metadataForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.updated === 'true') {

                    requestObj = {
                        type: "GET",
                        url: MMS.configObj.repository,
                        data:  "pid=" + pid,
                        dataType: "json",
                        cache: true,
                        success: function (response, type) {

                            $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");
                            setTimeout(function() {
                                $("div#actionFeedback").empty();
                            }, 5000);
                            location.hash = "#header";
                            return false;

                            createMetadataEditForm(response, pid, type);
                        }
                    };

                    MMS.utils.doAjax(requestObj);

                } else if (response.created === 'true') {
                    $('#metadata-form').find('input[type=text], textarea').val('');
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    MMS.controlledVocabularies.resetLists();
                    location.hash = "#header";
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * retrieves record from repository and generates edit form
     * @param event
     * @param pid
     */
    getMetadata = function(event,pid, type) {

        event.preventDefault();

        requestObj = {
            type: "GET",
            url: MMS.configObj.repository,
            data:  "pid=" + pid,
            dataType: "json",
            cache: false,
            success: function (response) {
                createMetadataEditForm(response, pid, type);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * "Clones" record...
     * * The pid is removed from the rendered FORM.  When the user submits the record, the absence of a pid causes
     * the mms system to assign a new pid and therefore create a new record.
     */
    cloneRecord = function() {

        var pid = $('.pid').val();
        $('.pid').remove();
        $('#isPid').remove();
        $('.datecreated').remove();
        $('.datemodified').remove();
        $("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record " + pid + ".</h4>");
        setTimeout(function() {
            $("div#actionFeedback").remove();
        }, 10000);
    };

    /**
     * validates core form fields
     */
    validate = function() {
        $(metadataForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveMetadata();
            }
        });
    };

    /**
     * deletes record
     * @param pid
     */
    deleteMetadata = function(event, pid) {

        event.preventDefault();

        var remove = confirm("Are you sure you want to delete this record?");

        if (remove) {

            requestObj = {
                type: "POST",
                url: MMS.configObj.repository,
                data:  "pid=" + pid,
                dataType: "json",
                cache: true,
                success: function (response) {
                    if (response.deleted === 'true') {
                        $("#search-forms").hide();
                        $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");
                        setTimeout(function() {
                            $("div#actionFeedback").empty();
                        }, 5000);
                        location.hash = "#header";
                    } else {
                        alert('Error: Record not deleted.');
                    }
                }
            };

            MMS.utils.doAjax(requestObj);
        }
        return false;
    };

    /** http://stackoverflow.com/questions/8175093/simple-function-to-sort-a-json-object-using-javascript
     * sorts array of json objects by display order
     * @param array
     * @param key
     * @returns {*}
     */
    sortObjects = function(mms_metadata_fields, key) {

        var array = [];
        for (var i in mms_metadata_fields) {
            array.push(mms_metadata_fields[i]);
        }
        return array.sort(function(a, b) {
            var x = a[key]; var y = b[key];
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        });
    }

    /**
     * loads form based on object type
     * @param objectType
     */
    loadForm = function(objectType) {

        MMS.counterObj.count = 0;
        $('#search-results').empty();
        MMS.view.createView(viewObj);

        if (objectType === "image") {
            var fields = [];
            mms_metadata_fields = JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));
            createMetadataForm(objectType);
            createOptionalElementLinks();
        }
        validate();
        $(".current").html(objectType + " metadata");
        $("#clone-record").remove();
        $(metadataForms).show();
        $(".optional_fields").show();
        $("#optional_fields").show();
        $("#controlled-vocabulary-section").show();
        MMS.controlledVocabularies.displayControlledVocabulariesBox();

    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(metadataForms).hide();
        $(".optional_fields").hide();

        $(".formType").on("click", function(event) {
            loadForm($(this).attr("id"));
        });
    };

    return {
        getMetadata: function(event, pid, type) {
            getMetadata(event, pid, type);
        },
        deleteMetadata: function(event, pid) {
            deleteMetadata(event, pid);
        },
        removeClonedField: function(event, id) {
            removeClonedField(event, id);
        },
        constructFieldEvent: function(event, id) {
            constructFieldEvent(event, id);
        },
        cloneRecord: function(pid) {
            cloneRecord(pid);
        },
        back: function(type) {
            back(type);
        },
        createMetadataEditForm: function(response, pid, type) {
            createMetadataEditForm(response, pid, type);
        },
        appendOptionalField: function(field) {
            appendOptionalField(field);
        },
        clearField: function(id) {
            clearField(id);
        },
        loadForm: function(id) {
            loadForm(id);
        },
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.user");

MMS.user = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.ui
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var user = "#user",
        userForm = "#user-form",
        userForms = "#user-forms",
        getSessionInfo,
        constructUserAddForm,
        constructUserEditForm,
        listUsers,
        validateUserForm,
        loadForm,
        init,
        saveUserData,
        deleteUserData,
        requestObj,
        saveRequestObj,
        deleteRequestObj,
        requestRoleObj,
        requestCollectionObj,
        requestProfileObj,
        profileRequestObj,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'user-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'user-form',
        divID: 'user',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * validates user forms
     */
    validateUserForm = function() {

        $(userForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveUserData();
            }
        });
    };

    /**
     * constructs Add User form fields
     */
    constructUserAddForm = function() {

        viewObj.footer = '<div class="submit_link"><input type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);

        var fields = "";
        var firstName = "";
        var lastName = "";
        var duID = "";
        var cairUserName = "";
        var roles = "";
        var collections = "";

        firstName += "<fieldset>";
        firstName += "<label>";
        firstName += "* First Name";
        firstName += "</label>";
        firstName += "<input id='firstName' name='firstName' type='text' class='required' />";
        firstName += "</fieldset>";

        lastName += "<fieldset>";
        lastName += "<label>";
        lastName += "* Last Name";
        lastName += "</label>";
        lastName += "<input id='lastName' name='lastName' type='text' class='required' />";
        lastName += "</fieldset>";

        duID += "<fieldset>";
        duID += "<label>";
        duID += "* DU ID";
        duID += "</label>";
        duID += "<input id='duID' name='duID' type='text' class='required' />";
        duID += "</fieldset>";

        /*
        cairUserName += "<fieldset>";
        cairUserName += "<label>";
        cairUserName += "Active Directory Username (Windows Username)";
        cairUserName += "</label>";
        cairUserName += "<input id='cairUserName' name='cairUserName' type='text' />";
        cairUserName += "</fieldset>";
        */

        requestRoleObj = {
            type: "GET",
            url: MMS.configObj.roles,
            dataType: "json",
            cache: true,
            async: false,
            success: function (response) {

                roles += "<fieldset>";
                roles += "<label for='roleID'>* Roles</label>";
                roles += "<select name='roleID' id='roleID' class='required'>";
                roles += "<option value=''>---Assign a role--</option>";
                $.each(response, function(key, value) {
                    if (key != '3') {
                        roles += "<option value='" + key + "'>" + value + "</option>";
                    }
                });
                roles += "</select>";
                roles += "</fieldset>";

                $(user).append(roles);

            }
        };

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        if (profileObj.roleID == '3') {

            requestCollectionObj = {
                type: "GET",
                url: MMS.configObj.collections,
                dataType: "json",
                cache: true,
                async: false,
                success: function (response) {

                    collections += "<strong>* Assign a Collection</strong>";

                    $.each(response, function(key, value) {
                        collections += "<p><input id='" + value.collectionID + "' name='collections[]' type='radio' value='" + value.collectionID + "' /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                    });

                    $(user).append(collections);
                }
            };

            MMS.utils.doAjax(requestCollectionObj);

        } else {
            collections += "<input id='" + profileObj.collectionID + "' name='collections[]' type='hidden' value='" + profileObj.collectionID + "' />";
            fields += collections;
        }

        MMS.utils.doAjax(requestRoleObj);

        fields += firstName;
        fields += lastName;
        fields += duID;
        //fields += cairUserName;

        $(user).append(fields);

        validateUserForm();

    };

    /**
     * constructs Edit User form fields
     */
    listUsers = function() {

        viewObj.footer = 'null';
        MMS.view.createView(viewObj);

        // get users
        requestObj = {
            type: "GET",
            url: MMS.configObj.users,
            dataType: "json",
            cache: true,
            success: function (response) {

                // TODO: split out into display function
                var userResponse = "";
                userResponse += "<div class='tab_container'>";
                userResponse += "<div id='tab1' class='tab_content'>";
                userResponse += "<table class='tablesorter' cellspacing='0'>";
                userResponse += "<thead>";
                userResponse += "<tr>";
                userResponse += "<th>First Name</th>";
                userResponse += "<th>Last Name</th>";
                userResponse += "<th>Role</th>";
                userResponse += "<th>Active</th>";
                userResponse += "<th>Actions</th>";
                userResponse += "</tr>";
                userResponse += "</thead>";
                userResponse += "<tbody>";

                $.each(response, function(key, value) {

                    userResponse += "<tr>";
                    userResponse += "<td>" + value.firstName + "</td>";
                    userResponse += "<td>" + value.lastName + "</td>";
                    userResponse += "<td>" + value.roleName + "</td>";

                    if (value.isActive === "1") {
                        userResponse += "<td>Yes</td>";
                    } else {
                        userResponse += "<td>No</td>";
                    }

                    userResponse += "<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm(" + value.id + ");'></td>";
                    //delete <!--<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteUserData(" + value.id + "); return false;'>-->
                    userResponse += "</tr>";
                });

                userResponse += "</tbody>";
                userResponse += "</table>";
                userResponse += "</div>";
                userResponse += "</div>";

                $(user).append(userResponse);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * creates edit form
     * @param userID
     */
    constructUserEditForm = function(userID) {

        var profile = "";
        var roles = "";
        var collections = "";
        var isActive = "";

        viewObj.footer = '<div class="submit_link"><input type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);

        $(".current").html("Edit User");

        requestProfileObj = {

            type: "GET",
            url: MMS.configObj.users,
            data: "id=" + userID,
            dataType: "json",
            cache: false,
            async: false,
            success: function (response) {

                profile += "<input name='userID' type='hidden' value='" + userID + "' />";
                profile += "<fieldset>";
                profile += "<label>";
                profile += "* First Name";
                profile += "</label>";
                profile += "<input id='firstName' name='firstName' type='text' value='" + response[0].firstName + "' class='required' />";
                profile += "</fieldset>";

                profile += "<fieldset>";
                profile += "<label>";
                profile += "* Last Name";
                profile += "</label>";
                profile += "<input id='lastName' name='lastName' type='text' value='" + response[0].lastName + "' class='required' />";
                profile += "</fieldset>";

                $(user).append(profile);

                // get roles
                requestRoleObj = {
                    type: "GET",
                    url: MMS.configObj.roles,
                    dataType: "json",
                    cache: false,
                    async: false,
                    success: function (roleResponse) {

                        roles += "<fieldset>";
                        roles += "<label for='roleID'>* Roles</label>";
                        roles += "<select name='roleID' id='roleID' class='required'>";
                        roles += "<option value=''>---Assign a role--</option>";
                        $.each(roleResponse, function(key, value) {
                            if (response[0].roleID === key) {
                                roles += "<option value='" + key + "' selected>" + value + "</option>";
                            } else if (key != '3') {
                                roles += "<option value='" + key + "'>" + value + "</option>";
                            }
                        });
                        roles += "</select>";
                        roles += "</fieldset>";

                        $(user).append(roles);

                    }
                };

                var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

                if (profileObj.roleID == '3') {

                    // get collections
                    requestCollectionObj = {
                        type: "GET",
                        url: MMS.configObj.collections,
                        dataType: "json",
                        cache: false,
                        async: false,
                        success: function (collectionResponse) {

                            collections += "<strong>* Assigned Collection</strong>";

                            $.each(collectionResponse, function(key, value) {

                                if (response[1].collectionID === value.collectionID) {
                                    collections += "<p><input id='" + value.collectionID + "' name='collectionID' type='radio' value='" + value.collectionID + "' checked /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                                } else {
                                    collections += "<p><input id='" + value.collectionID + "' name='collectionID' type='radio' value='" + value.collectionID + "' /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                                }
                            });
                        }
                    };

                    MMS.utils.doAjax(requestCollectionObj);

                } else {
                    collections += "<input name='collectionID' type='hidden' value='" + profileObj.collectionID + "' />";
                }

                $(user).append(collections);
                MMS.utils.doAjax(requestRoleObj);

                isActive += "<label>";
                isActive += "isActive";
                isActive += "</label>";

                if (response[0].isActive == "1") {
                    isActive += "<input id='isActive' name='isActive' type='checkbox' value='" + response[0].isActive + "' checked />";
                } else {
                    isActive += "<input id='isActive' name='isActive' type='checkbox' value='" + response[0].isActive + "' />";
                }

                $(user).append(isActive);

            }
        };

        MMS.utils.doAjax(requestProfileObj);
        validateUserForm();
    };

    /**
     * saves user profile data
     */
    saveUserData = function() {

        saveRequestObj = {
            type: "PUT",
            url: MMS.configObj.users,
            data: $(userForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.updated === "true") {
                    listUsers();
                } else if (response.updated === "false") {
                    alert("Error: Update failed.");
                } else {
                    $('#user-form')[0].reset();
                }
            }
        };

        MMS.utils.doAjax(saveRequestObj);
    };

    /**
     * delete user profile data
     * @param userID
     */
    deleteUserData = function(userID) {

        var remove = confirm("Are you sure you want to delete this user?");

        if (remove) {

            deleteRequestObj = {
                type: "POST",
                url: MMS.configObj.users,
                data: "userID=" + userID,
                dataType: "json",
                cache: false,
                success: function (response) {

                    if (response.deleted === "true") {
                        listUsers();
                    } else if (response.deleted === "false") {
                        alert("Error: Update failed.");
                    }
                }
            };

            MMS.utils.doAjax(deleteRequestObj);
        }
    };

    /**
     * retrieves user's session information
     */
    getSessionInfo = function() {

        profileRequestObj = {
            type: "GET",
            url: MMS.configObj.users,
            data: "authenticated=true",
            dataType: "json",
            cache: false,
            success: function (response) {

                sessionStorage.setItem("mms_profile", JSON.stringify(response));
                var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));
                var user = profileObj.firstName + " " + profileObj.lastName + " (" + profileObj.roleName + ")";
                $("#user-role").append(user);

            }
        };

        MMS.utils.doAjax(profileRequestObj);
    };

    /** TODO: re-evaluate this approach
     * loads form based on object type
     */
    loadForm = function(formType) {

        if (formType === "addUser") {
            constructUserAddForm();
            $('#search-results').empty();
            $(".current").html("Add User");
        } else if (formType === "viewUsers") {
            listUsers();
            $('#search-results').empty();
            $(".current").html("Users");
        }
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(userForms).hide();

        $("#addUser").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        $("#viewUsers").on("click", function(event) {
            loadForm($(this).attr("id"));
        });
    };

    return {
        init:function() {
            return init();
        },
        constructUserEditForm:function(userID) {
            return constructUserEditForm(userID);
        },
        deleteUserData:function(userID) {
            return deleteUserData(userID);
        },
        getSessionInfo:function() {
            return getSessionInfo();
        }
    };

}(jQuery));MMS.namespace("MMS.collections");

MMS.collections = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.ui
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var collection = "#collection",
        collectionForm = "#collection-form",
        collectionForms = "#collection-forms",
        constructCollectionFields,
        constructEditCollectionFields,
        validate,
        loadForm,
        init,
        saveCollectionData,
        requestObj,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'collection-forms',
        articleClass: 'module width_full',
        h3ID: 'null',
        h3Value: '',
        formID: 'collection-form',
        divID: 'collection',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input type="submit" value="Save"></div>'
    };

    /** TODO: change method name
     * constructs collection form fields
     */
    constructCollectionFields = function() {

        MMS.view.createView(viewObj);

        var fields = "";
        var title = "";
        var description = "";
        var objectType = "";
        var isActive = "";

        // collection name
        title += "<fieldset>";
        title += "<label>";
        title += "* Title";
        title += "</label>";
        title += "<input id='title' name='title' type='text' class='required' />";
        title += "</fieldset>";

        // collection description
        description += "<fieldset>";
        description += "<label>";
        description += "* Description";
        description += "</label>";
        description += "<input id='description' name='description' type='text' class='required' />";
        description += "</fieldset>";

        isActive += "<input id='isActive' name='isActive' type='hidden' value='1' checked />";

        fields += title;
        fields += description;
        fields += isActive;

        $(collection).append(fields);

        // get object Types
        var objectTypeRequestObj = {

            type: "GET",
            url: MMS.configObj.objectTypes,
            dataType: "json",
            cache: true,
            success: function (response) {

                objectType += "<fieldset>";
                objectType += "<label>";
                objectType += "* Object Type";
                objectType += "</label>";
                objectType += "<br />";
                $.each(response, function(key, value) {
                   objectType += "<p><input id='" + value.objectType + "' name='objectType[]' type='checkbox' value='" + value.objectTypeID + "' /> " + value.objectType + "</p>";
                });

                objectType += "</fieldset>";
                $(collection).append(objectType);
            }
        };

        MMS.utils.doAjax(objectTypeRequestObj);

    };


    /**
     * TODO: change method name
     * constructs Edit User form fields
     */
    constructEditCollectionFields = function() {

        MMS.view.createView(viewObj);

        // get collections
        requestObj = {
            type: "GET",
            url: MMS.configObj.collections,
            dataType: "json",
            cache: true,
            success: function (response) {

                var collectionResponse = "";
                collectionResponse += "<div class='tab_container'>";
                collectionResponse += "<div id='tab1' class='tab_content'>";
                collectionResponse += "<table class='tablesorter' cellspacing='0'>";
                collectionResponse += "<thead>";
                collectionResponse += "<tr>";
                collectionResponse += "<th>Collection Name</th>";
                collectionResponse += "<th>Description</th>";
                collectionResponse += "<th>Active</th>";
                collectionResponse += "<th>Actions</th>";
                collectionResponse += "</tr>";
                collectionResponse += "</thead>";
                collectionResponse += "<tbody>";

                $.each(response, function(key, value) {

                    collectionResponse += "<tr>";
                    collectionResponse += "<td>" + value.title + "</td>";
                    collectionResponse += "<td>" + value.description + "</td>";

                    if (value.isActive === "1") {
                        collectionResponse += "<td>Yes</td>";
                    } else {
                        collectionResponse += "<td>No</td>";
                    }

                    //collectionResponse += "<td><input type='image' src='../../images/icn_edit.png' title='Edit'><input type='image' src='../../images/icn_trash.png' title='Trash'></td>";

                    collectionResponse += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \"" + value.collectionID + "\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \"" + value.collectionID + "\"); return false;'></td>";
                    collectionResponse += "</tr>";

                });

                collectionResponse += "</tbody>";
                collectionResponse += "</table>";
                collectionResponse += "</div>";
                collectionResponse += "</div>";

                $(collection).append(collectionResponse);

            }
        };

        MMS.utils.doAjax(requestObj);

    };

    /**
     * saves collection data
     */
    saveCollectionData = function() {

        requestObj = {
            type: "PUT",
            url: MMS.configObj.collections,
            data: $(collectionForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {
                $(collectionForm)[0].reset();
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * loads form based on object type
     */
    loadForm = function(formType) {

        if (formType === "addCollection") {
            constructCollectionFields();
            $(".current").html("Add Collection");
        } else if  (formType === "editCollection") {
            //TODO: build form
        } else if (formType === "deleteCollection") {
            //TODO: build form
        } else if (formType === "viewCollections") {
            constructEditCollectionFields();
            $(".current").html("Collections");
        }
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(collectionForms).hide();

        $("#addCollection").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        $("#viewCollections").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        validate();
    };

    /**
     * validates core form fields
     */
    validate = function() {
        $(collectionForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveCollectionData();
            }
        });
    };

    return {
        init:function() {
            return init();
        }
    };

}(jQuery));
MMS.namespace("MMS.login");

MMS.login = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var authenticate,
        login,
        validate,
        requestObj,
        module = ".module width_full",
        loginForm = "#login-form",
        init,
        logout;

    /**
     * sends the user's login credentials to the server
     */
    authenticate = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.authenticate,
            data: $(loginForm).serialize(),
            dataType: "json",
            cache: true,
            success: function (response) {
                $(module).hide();
                login(response);
            }
        };

         $("h3#message").ajaxStart(function() {
            $("#authenticate").attr("disabled", "disabled");
         });

        MMS.utils.doAjax(requestObj);

    };

    /**
     * checks the response and logs the user into the system
     * @param response
     */
    login = function(response) {
        if (response.isAuthenticated === "false") {
            $("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");
            $("#authenticate").removeAttr("disabled");
        } else if(response.isAuthenticated === "true") {
            window.location.replace(MMS.configObj.dashboard);
        }
    };

    /**
     * validates login form fields
     */
    validate = function() {
        $("#login-form").validate({
            errorClass: "invalid",
            submitHandler: function() {
                authenticate();
            }
        });
    };

    /**
     * destroys session
     */
    logout = function() {
        $("#logout").click(function() {

            requestObj = {
                type: "GET",
                url: MMS.configObj.logout,
                dataType: "json",
                success: function (response) {
                    if (response.logout === "true") {
                        sessionStorage.removeItem("mms_profile");
                        window.location.replace(MMS.configObj.sslBaseUrl);
                    }
                }
            };

            MMS.utils.doAjax(requestObj);

        });

        return false;
    };

    init = function() {
        validate();
        logout();
    }

    return {
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.search");

MMS.search = (function($) {

    "use strict";

    var doQuickSearch,
        spellCheck,
        term,
        searchString,
        didYouMeanSearch,
        didYouMeanTerm,
        displaySearchResponse,
        requestObj,
        init,
        viewObj,
        error = "<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";


    viewObj = {
        content: 'search-results',
        articleID: 'search-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'search-form',
        divID: 'search',
        divClass: 'tab_container',
        header: '<div class="pagination"></div>',
        footer: '<div class="pagination"></div>'
    };

    /**
     * performs a quick search
     * @param event
     */
    doQuickSearch = function(event) {

        $("#content").empty();

        event.preventDefault();

        term = $("input#quickSearch").val();
        term = MMS.utils.sanitizeInput(term);

        if (term === "") {
            return $("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>");
        }

        searchString = $("#search_box").serialize();

        $("#search").empty();
        $("#actionFeedback").empty();

        requestObj = {
            type: "GET",
            url: MMS.configObj.search,
            data: $("#search_box").serialize(),
            dataType: "json",
            cache: true,
            success: function (response) {

                if (response.error == 500) {
                    $("#error").html(error);
                } else {
                    $("#error").html("");
                    MMS.view.createView(viewObj);
                    displaySearchResponse(response);
                }
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * parses and displays search response
     * @param responseObj
     */
    displaySearchResponse = function(responseObj) {

        var results = "";
        var paginationArr = [];
        var page = "";
        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        //if (term.trim().indexOf(' ') === -1) {
            //spellCheck(responseObj);
        //}

        $("#search_box")[0].reset();
        $("#search-message").text("You searched for: " + term);
        $(".current").html("Search Results");

        if (responseObj.response.numFound === 0) {
            $("#search-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");
            return;
        }

        results += "<div>";
        results += "<div>";
        results += "<table class='tablesorter' cellspacing='0'>";
        results += "<thead>";
        results += "<tr>";
        results += "<th>Records Found: " + responseObj.response.numFound + "</th>";
        results += "<th>Actions</th>";
        results += "</tr>";
        results += "</thead>";
        results += "<tbody id='pages'>";

        $.each(responseObj.response.docs, function(key, value) {

            page += "<tr>";
            page += "<td width='85%'>";
            page += "<table width='85%' style='border-bottom: 1px dotted #ccc;'>";
            page += "<tr align='top'>";

            if (value.identifier_t[0] !== undefined) {
                page += "<td width='30%' align='center'><p><img src='" + MMS.configObj.nas + value.identifier_t[0] + "' alt='" + value.title_t[0] + "' border='1'></p></td>";
            }
            page += "<td width='40%' align='left'>";
            if (value.title_t !== undefined) {
                page += "<p><strong>Title:</strong> " + value.title_t[0] + "</p>";
            }
            if (value.creator_t !== undefined) {
                page += "<p><strong>Creator:</strong> " + value.creator_t[0] + "</p>";
            }

            page += "</td>";
            page += "</tr>";
            page += "</table>";
            page += "</td>";
            //page += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.id + "\", \"search\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \"" + value.id + "\"); return false;'></td>";
            page += "<td width='28%'>";
            page += "<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.id + "\", \"search\");'>";

            if (profileObj.roleID === "1") {
                page += "<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \"" + value.id + "\"); return false;'>";
            }

            page += "</td>";

            page += "</tr>";

            paginationArr.push(page);
            page = "";

        });

        results += "</tbody>";
        results += "</table>";
        results += "</div>";
        results += "</div>";

        $("#search").append(results);
        $("#search-results").show();

        MMS.pagination.init(paginationArr);
    };

    /** NOT USED...causes performance issues at server level
     * suggest a correct spelling of a search term
     * @param responseObj
     */
    spellCheck = function(responseObj) {

        var correctSpelling;

        $.each(responseObj.spellcheck.suggestions, function(key, value) {

            if (value !== "true") {
                if (value.suggestion !== undefined) {
                    $.each(value.suggestion, function(key, value) {
                        if (key === 0) {
                            didYouMeanTerm = value.word.trim();
                            correctSpelling = "<a href='#' id='didYouMeanSearch'>" + value.word.trim() + "</a>";
                        }

                    });
                }
            }
        });

        if (correctSpelling !== undefined) {
            $("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: " + correctSpelling + "</h4>");
            $("#didYouMeanSearch").on("click", function(event) {
                didYouMeanSearch();
            });
        }
    };

    /** NOT USED
     * executes a search using the "did you mean" term
     */
    didYouMeanSearch = function() {

        $("#search").empty();
        $("#searchActionFeedback").empty();

        var newSearchString = searchString.replace(term, didYouMeanTerm);
        term = didYouMeanTerm;

        requestObj = {
            type: "GET",
            url: MMS.configObj.search,
            data: newSearchString,
            dataType: "json",
            cache: true,
            success: function (response) {

                if (response.error == 500) {
                    $("#error").html(error);
                } else {
                    $("#error").html("");
                    displaySearchResponse(response);
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    }

    /**
     * binds events to HTML elements
     */
    init = function() {

        $("#search-forms").hide();
        $("form.quick_search").submit(function(event) {
            doQuickSearch(event);
        });
    };

    return {
        init:function() {
            return init();
        }
    };

}(jQuery));MMS.namespace("MMS.pagination");

MMS.pagination = (function($) {

    "use strict";

    var pages,
        currentPage = 1,
        pageCount,
        recordsPerPage = 4,
        renderPagingControls,
        renderPage,
        recordCount,
        pagination,
        next,
        previous,
        init;

    /**
     * calculates the page count
     */
    pageCount = function() {
        return Math.ceil(recordCount/recordsPerPage);
    };

    /**
     * renders page controls
     */
    renderPagingControls = function() {

        $("div.pagination").empty();

        var pagingControls = "";
        pagingControls += "<ul id='pagination-flickr'>";
        pagingControls += "<li><a href='#' onclick='MMS.pagination.previous(" + currentPage + ")'>Previous</a></li>";

        for (var i=1; i<=pageCount(); i++) {

            if (i !== currentPage) {

                if (pageCount() <= 20 ) {
                    pagingControls += "<li><a href='#' onclick='MMS.pagination.renderPage(" + i + "); return false;'>" + i + "</a></li>";
                //} else if (pageCount() > 20) {
                    //pagingControls += "<li><a href='#' onclick='MMS.pagination.renderPage(" + i + "); return false;'>" + i + "</a></li>";
                }

            } else {
                pagingControls += "<li class='active'>" + i + "</li>";
                currentPage = i;
            }
        }
        pagingControls += "<li><a href='#' onclick='MMS.pagination.next(" + currentPage + ")'>Next</a></li>";
        pagingControls += "</ul>";

        $("div.pagination").append(pagingControls);
    };

    /**
     * moves to the next page
     * @param current
     */
    next = function(current) {

        if (current < pageCount()) {
            var nextPage = current + 1;
            renderPage(nextPage);
        }
    };

    /**
     * moves to the previous page
     * @param current
     */
    previous = function(current) {

        if (current > 1) {
            var previousPage = current -1;
            renderPage(previousPage);
        }
    };

    /**
     * displays current page
     * @param page
     */
    renderPage = function(page) {

        currentPage = page;
        var page = (page-1);
        renderPagingControls();

        $("#pages").empty();
        for (var i = (page)*recordsPerPage; i < ((page)*recordsPerPage) + recordsPerPage; i++) {
            $("#pages").append(pages[i]);
        }

    };

    /**
     * initializes pagination method
     * param @paginationArr
     */
    init = function(paginationArr) {

        pages = paginationArr;
        recordCount = paginationArr.length;
        renderPage(1);

    }

    return {
        init:function(paginationArr) {
            return init(paginationArr);
        },
        renderPage:function(page) {
            return renderPage(page);
        },
        next:function(page) {
            return next(page);
        },
        previous:function(page) {
            return previous(page);
        }
    };

}(jQuery));MMS.namespace("MMS.batch");

MMS.batch = (function($) {

    "use strict";

    var getBatchFilesAndMetadata,
        displayBachFileRecords,
        ingest,
        requestObj,
        viewObj,
        init;

    viewObj = {
        content: 'content',
        articleID: 'batch-ingest-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'batch-ingest-form',
        divID: 'batch-ingest',
        divClass: 'module_content',
        header: '<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',
        footer: '<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'
    };

    /**
     * retrieves objects and metadata
     */
    getBatchFilesAndMetadata = function() {

        MMS.utils.focusForm("#batch-ingest-forms");

        requestObj = {
            type: "GET",
            url: MMS.configObj.batch,
            dataType: "json",
            cache: true,
            success: function (response) {
                MMS.view.createView(viewObj);
                displayBachFileRecords(response);
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * displays batch records
     * @param response
     */
    displayBachFileRecords = function(response) {

        $(".current").html("Batch");

        if (response.length === 0) {
            $("#batch-ingest-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");
            return;
        }

        var results = "";
        results += "<div>";
        results += "<div>";
        results += "<table class='tablesorter' cellspacing='0'>";
        results += "<thead>";
        results += "<tr>";
        results += "<th>Batch Records</th>";
        results += "<th>Status</th>";
        results += "</tr>";
        results += "</thead>";
        results += "<tbody>";

        $.each(response, function(key, value) {

            if (value.object != "") {
                results += "<input name='pids[]' type='hidden' value='" + value.pid + "' />";
                //results += "<input name='identifiers[]' type='hidden' value='" + value.identifier + "' />";
            }

            results += "<tr>";
            results += "<td width='85%'>";
            results += "<table width='85%' style='border-bottom: 1px dotted #ccc;'>";
            results += "<tr align='top'>";

            if (value.object != "") {
                results += "<td width='30%' align='center'><p><img src='" + value.object + "' alt='" + value.title + "' border='1'></p></td>";
            } else {
                results += "<td width='30%' align='center'><p>No Object.</p></td>";
            }

            results += "<td width='40%' align='left'>";
            results += "<p><strong>Pid:</strong> " + value.pid + "</p>";
            results += "<p><strong>Title:</strong> " + value.title + "</p>";
            results += "<p><strong>Creator:</strong> " + value.creator + "</p>";
            results += "<p><strong>Identifier:</strong> " + value.identifier + "</p>";
            results += "</td>";
            results += "</tr>";
            results += "</table>";
            results += "</td>";

            if (value.object != "") {
                results += "<td width='28%'>complete.</td>";
            } else {
                results += "<td width='28%'>incomplete.</td>";
            }
            results += "</tr>";

        });

        results += "</tbody>";
        results += "</table>";
        results += "</div>";
        results += "</div>";

        $("#batch-ingest").empty().append(results);
        $("#batch-ingest-forms").show();

    };

    /**
     * batch ingest
     */
    ingest = function() {

        requestObj = {

            type: "POST",
            url: MMS.configObj.batch,
            data: $("#batch-ingest-form").serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.success === false) {
                    $("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");
                    setTimeout(function(){ $("div#actionFeedback").empty(); }, 4000);
                } else {

                    $("#batch-ingest").empty();
                    $("#batch-ingest-forms").remove();
                    $("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");
                    setTimeout(function(){ $("div#actionFeedback").empty(); }, 4000);

                }
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    init = function() {

        $("#batch-ingest-forms").hide();

        $("#batch").on("click", function(event) {
            getBatchFilesAndMetadata($(this).attr("id"));
        });

    };

    return {
        init:function() {
            return init();
        },
        ingest:function() {
            return ingest();
        }
    };

}(jQuery));
MMS.namespace("MMS.xml");

MMS.xml = (function($) {

    // ** dependencies ** //

    "use strict";

    var getXMLFileNames,
        displayXmlFilesNames,
        requestObj,
        saveXml,
        viewObj,
        createUploadArea,
        init;

    viewObj = {
        content: 'content',
        articleID: 'xml-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'xml-form',
        divID: 'xml',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * constructs Edit User form fields
     */
    getXMLFileNames = function() {

        requestObj = {
            type: "GET",
            url: MMS.configObj.xml,
            dataType: "json",
            cache: true,
            success: function (response) {
                MMS.view.createView(viewObj);
                displayXmlFilesNames(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * displays xml file names
     * @param response
     */
    displayXmlFilesNames = function(response) {

        $(".current").html("Xml");

        var xmlFiles = "";
         xmlFiles += "<div class='tab_container'>";
         xmlFiles += "<div id='tab1' class='tab_content'>";
         xmlFiles += "<table class='tablesorter' cellspacing='0'>";
         xmlFiles += "<thead>";
         xmlFiles += "<tr>";
         xmlFiles += "<th>XML File</th>";
         xmlFiles += "<th>Actions</th>";
         xmlFiles += "</tr>";
         xmlFiles += "</thead>";
         xmlFiles += "<tbody>";

        $.each(response, function(key, value) {

            xmlFiles += "<input name='xmlFiles[]' type='hidden' value='" + value.fileName + "' />";
            xmlFiles += "<tr>";
            xmlFiles += "<td>" + value.fileName + "</td>";
            xmlFiles += "<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\"" + value.fileName + "\"); return false;'></td>";
            xmlFiles += "</tr>";
            // <input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.xml.getXml(\"" + value.fileName + "\");return false;'>

        });

        xmlFiles += "</tbody>";
        xmlFiles += "</table>";
        xmlFiles += "</div>";
        xmlFiles += "</div>";

        $("#xml").append(xmlFiles);
        $("#xml-forms").show();

    };

    /**
     * retrieves xml string
     * @param string file

    getXml = function(file) {

        requestObj = {
            type: "GET",
            url: MMS.configObj.xml,
            data: "file=" + file,
            dataType: "json",
            cache: true,
            success: function (response) {
                constructXmlEditForm(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    }
     */

    /**
     * constructs edit form based on imported xml
     * @param string xml

    constructXmlEditForm = function(xml) {

        $("#xml").empty();
        $(".current").html("Edit Xml");

        var xmlForm = "";

        $.each(xml, function(key, value) {

            if (typeof value === "object") {

                $.each(value, function(key1, value1) {

                    if (!$.isEmptyObject(value1)) {

                        xmlForm += "<fieldset>";
                        xmlForm += "<label for='" + key + "'>";
                        xmlForm += key;
                        xmlForm += "</label>";

                        if (key === "description") {
                            xmlForm += "<textarea rows='7' cols='55' id='" + key + "' name='" + key + "[]' >" + value1 + "</textarea>";
                        } else {
                            xmlForm += "<input id='" + key + "' name='" + key + "[]' type='text' value='" + value1 + "' />";
                        }
                        xmlForm += "</fieldset>";

                    }
                });

            } else if (!$.isEmptyObject(value)) {

                xmlForm += "<fieldset>";
                xmlForm += "<label for='" + key + "'>";
                xmlForm += key;
                xmlForm += "</label>";
                xmlForm += "<input id='" + key + "' name='" + key + "[]' type='text' value='" + value + "' class='required' />";
                xmlForm += "</fieldset>";

            }

        });

        $("#xml").append(xmlForm);
    };
     */

    /**
     *  sends xml to server
     */
    saveXml = function(file) {

        var xmlFiles = [];

        for (var i in file) {
            xmlFiles.push(file[i].name);
        }

        requestObj = {
            type: "PUT",
            url: MMS.configObj.xml,
            data: {'xmlFiles': xmlFiles},
            dataType: "json",
            cache: false,
            success: function (response) {

                $("#xml-forms").remove();

                if (response.created === 'true') {

                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                } else {
                    $("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                }

                location.hash = "#header";
            }
        };

        MMS.utils.doAjax(requestObj);
    }

    /**
     * creates drag and drop upload area
     */
    createUploadArea = function() {

        MMS.view.createView(viewObj);

        requestObj = {
            type: "GET",
            url: MMS.configObj.uploadUrl,
            dataType: "html",
            cache: false,
            success: function (response) {
                $("#xml").append(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $("#view_xml").on("click", function() {
            getXMLFileNames();
        });
    };

    return {
        init:function() {
            return init();
        },
        saveXml:function(file) {
            return saveXml(file);
        },
        createUploadArea:function() {
            return createUploadArea();
        }
    };

}(jQuery));MMS.namespace("MMS.queue");

MMS.queue = (function($) {

    "use strict";

    var viewObj,
        getItems,
        requestObj,
        listItems;

    viewObj = {
        content: 'content',
        articleID: 'queue-forms',
        articleClass: 'module width_full',
        h3ID: 'null',
        h3Value: '',
        formID: 'queue-form',
        divID: 'queue',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * retrieves queue items
     * @return void
     */
    getItems = function() {

        requestObj = {
            type: "GET",
            url: MMS.configObj.queue,
            dataType: "json",
            cache: false,
            success: function (response) {
                listItems(response);
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * lists queue items
     * @param response
     * @return void
     */
    listItems = function(response) {

        $(".current").html("Review Queue");
        $("#search-results").empty();

        MMS.view.createView(viewObj);

        if (response.length === 0) {
            $("#queue-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");
            return;
        }

        var itemsResponse = "";
        itemsResponse += "<div class='tab_container'>";
        itemsResponse += "<div id='tab1' class='tab_content'>";
        itemsResponse += "<table class='tablesorter' cellspacing='0'>";
        itemsResponse += "<thead>";
        itemsResponse += "<tr>";
        itemsResponse += "<th>Pid</th>";
        itemsResponse += "<th>Title</th>";
        itemsResponse += "<th>Created By</th>";
        itemsResponse += "<th>Date Created</th>";
        itemsResponse += "<th>Actions</th>";
        itemsResponse += "</tr>";
        itemsResponse += "</thead>";
        itemsResponse += "<tbody>";

        $.each(response, function(key, value) {

            itemsResponse += "<tr>";
            itemsResponse += "<td>" + value.pid + "</td>";
            itemsResponse += "<td>" + value.title + "</td>";
            itemsResponse += "<td>" + value.name + "</td>";
            itemsResponse += "<td>" + value.timestamp + "</td>";
            itemsResponse += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.pid + "\", \"queue\");'</td>";
            // ><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.queue.deleteItem(event, \"" + value.queueID + "\"); return false;'>
            itemsResponse += "</tr>";

        });

        itemsResponse += "</tbody>";
        itemsResponse += "</table>";
        itemsResponse += "</div>";
        itemsResponse += "</div>";

        $('#search-results').empty();
        $('#queue').append(itemsResponse);

    };

    return {
        getItems: function() {
            getItems();
        }
    };

}(jQuery));
MMS.namespace("MMS.view");

MMS.view = (function($) {

    "use strict";

    var createView;

    createView = function(viewObj) {

        var view = '';
        view += '<div id="actionFeedback"></div>';
        view += '<div id="error"></div>';
        view += '<article id="' + viewObj.articleID + '" class="' + viewObj.articleClass + '">';
        view += '<header>';

        if (viewObj.h3ID !== 'null') {
            view += '<h3 id="' + viewObj.h3ID + '">' + viewObj.h3Value + '</h3>';
        }

        if (viewObj.header !== 'null') {
            view += viewObj.header;
        }

        view += '</header>';
        view += '<form id="' + viewObj.formID + '">';
        view += '<div id="' + viewObj.divID + '" class="' + viewObj.divClass + '"></div>';
        view += '<footer>';

        if (viewObj.footer !== 'null') {
            view += viewObj.footer;
        }

        view += '</footer>';
        view += '</form>';
        view += '</article>';

        $("#" + viewObj.content).empty().append(view);

    }

    return {
        createView: function(viewObj) {
            createView(viewObj);
        }
    };

}(jQuery));
$(function() {

  var imageRecordFields = {
    "titleSet": {
        "label": "Title",
        "element":"title",
        "id": "title",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 2,
        "required": "true"
    },
    "creatorSet": {
        "label": "Creator",
        "element":"creator",
        "id":"creator",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 3,
        "required": "true"
    },
    "descriptionSet": {
        "label": "Description",
        "element":"description",
        "id":"description",
        "type": "textarea",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 7,
        "required": "true"
    },
    "subjectSet": {
        "label": "Subject",
        "element":"subject",
        "id":"subject",
        "type": "text",
        "vocabulary": "true",
        "repeat": "true",
        "displayOrder": 8,
        "required": "true"
    },
    "typeSet": {
        "label": "Type",
        "element":"type",
        "id":"type",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 8,
        "required": "true"
    },
    "formatSet": {
        "label": "Format",
        "element":"format",
        "id":"format",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 8,
        "required": "true"
    },
    "identifierSet": {
        "label": "Identifier",
        "element":"identifier",
        "id":"identifier",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 16,
        "required": "true"
    },
    "instructorSet": {
        "label": "Instructor",
        "element":"instructor",
        "id":"type-instructors",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 17,
        "required": "false"
    }
  };

    sessionStorage.setItem("mms_image_metadata_fields", JSON.stringify(imageRecordFields));
});$(function() {

    MMS.configObj = MMS.configObj || {};

    if (document.domain === "mms.library.du.edu") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    } else if (document.domain === "lib-devmms.cair.du.edu") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    } else if (document.domain === "lib.dev") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    }

    MMS.configObj.authenticate = MMS.configObj.sslBaseUrl + "index.php/admin/login";
    MMS.configObj.utils = MMS.configObj.sslBaseUrl + "index.php/utils/utils/ping_services";
    MMS.configObj.logout = MMS.configObj.baseUrl + "index.php/admin/login/logout";
    MMS.configObj.dashboard = MMS.configObj.baseUrl + "index.php/admin/dashboard";
    MMS.configObj.vocabUrl = MMS.configObj.baseUrl + "index.php/admin/controlled_vocabularies";
    MMS.configObj.uploadUrl = MMS.configObj.baseUrl + "libs/plupload/upload.html";
    MMS.configObj.roles = MMS.configObj.baseUrl + "index.php/admin/roles";
    MMS.configObj.users = MMS.configObj.baseUrl + "index.php/admin/users";
    MMS.configObj.collections = MMS.configObj.baseUrl + "index.php/admin/collections";
    MMS.configObj.ingest = MMS.configObj.baseUrl + "index.php/admin/ingest";
    MMS.configObj.search = MMS.configObj.baseUrl + "index.php/admin/search";
    MMS.configObj.repository = MMS.configObj.baseUrl + "index.php/admin/repository";
    MMS.configObj.objectTypes = MMS.configObj.baseUrl + "index.php/admin/object_types";
    MMS.configObj.batch = MMS.configObj.baseUrl + "index.php/admin/batch";
    MMS.configObj.xml = MMS.configObj.baseUrl + "index.php/admin/xml";
    MMS.configObj.nas = MMS.configObj.baseUrl + "index.php/admin/nas?object=";
    MMS.configObj.queue = MMS.configObj.baseUrl + "index.php/admin/queue";
    MMS.configObj.creatorapi = "http://" + document.domain + "/vocabularies-service/index.php/alora/creators";
    MMS.configObj.subjectapi = "http://" + document.domain + "/vocabularies-service/index.php/alora/subjects";
});
$(function() {

    MMS.login.init();
    MMS.metadata.init();
    MMS.user.init();
    MMS.collections.init();
    MMS.controlledVocabularies.init();
    MMS.search.init();
    MMS.batch.init();
    MMS.xml.init();

});
var MMS = MMS || {}

MMS.namespace = function( ns_string ) {

    var parts = ns_string.split("."),
    parent = MMS,
    i;

    if (parts[0] === "MMS") {
        parts = parts.slice(1);
    }

    for(i = 0; i < parts.length; i +=1) {
        if (typeof parent[parts[i]] === "undefined") {
            parent[parts[i]] = {};
        }
        parent = parent[parts[i]];
    }
    return parent;
};
MMS.namespace("MMS.utils");

MMS.utils = (function($) {

    "use strict";

    var doAjax,
        focusForm,
        pingServices,
        viewObj,
        sanitizeInput;

    viewObj = {
        content: 'content',
        articleID: 'null',
        articleClass: 'null',
        h3ID: 'null',
        h3Value: '',
        formID: 'null',
        divID: 'null',
        divClass: 'null',
        header: 'null',
        footer: 'null'
    };

    /**
     * makes the ajax request
     * @param object requestObj
     */
    doAjax = function(requestObj) {

        requestObj.timeout = 5000;  // 5 sec.
        requestObj.error = function ( textStatus, errorThrown ) {
                               $("#error").html("<h4 class='alert_error'>An error has occurred (" + errorThrown + ").  Please contact library-support@du.edu for assistance.</h4>");
                            };
        requestObj.statusCode =  {
                                    403: function() {
                                        alert("Session expired");
                                        MMS.view.createView(viewObj);
                                        $("#actionFeedback").html("<h4 class='alert_error'>Your session has expired.  You will be redirected to the login form momentarily.</h4>");
                                        setTimeout(function() {
                                            window.location = MMS.configObj.sslBaseUrl;
                                        }, 7000);
                                    }
                                 };

        $(document).ajaxStart(function() {
            $.fancybox.showLoading();
        });

        $(document).ajaxStop(function() {
            $.fancybox.hideLoading();
        });

        $.ajax(requestObj);
    };

    /**
     * checks if Fedora & Solr are available
     */
    pingServices = function() {

        var requestObj = {
            type: "GET",
            url: MMS.configObj.utils,
            dataType: "json",
            cache: false,
            success: function (response) {

                if (typeof response === null || response.isFedoraUp !== 200 || response.isSolrUp !== 'OK') {
                    $("#error").html("<h4 class='alert_error'>Some services are currently not available. Please contact library-support@du.edu for assistance.</h4>");
                    $("#authenticate").attr("disabled", "disabled");
                }
            }
        };

        doAjax(requestObj);
    };

    /**
     * removes tags from input
     * @param value
     */
    sanitizeInput = function(value) {
        return value.replace(/</g, "").replace(/>/g, "");
    };

    /** NOT-USED
     * hides all article blocks except the one specified
     * @param id
     */
    focusForm = function(id) {

        if (id !== "#metadata-forms") {
            $(".optional_fields").hide();
            $("#optional_fields").hide();
        }

        $("article:not(" + id + ", .breadcrumbs)").hide();
    }

    return {
        doAjax: function(requestObj) {
            doAjax(requestObj);
        },
        focusForm: function(id) {
            focusForm(id);
        },
        sanitizeInput: function(value) {
            return sanitizeInput(value);
        },
        pingServices: function() {
            pingServices();
        }
    };

}(jQuery));
MMS.namespace("MMS.controlledVocabularies");

MMS.controlledVocabularies = (function($) {

    "use strict";

    // ** dependencies **/
    // MMS.configObj
    // MMS.utils

    var getVocabularyTerms,
        id,
        init,
        displayVocabularyTerms,
        displayControlledVocabulariesBox,
        selectVocabularyTerm,
        setVocabularyTerm,
        requestObj,
        getRole,
        getTermData,
        displayTermData,
        controlledVocabularyView,
        createControlledVocabularyForm,
        getLists,
        resetLists,
        displayList,
        appendVocabValues,
        saveLocalCreator,
        saveLocalSubject,
        createLocalSubjectsForm,
        validate,
        loadCreatorForm,
        loadSubjectForm,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'controlled-vocabulary-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'controlled-vocabulary-form',
        divID: 'controlledvocabulary',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input id="controlledvocabulary-save-button" type="submit" value="Save"></div>'
    };

    controlledVocabularyView = function() {

        var view = '';
        view += '<article id="controlled-vocabulary-section" class="module width_quarter">';
        view += '<header><h3>Controlled Vocabularies</h3></header>';
        view += '<div id="vocab_search_box" name="vocab_search_box" class="quick_search" >';
        view += '<input name="term" id="vocabTerm" type="text" placeholder="Search" />&nbsp;';
        view += '<p>';
        view += '<select id="vocab-options" name="vocab-options">';
        view += '<option value="ulan" selected>ULAN</option>';
        view += '<option value="aat">AAT</option>';
        view += '<option value="locnames">LC-Names</option>';
        view += '<option value="locsubjects">LC-Subjects</option>';
        view += '<option value="aloracreators">Alora-Creators</option>';
        view += '<option value="alorasubjects">Alora-Subjects</option>';
        view += '</select>&nbsp;';
        view += '<input id="getVocabularies" type="submit" value="Go" />';
        view += '</p>';
        view += '</div>';
        view += '<div id="vocabulary-results"></div>';
        view += '</article>';

        return view;
    };

    /**
     * loads creator form
     */
    loadCreatorForm = function() {

        $('#search-results').empty();
        MMS.view.createView(viewObj);
        createControlledVocabularyForm();
        validate();
        $(".current").html("Creator");
        $("#controlled-vocabulary-form").show();

    };

    /**
     * loads subject form
     */
    loadSubjectForm = function() {

        $('#search-results').empty();
        MMS.view.createView(viewObj);
        createLocalSubjectsForm();
        validate();
        $(".current").html("Subject");
        $("#controlled-vocabulary-form").show();

    };

    /**
     * validates core form fields
     */
    validate = function() {
        $("#controlled-vocabulary-form").validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveLocalCreator();
            }
        });
    };

    /**
     * saves local creator vocab
     */
    saveLocalCreator = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.creatorapi,
            data:  $("#controlled-vocabulary-form").serialize(),
            dataType: "text",
            cache: false,
            success: function (response) {

                if (response === "success") {
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    $("#controlled-vocabulary-form").find('input[type=text], textarea').val('');
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                    return false;
                } else {
                    alert("Record Not Saved.");
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * saves local subject vocab
     */
    saveLocalSubject = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.subjectapi,
            data:  $("#controlled-vocabulary-form").serialize(),
            dataType: "text",
            cache: false,
            success: function (response) {

                if (response === "success") {
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    $("#controlled-vocabulary-form").find('input[type=text], textarea').val('');
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                    return false;
                } else {
                    alert("Record Not Saved.");
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     *  creates local subjects entry form
     */
    createLocalSubjectsForm = function() {

        var view = '';
        view += "<fieldset>";
        view += "<label>";
        view += "* Subject";
        view += "</label>";
        view += "<input id='subject' name='subject[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<label>";

        $("#controlledvocabulary").append(view);
    };

    /**
     * creates local vocabulary entry form
     */
    createControlledVocabularyForm = function() {

        var view = '';
        view += "<fieldset>";
        view += "<label>";
        view += "* Creator";
        view += "</label>";
        view += "<input id='creator' name='creator[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Creator Alternative";
        view += "</label>";
        view += "<input id='creator-alternative' name='creator.alternative[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Nationality";
        view += "</label>";
        view += "<input id='description-nationality' name='description.nationality[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Role";
        view += "</label>";
        view += "<input id='description-role' name='description.role[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Biography";
        view += "</label>";
        view += "<input id='description-creatorbio' name='description.creatorbio[]' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Sex";
        view += "</label>";
        view += "<select name='sex'><option value='Male'>Male</option><option value='Female'>Female</option></select>";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Source";
        view += "</label>";
        view += "<input id='source' name='source' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Earliest Date";
        view += "</label>";
        view += "<input id='earliestdates' name='earliestdates' type='text' class='required' />";
        view += "</fieldset>";
        view += "<fieldset>";
        view += "<label>";
        view += "* Latest Date";
        view += "</label>";
        view += "<input id='latestdates' name='latestdates' type='text' class='required' />";
        view += "</fieldset>";

        $("#controlledvocabulary").append(view);
    };

    /**
     * retrieves role ID
     * @return {*}
     */
    getRole = function() {
        return sessionStorage.getItem("roleID");
    };

    /**
     * retrieves search values and makes api request
     */
    getVocabularyTerms = function() {

        var option,
        term = $("input#vocabTerm").val(),
        checked = $("select#vocab-options");
        term = MMS.utils.sanitizeInput(term);

        if (checked.length > 0) {
            option = checked.val();
        }

        requestObj = {
            type: "POST",
            url: MMS.configObj.vocabUrl,
            data: "term=" + term + "&option=" + option,
            dataType: "json",
            cache: true,
            success: function (response) {
                displayVocabularyTerms(option, response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * retrieves vocabulary based on id
     * @param id
     * @param vocabType
     * @param callback
     */
    getTermData = function(id, vocabType, callback) {

        var data = "id=" + id + "&vocabType=" + vocabType;

        if (callback === undefined) {
            var callback = function (response) {
                displayTermData(id, response);
            };
        }

        requestObj = {
            type: "GET",
            url: MMS.configObj.vocabUrl,
            data: data,
            dataType: "json",
            cache: true,
            success: callback
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * Displays
     * @param id
     * @param response
     */
    displayTermData = function(id, response) {

        var results = '',
        val = $('span#' + id + '-toggle').text();

        if (val === '( + )' ) {
            $('span#' + id + '-toggle').text('( - )');
            $('div#' + id + '-vocab-data').show();
        } else if (val === '( - )') {
            $('div#' + id + '-vocab-data').hide();
            $('span#' + id + '-toggle').text('( + )');
        }

        $.each(response, function(key, value) {

            if (value.subject_id !== undefined) {
                results += '<p><strong>Subject id:</strong> ' + value.subject_id + '</p>';
            }

            if (value.nationalities !== '') {
                results += '<p><strong>Nationality:</strong> ' + value.nationalities + '</p>';
            }

            if (value.role_id !== '') {
                results += '<p><strong>Role:</strong> ' + value.role_id + '</p>';
            }

            if (value.preferred_terms_source_id !== '') {
                results += '<p><strong>Source:</strong> ' + value.preferred_terms_source_id + '</p>';
            }

            if (value.non_preferred_terms_term_text !== '') {
                results += '<p><strong>Alternative name:</strong> ' + value.non_preferred_terms_term_text + '</p>';
            }

            if (value.preferred_biographies_biography_text !== '') {
                results += '<p><strong>Bio:</strong> ' + value.preferred_biographies_biography_text + '</p>';
            }

            if (value.preferred_biographies_birth_date !== '') {
                results += '<p><strong>Birth date:</strong> ' + value.preferred_biographies_birth_date + '</p>';
            }

            if (value.preferred_biographies_death_date !== '') {
                results += '<p><strong>Death date:</strong> ' + value.preferred_biographies_death_date + '</p>';
            }

            if (value.preferred_biographies_sex !== '') {
                results += '<p><strong>Sex:</strong> ' + value.preferred_biographies_sex + '</p>';
            }
        });

        $('div#' + id + '-vocab-data').empty().append(results);
    };

    /**
     * Sets the selected vocabulary term in designated field
     * @param term
     * @param count
     * @param fieldName
     * @returns field
     */
    setVocabularyTerm = function(term, count, fieldName) {

        var field;

        while (count < 50) {  // 50 is an arbritrary number...
            field = $('#' + fieldName + '-' + count).val();
            if (field === '') {
                $('#' + fieldName + '-' + count).val(term);
                break;
            }
            count++;
        }

        return field;
    };

    /**
     * selects vocabulary term and places it in the current form field
     * @param id
     * @param term
     */
    selectVocabularyTerm = function(id, term) {

        var creator,
        repository,
        subject,
        stylePeriod,
        option,
        count = 1,
        callback = function(response) {
            appendVocabValues(response);
        },

        checked = $("select#vocab-options");

        if (getRole() == "2") {
            $("#" + id).removeAttr("disabled");
            $("#" + id).attr("readonly", "readonly");
        }

        if (checked.length > 0) {
            option = checked.val();
        }

        if (option === 'ulan' || option === 'locnames' || option === 'aloracreators') {

            if (option !== 'locnames') {
                getTermData(id, option, callback);
            }

            creator = $('#creator-0').val();

            if (creator === '') {
                setVocabularyTerm(term, 0, 'creator');
            } else {

                repository = $('#coverage-spatial-repository-0').val(term);

                if (repository === '') {
                    setVocabularyTerm(term, 0, 'coverage-spatial-repository');
                } else {
                    setVocabularyTerm(term, count, 'coverage-spatial-repository');
                }
            }

        } else if (option === 'aat' || option === 'locsubjects' || option === 'alorasubjects') {

            stylePeriod = $('#coverage-temporal-styleperiod-0').val();

            if (stylePeriod === '') {
                setVocabularyTerm(term, 0, 'coverage-temporal-styleperiod');
            } else {
                stylePeriod = setVocabularyTerm(term, count, 'coverage-temporal-styleperiod');
            }

            if (stylePeriod === undefined) {

                subject = $('#subject-0').val();

                if (subject === '') {
                    setVocabularyTerm(term, 0, 'subject');
                } else {
                    setVocabularyTerm(term, count, 'subject');
                }
            }
        }
    };

    /**
     * adds additional creator vocabulary fields when a term is selected from the vocab list
     * @param response
     */
    appendVocabValues = function(response) {

        var results = '';
        $.each(response, function(key, value) {
            // TODO: check each value. don't append empty values
            results += '<input name="creator.alternative[]" type="hidden" value="' + value.non_preferred_terms_term_text + '" />';
            results += '<input name="description.creatorbio[]" type="hidden" value="' + value.preferred_biographies_biography_text + '" />';
            results += '<input name="description.nationality[]" type="hidden" value="' + value.nationalities + '" />';
            results += '<input name="description.role[]" type="hidden" value="' + value.role_id + '" />';
            results += '<input name="description.lifedates[]" type="hidden" value="' + value.preferred_biographies_birth_date + '-' + value.preferred_biographies_death_date + '" />';
            results += '<input name="source[]" type="hidden" value="' + value.preferred_terms_source_id + '" />';
        });

        $('div#metadata').append(results);
    };

    /**
     * displays vocabulary terms
     * @param id
     * @param type
     * @param response
     */
    displayVocabularyTerms = function(option, response) {

        var recordset,
        results = '';

        if (option === 'ulan') {

            recordset = response.getty.response.docs;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text_t + "</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData(" + value.id + ", \"ulan\");return false;'><span id='" + value.id + "-toggle'>( + )</span></a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
            });

        } else if (option === 'aat') {

            recordset = response.getty.response.docs;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text_t + "</a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
            });

        } else if (option === 'locnames' || option === 'locsubjects') {

            recordset = response.loc;

            $.each(recordset, function(key, value){
                results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + id + ", $(this).text());return false;'>" + response.loc[key].title + "</a><br /><a href='#'>" + value.id + "</a></li></ul></p>";
            });

        } else if (option === 'aloracreators' || option === 'alorasubjects') {

            recordset = response.local;

            if (recordset.message !== undefined) {
                results += "<p><ul><li>No results found.</li></ul></p>";
                // TODO: not working ...
                $("div#vocabulary-results").empty().append(results);
                return;
            }

            $.each(recordset, function(key, value){
                if (option === 'aloracreators') {
                    results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text + "</a>&nbsp;&nbsp;<a href='#' onclick='MMS.controlledVocabularies.getTermData(" +  value.id + ", \"local\");return false;'><span id='" + value.id + "-toggle'>( + )</span></a><div id='" + value.id + "-vocab-data' class='vocab-data'></div></li></ul></p>";
                } else {
                    results += "<p><ul><li><a href='#' id='" + id + "' onclick='MMS.controlledVocabularies.selectVocabularyTerm(" + value.id + ", $(this).text());return false;'>" + value.preferred_terms_term_text + "</a></li></ul></p>";

                }
            });
        }

        $("div#vocabulary-results").empty().append(results);
    };

    /**
     * displays controlled vocabulary search box
     */
    displayControlledVocabulariesBox = function() {

        $("#controlled-vocabulary-section").show();

        var view = controlledVocabularyView();
        $("#content").append(view);

        $("input#vocabTerm").keyup(function(event){
            if(event.keyCode == 13){
                $("input#getVocabularies").click();
            }
        });

        $("select#vocab-options").keyup(function(event){
            if(event.keyCode == 13){
                $("input#getVocabularies").click();
            }
        });

        $("input#getVocabularies").on("click", function() {
            getVocabularyTerms();
        });
    };

    /**
     *
     */
    resetLists = function() {
        $("select#type-arttypes").val("");
        $("select#type-timeperiods").val("");
        $("select#type-instructors").val("");
    };

    /**
     * retrieves form lists
     */
    getLists = function(callback) {

        var lists = ['arttypes', 'timeperiods', 'instructors'],
        requestObj = {},
        //display,
        i;

        if (callback === undefined) {
            callback = function (response) {
                displayList(response);
            }
        }

        for (i=0;i<lists.length;i++) {

            requestObj.type = "GET";
            requestObj.url = MMS.configObj.vocabUrl;
            requestObj.data = 'vocabType=' + lists[i];
            requestObj.dataType = 'json';
            requestObj.cache = true;
            requestObj.success = callback;

            MMS.utils.doAjax(requestObj);
        }
    };

    /**
     * displays lists
     * @param response
     */
    displayList = function(response) {

        var response = $.parseJSON(response);
        var list;
        var vocabType;
        var arttype = sessionStorage.getItem('arttypes');
        var timeperiod = sessionStorage.getItem('timeperiods');
        var instructor = sessionStorage.getItem('instructors');

        list = "<option value=''>---Select an term---</option>";
        $.each(response, function(key, value) {

            if (value.type) {
                vocabType = value.type;
            }

            if (value.term === arttype || value.term === timeperiod || value.term === instructor) {
                list += "<option value='" + value.term + "' selected>" + value.term + "</option>";
            } else {
                list += "<option value='" + value.term + "'>" + value.term + "</option>";
            }

        });

        $("select#type-" + vocabType).html(list);
        //sessionStorage.removeItem('arttypes');
        //sessionStorage.removeItem('timeperiods');
        //sessionStorage.removeItem('instructors');
    };

    init = function() {
        $("#controlled-vocabulary-section").hide();
    };

    return {
        getVocabularyTerms: function() {
            getVocabularyTerms();
        },
        displayControlledVocabulariesBox: function(event, id) {
            displayControlledVocabulariesBox(event, id);
        },
        selectVocabularyTerm: function(id, term) {
            selectVocabularyTerm(id, term);
        },
        getTermData: function(id, vocabType) {
            getTermData(id, vocabType);
        },
        getLists: function() {
            getLists();
        },
        resetLists: function() {
            resetLists();
        },
        loadCreatorForm: function() {
            loadCreatorForm();
        },
        loadSubjectForm: function() {
            loadSubjectForm();
        },
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.metadata");

MMS.counterObj = MMS.counterObj || {};
MMS.counterObj.count = 0;

MMS.metadata = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var viewObj,
        createMetadataForm,
        createMetadataEditForm,
        createOptionalElementLinks,
        cloneFieldSet,
        constructFieldEvent,
        metadata = "#metadata",
        metadataForm = "#metadata-form",
        metadataForms = "#metadata-forms",
        constructField,
        $optionalField,
        sortObjects,
        $f,
        $fObj,
        repeatField,
        removeField,
        removeClonedField,
        validate,
        saveMetadata,
        loadForm,
        init,
        requestObj,
        getMetadata,
        deleteMetadata,
        mms_metadata_fields,
        cloneRecord,
        createBackLink,
        back,
        clearField,
        appendOptionalField;

    viewObj = {
        content: 'content',
        articleID: 'metadata-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'pid',
        h3Value: '',
        formID: 'metadata-form',
        divID: 'metadata',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>'
    };

    /**
     * constructs the core elements and adds them to the DOM
     * @param objectType
     */
    createMetadataForm = function(objectType) {

        var sortedFields = sortObjects(mms_metadata_fields, 'displayOrder');

        $.each(sortedFields, function( i, field ) {
            $f = constructField( field );
            $f.appendTo(metadata);
        });

        $(metadata).append("<input name='objectType' type='hidden' value='" + objectType + "'/>");
        MMS.controlledVocabularies.getLists();
        sessionStorage.removeItem('arttypes');
        sessionStorage.removeItem('timeperiods');
        sessionStorage.removeItem('instructors');
    };

    /**
     * returns user to their search results
     * @param type
     * @return link
     */
    createBackLink = function(type) {

        var link;
        var linkMessage;

        if (type === 'queue') {
            linkMessage = "Back to Review Queue";
        } else if (type === 'search') {
            $("#search-results").hide();
            linkMessage = "Back to Search Results";
        }

        link = "&nbsp;&nbsp;<a href='#' onclick='MMS.metadata.back(\"" + type + "\");'><img src='../../images/icn_jump_back.png' alt='0' />&nbsp;&nbsp;" + linkMessage + "</a>";

        return link;
    };

    /**
     *
     * @param type
     */
    back = function(type) {

        if (type === 'queue') {
            MMS.queue.getItems();
        } else if (type === 'search') {
            $("#search-results").show();
            $("#content").empty();
        }

        $("#clone-record").empty();
        $("#controlled-vocabulary-section").hide();

        return;
    };

    /**
     * constructs metadata edit form
     * @param response
     * @param pid
     */
    createMetadataEditForm = function(response, pid, type) {

        //console.log(response);

        var counter = 100,
        editForm = "",
        idClass,
        objectType;

        $(".current").html("Edit Metadata");
        $(metadata).empty();

        editForm += "<div id='edit-mode'></div>";
        editForm += "<a href='#' title='Copy Record' onclick='MMS.metadata.cloneRecord()'><img src='../../images/icn_new_article.png' alt='Copy Record' border='0'>&nbsp;Copy record</a>";
        editForm += "<fieldset id='isPid'>";
        editForm += "<label>pid</label>";
        editForm += "<input type='text' value='" + pid + "'  disabled />";
        editForm += "</fieldset>";

        if (type === 'queue') {
            editForm += "<input id='type' name='type' type='hidden' value='" + type + "' />";
        } else if (type === 'search') {
            editForm += "<input id='type' name='type' type='hidden' value='" + type + "' />";
        }

        mms_metadata_fields = JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));
        var sortedFields = sortObjects(mms_metadata_fields, 'displayOrder');

        $.each(sortedFields, function( i, field ) {
            $.each(response, function(key, value) {

                if (field.element === key) {

                    idClass = key.replace(".", "-");

                    if (typeof value === "string") {

                        editForm += "<fieldset class='" + idClass + "-0'>";

                        if (field.repeat === 'true') {
                            editForm += "<label>" + field.label + "&nbsp;<span class='clone'><a href='#' id='" + key + "-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add " + key + "'><span>Add</span></a></span></label>";
                        } else {
                            editForm += "<label>" + field.label + "</label>";
                        }


                        if (field.type === 'select') {

                            if (field.required === "true") {
                                var required = "class='required";
                            }

                            if (field.element === "type.arttype") {
                                sessionStorage.setItem("arttypes", value);
                            } else if (field.element === "date.timeperiod") {
                                sessionStorage.setItem("timeperiods", value);
                            } else if (field.element === "instructor") {
                                sessionStorage.setItem("instructors", value);
                            }

                            editForm += "<select name='" + field.element + "[]' id='" + field.id + "' " + required + "'></select>";
                        }


                        if (field.type === 'text') {
                            editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value + "' " + required +" />";
                        }

                        if (field.type === 'textarea') {
                            editForm += "<textarea id='"+ key + "-" + counter + "' name='" + key + "[]' rows='7' cols='55' " + required + ">" + value + "</textarea> ";
                        }

                        editForm += "</fieldset>";

                    }

                    if (typeof value === "object") {

                        $.each(value, function(key1, value1) {

                            counter++;

                            if (counter > 101) {
                                editForm += "<fieldset class='" + idClass + "-" + counter + "'>";
                            } else {
                                editForm += "<fieldset class='" + idClass + "-0'>";
                            }

                            if (field.repeat === 'true') {

                                if (counter > 101) {
                                    editForm += "<label>" + field.label + "&nbsp;<span class='remove'><a href='#' id='" + key + "-remove' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Remove " + key + "'><span>Del</span></a></span></label>";
                                } else {
                                    editForm += "<label>" + field.label + "&nbsp;<span class='clone'><a href='#' id='" + key + "-0-clone' onclick='MMS.metadata.constructFieldEvent( event, this.id );' title='Add " + key + "'><span>Add</span></a></span></label>";
                                }

                            } else {
                                editForm += "<label>" + field.label + "</label>";
                            }

                            /*
                            if (field.type === 'select') {

                                if (field.required === "true") {
                                    var required = "class='required";
                                }

                                //editForm += "<select name='" + field.id + "[]' id='" + field.id + "' " + required + "'></select>";
                                editForm += "<input id='" + key + "-" + key + "' name='" + key + "[]' type='text' value='test" + value + "' " + required +" />";
                                //editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value1 + "' />";
                            }
                            */

                            if (field.type === 'text') {
                                editForm += "<input id='" + key + "-" + counter + "' name='" + key + "[]' type='text' value='" + value1 + "' " + required +" />";
                            }

                            if (field.type === 'textarea') {
                                editForm += "<textarea id='"+ key + "-" + counter + "' name='" + key + "[]' rows='7' cols='55' " + required + ">" + value1 + "</textarea> ";
                            }

                            editForm += "</fieldset>";

                        });
                    }
                }
            });
        });

        $.each(response, function(key, value) {

            // hidden
            if (key === "collection") {

                editForm += "<input id='" + key + "-0' name='collection' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.system") {

                editForm += "<input id='" + key + "' class='pid' name='pid' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.legacy") {

                editForm += "<input id='identifier-legacy' name='identifier.legacy[]' type='hidden' value='" + value + "' />";

            } else if (key === "identifier.master") {

                editForm += "<input id='identifier-master' name='identifier.master[]' type='hidden' value='" + value + "' />";

            } else if (key === "objectType") {

                objectType = value;
                editForm += "<input name='" + key + "' type='hidden' value='" + value + "' />";

            } else if (key === "date.created") {

                editForm += "<fieldset>";
                editForm += "<label class='datecreated'>" + key + "</label>";
                editForm += "<input class='datecreated' type='text' value='" + value + "' disabled />";
                editForm += "<input class='datecreated' name='" + key + "[]' type='hidden' value='" + value + "'/>";
                editForm += "</fieldset>";

            } else if (key === "date.modified") {

                editForm += "<fieldset>";
                editForm += "<label class='datemodified'>" + key + "</label>";
                editForm += "<input class='datemodified' type='text' value='" + value + "' disabled />";
                editForm += "</fieldset>";

            }
        });

        $.each(sortedFields, function( i, field ) {

            if (field.required === "false") {
                editForm += "<fieldset class='" + field.id + "-0' style='display:none;'>";
                editForm += "<label>" + field.label + "&nbsp;<span class='remove'><a href='#' id='" + field.id + "-0-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id); return false;' title='Remove " + field.element + "'><span>Del</span></a></span></label>";

                if (field.type === "text") {
                    editForm += "<input id='" + field.id + "-0' name='" + field.element + "[]' type='" + field.type + "' value='' />";
                } else if (field.type === "textarea") {
                    editForm += "<textarea id='"+ field.id +"-0' name='" + field.element + "[]' rows='7' cols='55'></textarea> ";
                }
                editForm += "</fieldset>";
            }
        });

        //MMS.controlledVocabularies.getLists();

        viewObj.footer = '<div class="submit_link"><input id="metadata-save-button" type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);
        var link = createBackLink(type);
        $("#pid").append(link);
        $(metadata).append(editForm);
        validate();
        $(".optional_fields").show();
        $("#optional_fields").show();
        $(metadataForms).show();
        createOptionalElementLinks();
        //MMS.controlledVocabularies.displayControlledVocabulariesBox();
    };

    /**
     * binds events to core fields (clone/remove)
     * @param event
     * @param id
     */
    constructFieldEvent = function(event, id) {

        var action,
        idArray = id.split("-"),
        idCount = idArray[idArray.length - 2],
        i,
        newId,
        fieldElement,
        tempArr = [];

        if (idArray[idArray.length - 1] === "clone") {

           idArray.pop();
           idArray.pop();

           for (i=0; i < idArray.length;i++) {
                tempArr.push(idArray[i]);
           }

           newId = tempArr.join("-");
           newId = newId.replace(".", "-");

           action = function() {

               $.each(mms_metadata_fields, function( i, field ) {

                   fieldElement = field.element.replace(".", "-");
                   fieldElement = fieldElement.replace(".", "-");

                   if (newId === fieldElement) {
                       cloneFieldSet( event, field );
                   }
               });
           };

           repeatField( action );

        } else if (idArray[idArray.length - 1] === "remove") {

            idArray.pop();
            for (i=0; i < idArray.length;i++) {
                tempArr.push(idArray[i]);
            }

            newId = tempArr.join("-");

            if (idCount === "0") {
                action = function() { $("#" + newId).val(""); $("." + newId).hide() };
            } else {
                action = function() { $("." + id).remove(); };
            }

            removeField( action );
        }
    };

    /**
     * removes cloned field
     * @param event
     * @param id
     */
    removeClonedField = function(event, id) {
        event.preventDefault();
        event.stopPropagation();
        id = id.replace("-remove", "");
        $("." + id).remove();
    }

    /**
     * removes field - core fields
     * @param action
     */
    removeField = function(action) {
       action();
    };

    /**
     * clones field - core fields
     * @param action
     */
    repeatField = function(action) {
        action();
    };

    /**
     * clears disabled editor vocabulary fields
     * @param id
     */
    clearField = function(id) {
        id = id.replace("-clear", "");
        $('#' + id).val('');
    };

    /**
     * constructs form fields
     * @param filedObj
     * @return fObj
     */
    constructField = function( fieldObj) {

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));
        var field = "";
        var clearField = "";

        if (fieldObj.type === "select") {

            if (fieldObj.required === "true") {
                var required = "class='required";
            }

            field += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";
            field += "<label for='" + fieldObj.id + "'>" + fieldObj.label + "</label>";
            field += "<select name='" + fieldObj.element + "[]' id='" + fieldObj.id + "' " + required + "'></select>";
            field += "</fieldset>";

        } else {

            if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
                clearField = "&nbsp;&nbsp;<a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clear' onclick='MMS.metadata.clearField(this.id);return false;'><img src='" + MMS.configObj.baseUrl + "images/glyphicons_197_remove.png' alt='Remove' /></a>";
            }

            field += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";
            field += "<label>";
            field += fieldObj.label;

            if (fieldObj.repeat === "true") {
                field += "<span class='clone'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Add " + fieldObj.element + "'><span>Add</span></a></span>";
            } else if (fieldObj.repeat === "false") {
                field += "<a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-clone' onclick='MMS.metadata.constructFieldEvent(event, this.id);' ></a>"; //" + fieldObj.element + "'
            }

            if (fieldObj.required === "false") {
                field += "<span class='remove'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-remove' onclick='MMS.metadata.constructFieldEvent(event, this.id);' title='Remove " + fieldObj.element + "'><span>Del</span></a></span>";
            }

            field += "</label>"  + clearField;

            if (fieldObj.type === "text") {
                field += "<input ";
            } else if(fieldObj.type === "textarea") {
                field += "<textarea ";
            }

            field += "id='" + fieldObj.id + "-" + MMS.counterObj.count + "'";
            field += "name='" + fieldObj.element + "[]' ";
            field += "type='" + fieldObj.type +  "' ";

            if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
                field += "disabled='disbled'";
            }

            field += "class='";

            if (fieldObj.required === "true") {
                field += "required";
            }

            field += "'";

            if (fieldObj.type === "text") {
                field += "/>";
            } else if (fieldObj.type === "textarea") {
                field += "rows='14' cols='45'></textarea>";
            }

            field += "</fieldset>";
        }

        if (fieldObj.required === "true") {
            $fObj = $(field);
        } else if (fieldObj.required === "false") {
            $fObj = $(field).hide();
        }

        return $fObj;
    };

    /**
     * generates optional field links
     * @param options

    createOptionalElementLinks = function() {

        $("#optional_fields").empty();

        $.each(mms_metadata_fields, function( i, field ) {

            if (field.required === "false") {

                var menuField = "<li class='icn_categories'><a href='#'>" + field.element + "</a></li>";
                $optionalField = $(menuField).on("click", "a", function(event) {
                                                                    event.stopPropagation();
                                                                    event.preventDefault();
                                                                    $("." + field.id + "-0").show();
                                                               });
                $optionalField.appendTo("#optional_fields");

            }
        });
    };
     */

    /**
     * generates optional field links
     * @param options
     */
    createOptionalElementLinks = function() {

        $("#optional_fields").empty();

        $.each(mms_metadata_fields, function( i, field ) {

            if (field.required === "false") {

                var menuField = "<li class='icn_categories'><a href='#'>" + field.label + "</a></li>";
                $optionalField = $(menuField).on("click", "a", function(event) {
                    event.preventDefault();
                    MMS.metadata.appendOptionalField(field);
                });

                $optionalField.appendTo("#optional_fields");
            }
        });
    };

    /**
     *
     * @param event
     * @param fieldObj
     * @returns {string}
     */
    appendOptionalField = function(field) {
        $("." + field.id + "-0").show();
        location.hash = "#" + field.id + "-0";
    };

    /**
     * clones an existing field
     * @param fieldObj
     */
    cloneFieldSet = function(event, fieldObj) {

        event.preventDefault();
        event.stopPropagation();

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        MMS.counterObj.count++;

        var clone = "";
        var clonedField = "";
        clonedField += "<fieldset class='" + fieldObj.id + "-" + MMS.counterObj.count + "'>";

        clonedField += "<label>";
        clonedField += fieldObj.label;

        clonedField += "&nbsp;<span class='remove'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-remove' onclick='MMS.metadata.removeClonedField(event, this.id);' title='Remove " + fieldObj.element + "'><span>Del</span></a></span>";

        if (fieldObj.vocabulary === "true") {
            //clonedField += "<span class='vocab'><a href='#' id='" + fieldObj.id + "-" + MMS.counterObj.count + "-vocab' onclick='MMS.ui.createControlledVocabulariesDialogBox(event, this.id);' title='Controlled Vocabularies'><span>vocab</span></a></span>";
        }

        clonedField += "</label>";

        if (fieldObj.type === "text") {
            clonedField += "<input ";
        } else if(fieldObj.type === "textarea") {
            clonedField += "<textarea ";
        }

        clonedField += "id='" + fieldObj.id + "-" + MMS.counterObj.count + "'";
        clonedField += "name='" + fieldObj.element + "[]' ";
        clonedField += "type='" + fieldObj.type +  "' ";

        if (fieldObj.vocabulary === "true" && profileObj.roleID == "2") {
            clonedField += "disabled='disabled'";
        }

        clonedField += "class='none ";

        clonedField += "'";

        if (fieldObj.type === "text") {
            clonedField += "/>";
        } else if (fieldObj.type === "textarea") {
            clonedField += "rows='10' cols='45'></textarea>";
        }

        clonedField += "</fieldset>";

        clone = $(clonedField).insertAfter("." + fieldObj.id + "-0");

        return clone;
    };

    /**
     * collects form data and sends to server
     */
    saveMetadata = function() {

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        if (profileObj.roleID === '2') {

            requestObj = {
                type: "PUT",
                url: MMS.configObj.queue,
                data:  $(metadataForm).serialize(),
                dataType: "json",
                cache: true,
                success: function (response) {
                    $('#metadata-form').find('input[type=text], textarea').val('');
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record sent to review queue.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    location.hash = "#header";
                }
            };

            MMS.utils.doAjax(requestObj);

            return;
        }

        var pid = $('.pid').val();
        var type = $('#type').val();

        requestObj = {
            type: "PUT",
            url: MMS.configObj.repository,
            data:  $(metadataForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.updated === 'true') {

                    requestObj = {
                        type: "GET",
                        url: MMS.configObj.repository,
                        data:  "pid=" + pid,
                        dataType: "json",
                        cache: true,
                        success: function (response, type) {

                            $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Updated.</h4>");
                            setTimeout(function() {
                                $("div#actionFeedback").empty();
                            }, 5000);
                            location.hash = "#header";
                            return false;

                            createMetadataEditForm(response, pid, type);
                        }
                    };

                    MMS.utils.doAjax(requestObj);

                } else if (response.created === 'true') {
                    $('#metadata-form').find('input[type=text], textarea').val('');
                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Saved.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                    MMS.controlledVocabularies.resetLists();
                    location.hash = "#header";
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * retrieves record from repository and generates edit form
     * @param event
     * @param pid
     */
    getMetadata = function(event,pid, type) {

        event.preventDefault();

        requestObj = {
            type: "GET",
            url: MMS.configObj.repository,
            data:  "pid=" + pid,
            dataType: "json",
            cache: false,
            success: function (response) {
                createMetadataEditForm(response, pid, type);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * "Clones" record...
     * * The pid is removed from the rendered FORM.  When the user submits the record, the absence of a pid causes
     * the mms system to assign a new pid and therefore create a new record.
     */
    cloneRecord = function() {

        var pid = $('.pid').val();
        $('.pid').remove();
        $('#isPid').remove();
        $('.datecreated').remove();
        $('.datemodified').remove();
        $("div#actionFeedback").empty().append("<h4 class='alert_info'>Your are now working with a copy of record " + pid + ".</h4>");
        setTimeout(function() {
            $("div#actionFeedback").remove();
        }, 10000);
    };

    /**
     * validates core form fields
     */
    validate = function() {
        $(metadataForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveMetadata();
            }
        });
    };

    /**
     * deletes record
     * @param pid
     */
    deleteMetadata = function(event, pid) {

        event.preventDefault();

        var remove = confirm("Are you sure you want to delete this record?");

        if (remove) {

            requestObj = {
                type: "POST",
                url: MMS.configObj.repository,
                data:  "pid=" + pid,
                dataType: "json",
                cache: true,
                success: function (response) {
                    if (response.deleted === 'true') {
                        $("#search-forms").hide();
                        $("div#actionFeedback").empty().append("<h4 class='alert_success'>Record Deleted.</h4>");
                        setTimeout(function() {
                            $("div#actionFeedback").empty();
                        }, 5000);
                        location.hash = "#header";
                    } else {
                        alert('Error: Record not deleted.');
                    }
                }
            };

            MMS.utils.doAjax(requestObj);
        }
        return false;
    };

    /** http://stackoverflow.com/questions/8175093/simple-function-to-sort-a-json-object-using-javascript
     * sorts array of json objects by display order
     * @param array
     * @param key
     * @returns {*}
     */
    sortObjects = function(mms_metadata_fields, key) {

        var array = [];
        for (var i in mms_metadata_fields) {
            array.push(mms_metadata_fields[i]);
        }
        return array.sort(function(a, b) {
            var x = a[key]; var y = b[key];
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        });
    }

    /**
     * loads form based on object type
     * @param objectType
     */
    loadForm = function(objectType) {

        MMS.counterObj.count = 0;
        $('#search-results').empty();
        MMS.view.createView(viewObj);

        if (objectType === "image") {
            var fields = [];
            mms_metadata_fields = JSON.parse(sessionStorage.getItem("mms_image_metadata_fields"));
            createMetadataForm(objectType);
            createOptionalElementLinks();
        }
        validate();
        $(".current").html(objectType + " metadata");
        $("#clone-record").remove();
        $(metadataForms).show();
        $(".optional_fields").show();
        $("#optional_fields").show();
        $("#controlled-vocabulary-section").show();
        MMS.controlledVocabularies.displayControlledVocabulariesBox();

    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(metadataForms).hide();
        $(".optional_fields").hide();

        $(".formType").on("click", function(event) {
            loadForm($(this).attr("id"));
        });
    };

    return {
        getMetadata: function(event, pid, type) {
            getMetadata(event, pid, type);
        },
        deleteMetadata: function(event, pid) {
            deleteMetadata(event, pid);
        },
        removeClonedField: function(event, id) {
            removeClonedField(event, id);
        },
        constructFieldEvent: function(event, id) {
            constructFieldEvent(event, id);
        },
        cloneRecord: function(pid) {
            cloneRecord(pid);
        },
        back: function(type) {
            back(type);
        },
        createMetadataEditForm: function(response, pid, type) {
            createMetadataEditForm(response, pid, type);
        },
        appendOptionalField: function(field) {
            appendOptionalField(field);
        },
        clearField: function(id) {
            clearField(id);
        },
        loadForm: function(id) {
            loadForm(id);
        },
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.user");

MMS.user = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.ui
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var user = "#user",
        userForm = "#user-form",
        userForms = "#user-forms",
        getSessionInfo,
        constructUserAddForm,
        constructUserEditForm,
        listUsers,
        validateUserForm,
        loadForm,
        init,
        saveUserData,
        deleteUserData,
        requestObj,
        saveRequestObj,
        deleteRequestObj,
        requestRoleObj,
        requestCollectionObj,
        requestProfileObj,
        profileRequestObj,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'user-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'user-form',
        divID: 'user',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * validates user forms
     */
    validateUserForm = function() {

        $(userForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveUserData();
            }
        });
    };

    /**
     * constructs Add User form fields
     */
    constructUserAddForm = function() {

        viewObj.footer = '<div class="submit_link"><input type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);

        var fields = "";
        var firstName = "";
        var lastName = "";
        var duID = "";
        var cairUserName = "";
        var roles = "";
        var collections = "";

        firstName += "<fieldset>";
        firstName += "<label>";
        firstName += "* First Name";
        firstName += "</label>";
        firstName += "<input id='firstName' name='firstName' type='text' class='required' />";
        firstName += "</fieldset>";

        lastName += "<fieldset>";
        lastName += "<label>";
        lastName += "* Last Name";
        lastName += "</label>";
        lastName += "<input id='lastName' name='lastName' type='text' class='required' />";
        lastName += "</fieldset>";

        duID += "<fieldset>";
        duID += "<label>";
        duID += "* DU ID";
        duID += "</label>";
        duID += "<input id='duID' name='duID' type='text' class='required' />";
        duID += "</fieldset>";

        /*
        cairUserName += "<fieldset>";
        cairUserName += "<label>";
        cairUserName += "Active Directory Username (Windows Username)";
        cairUserName += "</label>";
        cairUserName += "<input id='cairUserName' name='cairUserName' type='text' />";
        cairUserName += "</fieldset>";
        */

        requestRoleObj = {
            type: "GET",
            url: MMS.configObj.roles,
            dataType: "json",
            cache: true,
            async: false,
            success: function (response) {

                roles += "<fieldset>";
                roles += "<label for='roleID'>* Roles</label>";
                roles += "<select name='roleID' id='roleID' class='required'>";
                roles += "<option value=''>---Assign a role--</option>";
                $.each(response, function(key, value) {
                    if (key != '3') {
                        roles += "<option value='" + key + "'>" + value + "</option>";
                    }
                });
                roles += "</select>";
                roles += "</fieldset>";

                $(user).append(roles);

            }
        };

        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        if (profileObj.roleID == '3') {

            requestCollectionObj = {
                type: "GET",
                url: MMS.configObj.collections,
                dataType: "json",
                cache: true,
                async: false,
                success: function (response) {

                    collections += "<strong>* Assign a Collection</strong>";

                    $.each(response, function(key, value) {
                        collections += "<p><input id='" + value.collectionID + "' name='collections[]' type='radio' value='" + value.collectionID + "' /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                    });

                    $(user).append(collections);
                }
            };

            MMS.utils.doAjax(requestCollectionObj);

        } else {
            collections += "<input id='" + profileObj.collectionID + "' name='collections[]' type='hidden' value='" + profileObj.collectionID + "' />";
            fields += collections;
        }

        MMS.utils.doAjax(requestRoleObj);

        fields += firstName;
        fields += lastName;
        fields += duID;
        //fields += cairUserName;

        $(user).append(fields);

        validateUserForm();

    };

    /**
     * constructs Edit User form fields
     */
    listUsers = function() {

        viewObj.footer = 'null';
        MMS.view.createView(viewObj);

        // get users
        requestObj = {
            type: "GET",
            url: MMS.configObj.users,
            dataType: "json",
            cache: true,
            success: function (response) {

                // TODO: split out into display function
                var userResponse = "";
                userResponse += "<div class='tab_container'>";
                userResponse += "<div id='tab1' class='tab_content'>";
                userResponse += "<table class='tablesorter' cellspacing='0'>";
                userResponse += "<thead>";
                userResponse += "<tr>";
                userResponse += "<th>First Name</th>";
                userResponse += "<th>Last Name</th>";
                userResponse += "<th>Role</th>";
                userResponse += "<th>Active</th>";
                userResponse += "<th>Actions</th>";
                userResponse += "</tr>";
                userResponse += "</thead>";
                userResponse += "<tbody>";

                $.each(response, function(key, value) {

                    userResponse += "<tr>";
                    userResponse += "<td>" + value.firstName + "</td>";
                    userResponse += "<td>" + value.lastName + "</td>";
                    userResponse += "<td>" + value.roleName + "</td>";

                    if (value.isActive === "1") {
                        userResponse += "<td>Yes</td>";
                    } else {
                        userResponse += "<td>No</td>";
                    }

                    userResponse += "<td><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.user.constructUserEditForm(" + value.id + ");'></td>";
                    //delete <!--<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteUserData(" + value.id + "); return false;'>-->
                    userResponse += "</tr>";
                });

                userResponse += "</tbody>";
                userResponse += "</table>";
                userResponse += "</div>";
                userResponse += "</div>";

                $(user).append(userResponse);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * creates edit form
     * @param userID
     */
    constructUserEditForm = function(userID) {

        var profile = "";
        var roles = "";
        var collections = "";
        var isActive = "";

        viewObj.footer = '<div class="submit_link"><input type="submit" value="Save"></div>';
        MMS.view.createView(viewObj);

        $(".current").html("Edit User");

        requestProfileObj = {

            type: "GET",
            url: MMS.configObj.users,
            data: "id=" + userID,
            dataType: "json",
            cache: false,
            async: false,
            success: function (response) {

                profile += "<input name='userID' type='hidden' value='" + userID + "' />";
                profile += "<fieldset>";
                profile += "<label>";
                profile += "* First Name";
                profile += "</label>";
                profile += "<input id='firstName' name='firstName' type='text' value='" + response[0].firstName + "' class='required' />";
                profile += "</fieldset>";

                profile += "<fieldset>";
                profile += "<label>";
                profile += "* Last Name";
                profile += "</label>";
                profile += "<input id='lastName' name='lastName' type='text' value='" + response[0].lastName + "' class='required' />";
                profile += "</fieldset>";

                $(user).append(profile);

                // get roles
                requestRoleObj = {
                    type: "GET",
                    url: MMS.configObj.roles,
                    dataType: "json",
                    cache: false,
                    async: false,
                    success: function (roleResponse) {

                        roles += "<fieldset>";
                        roles += "<label for='roleID'>* Roles</label>";
                        roles += "<select name='roleID' id='roleID' class='required'>";
                        roles += "<option value=''>---Assign a role--</option>";
                        $.each(roleResponse, function(key, value) {
                            if (response[0].roleID === key) {
                                roles += "<option value='" + key + "' selected>" + value + "</option>";
                            } else if (key != '3') {
                                roles += "<option value='" + key + "'>" + value + "</option>";
                            }
                        });
                        roles += "</select>";
                        roles += "</fieldset>";

                        $(user).append(roles);

                    }
                };

                var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

                if (profileObj.roleID == '3') {

                    // get collections
                    requestCollectionObj = {
                        type: "GET",
                        url: MMS.configObj.collections,
                        dataType: "json",
                        cache: false,
                        async: false,
                        success: function (collectionResponse) {

                            collections += "<strong>* Assigned Collection</strong>";

                            $.each(collectionResponse, function(key, value) {

                                if (response[1].collectionID === value.collectionID) {
                                    collections += "<p><input id='" + value.collectionID + "' name='collectionID' type='radio' value='" + value.collectionID + "' checked /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                                } else {
                                    collections += "<p><input id='" + value.collectionID + "' name='collectionID' type='radio' value='" + value.collectionID + "' /><label for='" + value.collectionID + "'>" + value.title + "</label></p>";
                                }
                            });
                        }
                    };

                    MMS.utils.doAjax(requestCollectionObj);

                } else {
                    collections += "<input name='collectionID' type='hidden' value='" + profileObj.collectionID + "' />";
                }

                $(user).append(collections);
                MMS.utils.doAjax(requestRoleObj);

                isActive += "<label>";
                isActive += "isActive";
                isActive += "</label>";

                if (response[0].isActive == "1") {
                    isActive += "<input id='isActive' name='isActive' type='checkbox' value='" + response[0].isActive + "' checked />";
                } else {
                    isActive += "<input id='isActive' name='isActive' type='checkbox' value='" + response[0].isActive + "' />";
                }

                $(user).append(isActive);

            }
        };

        MMS.utils.doAjax(requestProfileObj);
        validateUserForm();
    };

    /**
     * saves user profile data
     */
    saveUserData = function() {

        saveRequestObj = {
            type: "PUT",
            url: MMS.configObj.users,
            data: $(userForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.updated === "true") {
                    listUsers();
                } else if (response.updated === "false") {
                    alert("Error: Update failed.");
                } else {
                    $('#user-form')[0].reset();
                }
            }
        };

        MMS.utils.doAjax(saveRequestObj);
    };

    /**
     * delete user profile data
     * @param userID
     */
    deleteUserData = function(userID) {

        var remove = confirm("Are you sure you want to delete this user?");

        if (remove) {

            deleteRequestObj = {
                type: "POST",
                url: MMS.configObj.users,
                data: "userID=" + userID,
                dataType: "json",
                cache: false,
                success: function (response) {

                    if (response.deleted === "true") {
                        listUsers();
                    } else if (response.deleted === "false") {
                        alert("Error: Update failed.");
                    }
                }
            };

            MMS.utils.doAjax(deleteRequestObj);
        }
    };

    /**
     * retrieves user's session information
     */
    getSessionInfo = function() {

        profileRequestObj = {
            type: "GET",
            url: MMS.configObj.users,
            data: "authenticated=true",
            dataType: "json",
            cache: false,
            success: function (response) {

                sessionStorage.setItem("mms_profile", JSON.stringify(response));
                var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));
                var user = profileObj.firstName + " " + profileObj.lastName + " (" + profileObj.roleName + ")";
                $("#user-role").append(user);

            }
        };

        MMS.utils.doAjax(profileRequestObj);
    };

    /** TODO: re-evaluate this approach
     * loads form based on object type
     */
    loadForm = function(formType) {

        if (formType === "addUser") {
            constructUserAddForm();
            $('#search-results').empty();
            $(".current").html("Add User");
        } else if (formType === "viewUsers") {
            listUsers();
            $('#search-results').empty();
            $(".current").html("Users");
        }
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(userForms).hide();

        $("#addUser").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        $("#viewUsers").on("click", function(event) {
            loadForm($(this).attr("id"));
        });
    };

    return {
        init:function() {
            return init();
        },
        constructUserEditForm:function(userID) {
            return constructUserEditForm(userID);
        },
        deleteUserData:function(userID) {
            return deleteUserData(userID);
        },
        getSessionInfo:function() {
            return getSessionInfo();
        }
    };

}(jQuery));MMS.namespace("MMS.collections");

MMS.collections = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // MMS.ui
    // MMS.configObj
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var collection = "#collection",
        collectionForm = "#collection-form",
        collectionForms = "#collection-forms",
        constructCollectionFields,
        constructEditCollectionFields,
        validate,
        loadForm,
        init,
        saveCollectionData,
        requestObj,
        viewObj;

    viewObj = {
        content: 'content',
        articleID: 'collection-forms',
        articleClass: 'module width_full',
        h3ID: 'null',
        h3Value: '',
        formID: 'collection-form',
        divID: 'collection',
        divClass: 'module_content',
        header: 'null',
        footer: '<div class="submit_link"><input type="submit" value="Save"></div>'
    };

    /** TODO: change method name
     * constructs collection form fields
     */
    constructCollectionFields = function() {

        MMS.view.createView(viewObj);

        var fields = "";
        var title = "";
        var description = "";
        var objectType = "";
        var isActive = "";

        // collection name
        title += "<fieldset>";
        title += "<label>";
        title += "* Title";
        title += "</label>";
        title += "<input id='title' name='title' type='text' class='required' />";
        title += "</fieldset>";

        // collection description
        description += "<fieldset>";
        description += "<label>";
        description += "* Description";
        description += "</label>";
        description += "<input id='description' name='description' type='text' class='required' />";
        description += "</fieldset>";

        isActive += "<input id='isActive' name='isActive' type='hidden' value='1' checked />";

        fields += title;
        fields += description;
        fields += isActive;

        $(collection).append(fields);

        // get object Types
        var objectTypeRequestObj = {

            type: "GET",
            url: MMS.configObj.objectTypes,
            dataType: "json",
            cache: true,
            success: function (response) {

                objectType += "<fieldset>";
                objectType += "<label>";
                objectType += "* Object Type";
                objectType += "</label>";
                objectType += "<br />";
                $.each(response, function(key, value) {
                   objectType += "<p><input id='" + value.objectType + "' name='objectType[]' type='checkbox' value='" + value.objectTypeID + "' /> " + value.objectType + "</p>";
                });

                objectType += "</fieldset>";
                $(collection).append(objectType);
            }
        };

        MMS.utils.doAjax(objectTypeRequestObj);

    };


    /**
     * TODO: change method name
     * constructs Edit User form fields
     */
    constructEditCollectionFields = function() {

        MMS.view.createView(viewObj);

        // get collections
        requestObj = {
            type: "GET",
            url: MMS.configObj.collections,
            dataType: "json",
            cache: true,
            success: function (response) {

                var collectionResponse = "";
                collectionResponse += "<div class='tab_container'>";
                collectionResponse += "<div id='tab1' class='tab_content'>";
                collectionResponse += "<table class='tablesorter' cellspacing='0'>";
                collectionResponse += "<thead>";
                collectionResponse += "<tr>";
                collectionResponse += "<th>Collection Name</th>";
                collectionResponse += "<th>Description</th>";
                collectionResponse += "<th>Active</th>";
                collectionResponse += "<th>Actions</th>";
                collectionResponse += "</tr>";
                collectionResponse += "</thead>";
                collectionResponse += "<tbody>";

                $.each(response, function(key, value) {

                    collectionResponse += "<tr>";
                    collectionResponse += "<td>" + value.title + "</td>";
                    collectionResponse += "<td>" + value.description + "</td>";

                    if (value.isActive === "1") {
                        collectionResponse += "<td>Yes</td>";
                    } else {
                        collectionResponse += "<td>No</td>";
                    }

                    //collectionResponse += "<td><input type='image' src='../../images/icn_edit.png' title='Edit'><input type='image' src='../../images/icn_trash.png' title='Trash'></td>";

                    collectionResponse += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getCollections(event, \"" + value.collectionID + "\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteCollections(event, \"" + value.collectionID + "\"); return false;'></td>";
                    collectionResponse += "</tr>";

                });

                collectionResponse += "</tbody>";
                collectionResponse += "</table>";
                collectionResponse += "</div>";
                collectionResponse += "</div>";

                $(collection).append(collectionResponse);

            }
        };

        MMS.utils.doAjax(requestObj);

    };

    /**
     * saves collection data
     */
    saveCollectionData = function() {

        requestObj = {
            type: "PUT",
            url: MMS.configObj.collections,
            data: $(collectionForm).serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {
                $(collectionForm)[0].reset();
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * loads form based on object type
     */
    loadForm = function(formType) {

        if (formType === "addCollection") {
            constructCollectionFields();
            $(".current").html("Add Collection");
        } else if  (formType === "editCollection") {
            //TODO: build form
        } else if (formType === "deleteCollection") {
            //TODO: build form
        } else if (formType === "viewCollections") {
            constructEditCollectionFields();
            $(".current").html("Collections");
        }
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $(collectionForms).hide();

        $("#addCollection").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        $("#viewCollections").on("click", function(event) {
            loadForm($(this).attr("id"));
        });

        validate();
    };

    /**
     * validates core form fields
     */
    validate = function() {
        $(collectionForm).validate({
            errorClass: "invalid",
            submitHandler: function() {
                saveCollectionData();
            }
        });
    };

    return {
        init:function() {
            return init();
        }
    };

}(jQuery));
MMS.namespace("MMS.login");

MMS.login = (function($) {

    // ** dependencies ** //
    // MMS.utils
    // http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js

    "use strict";

    var authenticate,
        login,
        validate,
        requestObj,
        module = ".module width_full",
        loginForm = "#login-form",
        init,
        logout;

    /**
     * sends the user's login credentials to the server
     */
    authenticate = function() {

        requestObj = {
            type: "POST",
            url: MMS.configObj.authenticate,
            data: $(loginForm).serialize(),
            dataType: "json",
            cache: true,
            success: function (response) {
                $(module).hide();
                login(response);
            }
        };

         $("h3#message").ajaxStart(function() {
            $("#authenticate").attr("disabled", "disabled");
         });

        MMS.utils.doAjax(requestObj);

    };

    /**
     * checks the response and logs the user into the system
     * @param response
     */
    login = function(response) {
        if (response.isAuthenticated === "false") {
            $("#error").html("<h4 class='alert_error'>Authentication Failed.</h4>");
            $("#authenticate").removeAttr("disabled");
        } else if(response.isAuthenticated === "true") {
            window.location.replace(MMS.configObj.dashboard);
        }
    };

    /**
     * validates login form fields
     */
    validate = function() {
        $("#login-form").validate({
            errorClass: "invalid",
            submitHandler: function() {
                authenticate();
            }
        });
    };

    /**
     * destroys session
     */
    logout = function() {
        $("#logout").click(function() {

            requestObj = {
                type: "GET",
                url: MMS.configObj.logout,
                dataType: "json",
                success: function (response) {
                    if (response.logout === "true") {
                        sessionStorage.removeItem("mms_profile");
                        window.location.replace(MMS.configObj.sslBaseUrl);
                    }
                }
            };

            MMS.utils.doAjax(requestObj);

        });

        return false;
    };

    init = function() {
        validate();
        logout();
    }

    return {
        init: function() {
            init();
        }
    };

}(jQuery));MMS.namespace("MMS.search");

MMS.search = (function($) {

    "use strict";

    var doQuickSearch,
        spellCheck,
        term,
        searchString,
        didYouMeanSearch,
        didYouMeanTerm,
        displaySearchResponse,
        requestObj,
        init,
        viewObj,
        error = "<h4 class='alert_error'>The search server is currently not available.  Please contact library-support@du.edu for assistance.</h4>";


    viewObj = {
        content: 'search-results',
        articleID: 'search-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'search-form',
        divID: 'search',
        divClass: 'tab_container',
        header: '<div class="pagination"></div>',
        footer: '<div class="pagination"></div>'
    };

    /**
     * performs a quick search
     * @param event
     */
    doQuickSearch = function(event) {

        $("#content").empty();

        event.preventDefault();

        term = $("input#quickSearch").val();
        term = MMS.utils.sanitizeInput(term);

        if (term === "") {
            return $("#actionFeedback").html("<h4 class='alert_error'>Please enter a search term</h4>");
        }

        searchString = $("#search_box").serialize();

        $("#search").empty();
        $("#actionFeedback").empty();

        requestObj = {
            type: "GET",
            url: MMS.configObj.search,
            data: $("#search_box").serialize(),
            dataType: "json",
            cache: true,
            success: function (response) {

                if (response.error == 500) {
                    $("#error").html(error);
                } else {
                    $("#error").html("");
                    MMS.view.createView(viewObj);
                    displaySearchResponse(response);
                }
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * parses and displays search response
     * @param responseObj
     */
    displaySearchResponse = function(responseObj) {

        var results = "";
        var paginationArr = [];
        var page = "";
        var profileObj = JSON.parse(sessionStorage.getItem("mms_profile"));

        //if (term.trim().indexOf(' ') === -1) {
            //spellCheck(responseObj);
        //}

        $("#search_box")[0].reset();
        $("#search-message").text("You searched for: " + term);
        $(".current").html("Search Results");

        if (responseObj.response.numFound === 0) {
            $("#search-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>No Results Found.</h4>");
            return;
        }

        results += "<div>";
        results += "<div>";
        results += "<table class='tablesorter' cellspacing='0'>";
        results += "<thead>";
        results += "<tr>";
        results += "<th>Records Found: " + responseObj.response.numFound + "</th>";
        results += "<th>Actions</th>";
        results += "</tr>";
        results += "</thead>";
        results += "<tbody id='pages'>";

        $.each(responseObj.response.docs, function(key, value) {

            page += "<tr>";
            page += "<td width='85%'>";
            page += "<table width='85%' style='border-bottom: 1px dotted #ccc;'>";
            page += "<tr align='top'>";

            if (value.identifier_t[0] !== undefined) {
                page += "<td width='30%' align='center'><p><img src='" + MMS.configObj.nas + value.identifier_t[0] + "' alt='" + value.title_t[0] + "' border='1'></p></td>";
            }
            page += "<td width='40%' align='left'>";
            if (value.title_t !== undefined) {
                page += "<p><strong>Title:</strong> " + value.title_t[0] + "</p>";
            }
            if (value.creator_t !== undefined) {
                page += "<p><strong>Creator:</strong> " + value.creator_t[0] + "</p>";
            }

            page += "</td>";
            page += "</tr>";
            page += "</table>";
            page += "</td>";
            //page += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.id + "\", \"search\");'><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \"" + value.id + "\"); return false;'></td>";
            page += "<td width='28%'>";
            page += "<input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.id + "\", \"search\");'>";

            if (profileObj.roleID === "1") {
                page += "<input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.metadata.deleteMetadata(event, \"" + value.id + "\"); return false;'>";
            }

            page += "</td>";

            page += "</tr>";

            paginationArr.push(page);
            page = "";

        });

        results += "</tbody>";
        results += "</table>";
        results += "</div>";
        results += "</div>";

        $("#search").append(results);
        $("#search-results").show();

        MMS.pagination.init(paginationArr);
    };

    /** NOT USED...causes performance issues at server level
     * suggest a correct spelling of a search term
     * @param responseObj
     */
    spellCheck = function(responseObj) {

        var correctSpelling;

        $.each(responseObj.spellcheck.suggestions, function(key, value) {

            if (value !== "true") {
                if (value.suggestion !== undefined) {
                    $.each(value.suggestion, function(key, value) {
                        if (key === 0) {
                            didYouMeanTerm = value.word.trim();
                            correctSpelling = "<a href='#' id='didYouMeanSearch'>" + value.word.trim() + "</a>";
                        }

                    });
                }
            }
        });

        if (correctSpelling !== undefined) {
            $("#searchActionFeedback").html("<h4 class='alert_warning'>Did you mean: " + correctSpelling + "</h4>");
            $("#didYouMeanSearch").on("click", function(event) {
                didYouMeanSearch();
            });
        }
    };

    /** NOT USED
     * executes a search using the "did you mean" term
     */
    didYouMeanSearch = function() {

        $("#search").empty();
        $("#searchActionFeedback").empty();

        var newSearchString = searchString.replace(term, didYouMeanTerm);
        term = didYouMeanTerm;

        requestObj = {
            type: "GET",
            url: MMS.configObj.search,
            data: newSearchString,
            dataType: "json",
            cache: true,
            success: function (response) {

                if (response.error == 500) {
                    $("#error").html(error);
                } else {
                    $("#error").html("");
                    displaySearchResponse(response);
                }
            }
        };

        MMS.utils.doAjax(requestObj);
    }

    /**
     * binds events to HTML elements
     */
    init = function() {

        $("#search-forms").hide();
        $("form.quick_search").submit(function(event) {
            doQuickSearch(event);
        });
    };

    return {
        init:function() {
            return init();
        }
    };

}(jQuery));MMS.namespace("MMS.pagination");

MMS.pagination = (function($) {

    "use strict";

    var pages,
        currentPage = 1,
        pageCount,
        recordsPerPage = 4,
        renderPagingControls,
        renderPage,
        recordCount,
        pagination,
        next,
        previous,
        init;

    /**
     * calculates the page count
     */
    pageCount = function() {
        return Math.ceil(recordCount/recordsPerPage);
    };

    /**
     * renders page controls
     */
    renderPagingControls = function() {

        $("div.pagination").empty();

        var pagingControls = "";
        pagingControls += "<ul id='pagination-flickr'>";
        pagingControls += "<li><a href='#' onclick='MMS.pagination.previous(" + currentPage + ")'>Previous</a></li>";

        for (var i=1; i<=pageCount(); i++) {

            if (i !== currentPage) {

                if (pageCount() <= 20 ) {
                    pagingControls += "<li><a href='#' onclick='MMS.pagination.renderPage(" + i + "); return false;'>" + i + "</a></li>";
                //} else if (pageCount() > 20) {
                    //pagingControls += "<li><a href='#' onclick='MMS.pagination.renderPage(" + i + "); return false;'>" + i + "</a></li>";
                }

            } else {
                pagingControls += "<li class='active'>" + i + "</li>";
                currentPage = i;
            }
        }
        pagingControls += "<li><a href='#' onclick='MMS.pagination.next(" + currentPage + ")'>Next</a></li>";
        pagingControls += "</ul>";

        $("div.pagination").append(pagingControls);
    };

    /**
     * moves to the next page
     * @param current
     */
    next = function(current) {

        if (current < pageCount()) {
            var nextPage = current + 1;
            renderPage(nextPage);
        }
    };

    /**
     * moves to the previous page
     * @param current
     */
    previous = function(current) {

        if (current > 1) {
            var previousPage = current -1;
            renderPage(previousPage);
        }
    };

    /**
     * displays current page
     * @param page
     */
    renderPage = function(page) {

        currentPage = page;
        var page = (page-1);
        renderPagingControls();

        $("#pages").empty();
        for (var i = (page)*recordsPerPage; i < ((page)*recordsPerPage) + recordsPerPage; i++) {
            $("#pages").append(pages[i]);
        }

    };

    /**
     * initializes pagination method
     * param @paginationArr
     */
    init = function(paginationArr) {

        pages = paginationArr;
        recordCount = paginationArr.length;
        renderPage(1);

    }

    return {
        init:function(paginationArr) {
            return init(paginationArr);
        },
        renderPage:function(page) {
            return renderPage(page);
        },
        next:function(page) {
            return next(page);
        },
        previous:function(page) {
            return previous(page);
        }
    };

}(jQuery));MMS.namespace("MMS.batch");

MMS.batch = (function($) {

    "use strict";

    var getBatchFilesAndMetadata,
        displayBachFileRecords,
        ingest,
        requestObj,
        viewObj,
        init;

    viewObj = {
        content: 'content',
        articleID: 'batch-ingest-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'batch-ingest-form',
        divID: 'batch-ingest',
        divClass: 'module_content',
        header: '<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>',
        footer: '<div class="submit_link"><input class="ingest" type="button" onclick="MMS.batch.ingest();" value="Ingest"></div>'
    };

    /**
     * retrieves objects and metadata
     */
    getBatchFilesAndMetadata = function() {

        MMS.utils.focusForm("#batch-ingest-forms");

        requestObj = {
            type: "GET",
            url: MMS.configObj.batch,
            dataType: "json",
            cache: true,
            success: function (response) {
                MMS.view.createView(viewObj);
                displayBachFileRecords(response);
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * displays batch records
     * @param response
     */
    displayBachFileRecords = function(response) {

        $(".current").html("Batch");

        if (response.length === 0) {
            $("#batch-ingest-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no records to process.</h4>");
            return;
        }

        var results = "";
        results += "<div>";
        results += "<div>";
        results += "<table class='tablesorter' cellspacing='0'>";
        results += "<thead>";
        results += "<tr>";
        results += "<th>Batch Records</th>";
        results += "<th>Status</th>";
        results += "</tr>";
        results += "</thead>";
        results += "<tbody>";

        $.each(response, function(key, value) {

            if (value.object != "") {
                results += "<input name='pids[]' type='hidden' value='" + value.pid + "' />";
                //results += "<input name='identifiers[]' type='hidden' value='" + value.identifier + "' />";
            }

            results += "<tr>";
            results += "<td width='85%'>";
            results += "<table width='85%' style='border-bottom: 1px dotted #ccc;'>";
            results += "<tr align='top'>";

            if (value.object != "") {
                results += "<td width='30%' align='center'><p><img src='" + value.object + "' alt='" + value.title + "' border='1'></p></td>";
            } else {
                results += "<td width='30%' align='center'><p>No Object.</p></td>";
            }

            results += "<td width='40%' align='left'>";
            results += "<p><strong>Pid:</strong> " + value.pid + "</p>";
            results += "<p><strong>Title:</strong> " + value.title + "</p>";
            results += "<p><strong>Creator:</strong> " + value.creator + "</p>";
            results += "<p><strong>Identifier:</strong> " + value.identifier + "</p>";
            results += "</td>";
            results += "</tr>";
            results += "</table>";
            results += "</td>";

            if (value.object != "") {
                results += "<td width='28%'>complete.</td>";
            } else {
                results += "<td width='28%'>incomplete.</td>";
            }
            results += "</tr>";

        });

        results += "</tbody>";
        results += "</table>";
        results += "</div>";
        results += "</div>";

        $("#batch-ingest").empty().append(results);
        $("#batch-ingest-forms").show();

    };

    /**
     * batch ingest
     */
    ingest = function() {

        requestObj = {

            type: "POST",
            url: MMS.configObj.batch,
            data: $("#batch-ingest-form").serialize(),
            dataType: "json",
            cache: false,
            success: function (response) {

                if (response.success === false) {
                    $("div#actionFeedback").empty().append("<h4 class='alert_info'>Only complete records are processed.</h4>");
                    setTimeout(function(){ $("div#actionFeedback").empty(); }, 4000);
                } else {

                    $("#batch-ingest").empty();
                    $("#batch-ingest-forms").remove();
                    $("div#actionFeedback").empty().append("<h4 class='alert_info'>Records processing complete.</h4>");
                    setTimeout(function(){ $("div#actionFeedback").empty(); }, 4000);

                }
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    init = function() {

        $("#batch-ingest-forms").hide();

        $("#batch").on("click", function(event) {
            getBatchFilesAndMetadata($(this).attr("id"));
        });

    };

    return {
        init:function() {
            return init();
        },
        ingest:function() {
            return ingest();
        }
    };

}(jQuery));
MMS.namespace("MMS.xml");

MMS.xml = (function($) {

    // ** dependencies ** //

    "use strict";

    var getXMLFileNames,
        displayXmlFilesNames,
        requestObj,
        saveXml,
        viewObj,
        createUploadArea,
        init;

    viewObj = {
        content: 'content',
        articleID: 'xml-forms',
        articleClass: 'module width_3_quarter',
        h3ID: 'null',
        h3Value: '',
        formID: 'xml-form',
        divID: 'xml',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * constructs Edit User form fields
     */
    getXMLFileNames = function() {

        requestObj = {
            type: "GET",
            url: MMS.configObj.xml,
            dataType: "json",
            cache: true,
            success: function (response) {
                MMS.view.createView(viewObj);
                displayXmlFilesNames(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * displays xml file names
     * @param response
     */
    displayXmlFilesNames = function(response) {

        $(".current").html("Xml");

        var xmlFiles = "";
         xmlFiles += "<div class='tab_container'>";
         xmlFiles += "<div id='tab1' class='tab_content'>";
         xmlFiles += "<table class='tablesorter' cellspacing='0'>";
         xmlFiles += "<thead>";
         xmlFiles += "<tr>";
         xmlFiles += "<th>XML File</th>";
         xmlFiles += "<th>Actions</th>";
         xmlFiles += "</tr>";
         xmlFiles += "</thead>";
         xmlFiles += "<tbody>";

        $.each(response, function(key, value) {

            xmlFiles += "<input name='xmlFiles[]' type='hidden' value='" + value.fileName + "' />";
            xmlFiles += "<tr>";
            xmlFiles += "<td>" + value.fileName + "</td>";
            xmlFiles += "<td><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.user.deleteXmlFile(\"" + value.fileName + "\"); return false;'></td>";
            xmlFiles += "</tr>";
            // <input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.xml.getXml(\"" + value.fileName + "\");return false;'>

        });

        xmlFiles += "</tbody>";
        xmlFiles += "</table>";
        xmlFiles += "</div>";
        xmlFiles += "</div>";

        $("#xml").append(xmlFiles);
        $("#xml-forms").show();

    };

    /**
     * retrieves xml string
     * @param string file

    getXml = function(file) {

        requestObj = {
            type: "GET",
            url: MMS.configObj.xml,
            data: "file=" + file,
            dataType: "json",
            cache: true,
            success: function (response) {
                constructXmlEditForm(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    }
     */

    /**
     * constructs edit form based on imported xml
     * @param string xml

    constructXmlEditForm = function(xml) {

        $("#xml").empty();
        $(".current").html("Edit Xml");

        var xmlForm = "";

        $.each(xml, function(key, value) {

            if (typeof value === "object") {

                $.each(value, function(key1, value1) {

                    if (!$.isEmptyObject(value1)) {

                        xmlForm += "<fieldset>";
                        xmlForm += "<label for='" + key + "'>";
                        xmlForm += key;
                        xmlForm += "</label>";

                        if (key === "description") {
                            xmlForm += "<textarea rows='7' cols='55' id='" + key + "' name='" + key + "[]' >" + value1 + "</textarea>";
                        } else {
                            xmlForm += "<input id='" + key + "' name='" + key + "[]' type='text' value='" + value1 + "' />";
                        }
                        xmlForm += "</fieldset>";

                    }
                });

            } else if (!$.isEmptyObject(value)) {

                xmlForm += "<fieldset>";
                xmlForm += "<label for='" + key + "'>";
                xmlForm += key;
                xmlForm += "</label>";
                xmlForm += "<input id='" + key + "' name='" + key + "[]' type='text' value='" + value + "' class='required' />";
                xmlForm += "</fieldset>";

            }

        });

        $("#xml").append(xmlForm);
    };
     */

    /**
     *  sends xml to server
     */
    saveXml = function(file) {

        var xmlFiles = [];

        for (var i in file) {
            xmlFiles.push(file[i].name);
        }

        requestObj = {
            type: "PUT",
            url: MMS.configObj.xml,
            data: {'xmlFiles': xmlFiles},
            dataType: "json",
            cache: false,
            success: function (response) {

                $("#xml-forms").remove();

                if (response.created === 'true') {

                    $("div#actionFeedback").empty().append("<h4 class='alert_success'>XML files imported.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                } else {
                    $("div#actionFeedback").empty().append("<h4 class='alert_error'>XML file import failed. Submit Service Now ticket for assistance.</h4>");
                    setTimeout(function() {
                        $("div#actionFeedback").empty();
                    }, 5000);
                }

                location.hash = "#header";
            }
        };

        MMS.utils.doAjax(requestObj);
    }

    /**
     * creates drag and drop upload area
     */
    createUploadArea = function() {

        MMS.view.createView(viewObj);

        requestObj = {
            type: "GET",
            url: MMS.configObj.uploadUrl,
            dataType: "html",
            cache: false,
            success: function (response) {
                $("#xml").append(response);
            }
        };

        MMS.utils.doAjax(requestObj);
    };

    /**
     * Hides form and binds load form event when dashboard is loaded
     */
    init = function() {

        $("#view_xml").on("click", function() {
            getXMLFileNames();
        });
    };

    return {
        init:function() {
            return init();
        },
        saveXml:function(file) {
            return saveXml(file);
        },
        createUploadArea:function() {
            return createUploadArea();
        }
    };

}(jQuery));MMS.namespace("MMS.queue");

MMS.queue = (function($) {

    "use strict";

    var viewObj,
        getItems,
        requestObj,
        listItems;

    viewObj = {
        content: 'content',
        articleID: 'queue-forms',
        articleClass: 'module width_full',
        h3ID: 'null',
        h3Value: '',
        formID: 'queue-form',
        divID: 'queue',
        divClass: 'module_content',
        header: 'null',
        footer: 'null'
    };

    /**
     * retrieves queue items
     * @return void
     */
    getItems = function() {

        requestObj = {
            type: "GET",
            url: MMS.configObj.queue,
            dataType: "json",
            cache: false,
            success: function (response) {
                listItems(response);
            }
        };

        MMS.utils.doAjax(requestObj);

        return false;
    };

    /**
     * lists queue items
     * @param response
     * @return void
     */
    listItems = function(response) {

        $(".current").html("Review Queue");
        $("#search-results").empty();

        MMS.view.createView(viewObj);

        if (response.length === 0) {
            $("#queue-forms").remove();
            $("div#actionFeedback").empty().append("<h4 class='alert_info'>There are no items in queue.</h4>");
            return;
        }

        var itemsResponse = "";
        itemsResponse += "<div class='tab_container'>";
        itemsResponse += "<div id='tab1' class='tab_content'>";
        itemsResponse += "<table class='tablesorter' cellspacing='0'>";
        itemsResponse += "<thead>";
        itemsResponse += "<tr>";
        itemsResponse += "<th>Pid</th>";
        itemsResponse += "<th>Title</th>";
        itemsResponse += "<th>Created By</th>";
        itemsResponse += "<th>Date Created</th>";
        itemsResponse += "<th>Actions</th>";
        itemsResponse += "</tr>";
        itemsResponse += "</thead>";
        itemsResponse += "<tbody>";

        $.each(response, function(key, value) {

            itemsResponse += "<tr>";
            itemsResponse += "<td>" + value.pid + "</td>";
            itemsResponse += "<td>" + value.title + "</td>";
            itemsResponse += "<td>" + value.name + "</td>";
            itemsResponse += "<td>" + value.timestamp + "</td>";
            itemsResponse += "<td width='28%'><input type='image' src='../../images/icn_edit.png' title='Edit' onclick='MMS.metadata.getMetadata(event, \"" + value.pid + "\", \"queue\");'</td>";
            // ><input type='image' src='../../images/icn_trash.png' title='Trash' onclick='MMS.queue.deleteItem(event, \"" + value.queueID + "\"); return false;'>
            itemsResponse += "</tr>";

        });

        itemsResponse += "</tbody>";
        itemsResponse += "</table>";
        itemsResponse += "</div>";
        itemsResponse += "</div>";

        $('#search-results').empty();
        $('#queue').append(itemsResponse);

    };

    return {
        getItems: function() {
            getItems();
        }
    };

}(jQuery));
MMS.namespace("MMS.view");

MMS.view = (function($) {

    "use strict";

    var createView;

    createView = function(viewObj) {

        var view = '';
        view += '<div id="actionFeedback"></div>';
        view += '<div id="error"></div>';
        view += '<article id="' + viewObj.articleID + '" class="' + viewObj.articleClass + '">';
        view += '<header>';

        if (viewObj.h3ID !== 'null') {
            view += '<h3 id="' + viewObj.h3ID + '">' + viewObj.h3Value + '</h3>';
        }

        if (viewObj.header !== 'null') {
            view += viewObj.header;
        }

        view += '</header>';
        view += '<form id="' + viewObj.formID + '">';
        view += '<div id="' + viewObj.divID + '" class="' + viewObj.divClass + '"></div>';
        view += '<footer>';

        if (viewObj.footer !== 'null') {
            view += viewObj.footer;
        }

        view += '</footer>';
        view += '</form>';
        view += '</article>';

        $("#" + viewObj.content).empty().append(view);

    }

    return {
        createView: function(viewObj) {
            createView(viewObj);
        }
    };

}(jQuery));
$(function() {

  var imageRecordFields = {
    "titleSet": {
        "label": "Title",
        "element":"title",
        "id": "title",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 2,
        "required": "true"
    },
    "creatorSet": {
        "label": "Creator",
        "element":"creator",
        "id":"creator",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 3,
        "required": "true"
    },
    "descriptionSet": {
        "label": "Description",
        "element":"description",
        "id":"description",
        "type": "textarea",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 7,
        "required": "true"
    },
    "subjectSet": {
        "label": "Subject",
        "element":"subject",
        "id":"subject",
        "type": "text",
        "vocabulary": "true",
        "repeat": "true",
        "displayOrder": 8,
        "required": "true"
    },
    "typeSet": {
        "label": "Type",
        "element":"type",
        "id":"type",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 8,
        "required": "true"
    },
    "formatSet": {
        "label": "Format",
        "element":"format",
        "id":"format",
        "type": "text",
        "vocabulary": "true",
        "repeat": "false",
        "displayOrder": 8,
        "required": "true"
    },
    "identifierSet": {
        "label": "Identifier",
        "element":"identifier",
        "id":"identifier",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 16,
        "required": "true"
    },
    "instructorSet": {
        "label": "Instructor",
        "element":"instructor",
        "id":"type-instructors",
        "type": "text",
        "vocabulary": "false",
        "repeat": "false",
        "displayOrder": 17,
        "required": "false"
    }
  };

    sessionStorage.setItem("mms_image_metadata_fields", JSON.stringify(imageRecordFields));
});$(function() {

    MMS.configObj = MMS.configObj || {};

    if (document.domain === "mms.library.du.edu") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    } else if (document.domain === "lib-devmms.cair.du.edu") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    } else if (document.domain === "lib.dev") {
        MMS.configObj.sslBaseUrl = "https://" + document.domain + "/ereserves/";
        MMS.configObj.baseUrl = "http://" + document.domain + "/ereserves/";
    }

    MMS.configObj.authenticate = MMS.configObj.sslBaseUrl + "index.php/admin/login";
    MMS.configObj.utils = MMS.configObj.sslBaseUrl + "index.php/utils/utils/ping_services";
    MMS.configObj.logout = MMS.configObj.baseUrl + "index.php/admin/login/logout";
    MMS.configObj.dashboard = MMS.configObj.baseUrl + "index.php/admin/dashboard";
    MMS.configObj.vocabUrl = MMS.configObj.baseUrl + "index.php/admin/controlled_vocabularies";
    MMS.configObj.uploadUrl = MMS.configObj.baseUrl + "libs/plupload/upload.html";
    MMS.configObj.roles = MMS.configObj.baseUrl + "index.php/admin/roles";
    MMS.configObj.users = MMS.configObj.baseUrl + "index.php/admin/users";
    MMS.configObj.collections = MMS.configObj.baseUrl + "index.php/admin/collections";
    MMS.configObj.ingest = MMS.configObj.baseUrl + "index.php/admin/ingest";
    MMS.configObj.search = MMS.configObj.baseUrl + "index.php/admin/search";
    MMS.configObj.repository = MMS.configObj.baseUrl + "index.php/admin/repository";
    MMS.configObj.objectTypes = MMS.configObj.baseUrl + "index.php/admin/object_types";
    MMS.configObj.batch = MMS.configObj.baseUrl + "index.php/admin/batch";
    MMS.configObj.xml = MMS.configObj.baseUrl + "index.php/admin/xml";
    MMS.configObj.nas = MMS.configObj.baseUrl + "index.php/admin/nas?object=";
    MMS.configObj.queue = MMS.configObj.baseUrl + "index.php/admin/queue";
    MMS.configObj.creatorapi = "http://" + document.domain + "/vocabularies-service/index.php/alora/creators";
    MMS.configObj.subjectapi = "http://" + document.domain + "/vocabularies-service/index.php/alora/subjects";
});
$(function() {

    MMS.login.init();
    MMS.metadata.init();
    MMS.user.init();
    MMS.collections.init();
    MMS.controlledVocabularies.init();
    MMS.search.init();
    MMS.batch.init();
    MMS.xml.init();

});
